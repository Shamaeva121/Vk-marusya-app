{"ast":null,"code":"import _objectSpread from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar C = s => {\n  throw TypeError(s);\n};\nvar S = (s, a, t) => a.has(s) || C(\"Cannot \" + t);\nvar n = (s, a, t) => (S(s, a, \"read from private field\"), t ? t.call(s) : a.get(s)),\n  u = (s, a, t) => a.has(s) ? C(\"Cannot add the same private member more than once\") : a instanceof WeakSet ? a.add(s) : a.set(s, t),\n  o = (s, a, t, i) => (S(s, a, \"write to private field\"), i ? i.call(s, t) : a.set(s, t), t),\n  M = (s, a, t) => (S(s, a, \"access private method\"), t);\nimport { initialize as G, teardown as V, generatePlayerInitTime as F, PlaybackTypes as R, toMuxVideoURL as U, MediaError as At, getError as W, CmcdTypeValues as D, addCuePoints as w, getCuePoints as H, getActiveCuePoint as $, addChapters as j, getActiveChapter as q, getMetadata as z, getStartDate as X, getCurrentPdt as J, getStreamType as Z, getTargetLiveWindow as Q, getLiveEdgeStart as tt, getSeekable as et, getEnded as it, getChapters as rt, toPlaybackIdFromSrc as st, toPlaybackIdParts as nt } from \"@mux/playback-core\";\nvar Y = () => {\n    try {\n      return \"0.26.1\";\n    } catch (_unused) {}\n    return \"UNKNOWN\";\n  },\n  B = Y(),\n  P = () => B;\nimport { CustomVideoElement as I, Events as bt } from \"custom-media-element\";\nvar k = \"\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xml:space=\\\"preserve\\\" part=\\\"logo\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2\\\" viewBox=\\\"0 0 1600 500\\\"><g fill=\\\"#fff\\\"><path d=\\\"M994.287 93.486c-17.121 0-31-13.879-31-31 0-17.121 13.879-31 31-31 17.121 0 31 13.879 31 31 0 17.121-13.879 31-31 31m0-93.486c-34.509 0-62.484 27.976-62.484 62.486v187.511c0 68.943-56.09 125.033-125.032 125.033s-125.03-56.09-125.03-125.033V62.486C681.741 27.976 653.765 0 619.256 0s-62.484 27.976-62.484 62.486v187.511C556.772 387.85 668.921 500 806.771 500c137.851 0 250.001-112.15 250.001-250.003V62.486c0-34.51-27.976-62.486-62.485-62.486M1537.51 468.511c-17.121 0-31-13.879-31-31 0-17.121 13.879-31 31-31 17.121 0 31 13.879 31 31 0 17.121-13.879 31-31 31m-275.883-218.509-143.33 143.329c-24.402 24.402-24.402 63.966 0 88.368 24.402 24.402 63.967 24.402 88.369 0l143.33-143.329 143.328 143.329c24.402 24.4 63.967 24.402 88.369 0 24.403-24.402 24.403-63.966.001-88.368l-143.33-143.329.001-.004 143.329-143.329c24.402-24.402 24.402-63.965 0-88.367s-63.967-24.402-88.369 0L1349.996 161.63 1206.667 18.302c-24.402-24.401-63.967-24.402-88.369 0s-24.402 63.965 0 88.367l143.329 143.329v.004ZM437.511 468.521c-17.121 0-31-13.879-31-31 0-17.121 13.879-31 31-31 17.121 0 31 13.879 31 31 0 17.121-13.879 31-31 31M461.426 4.759C438.078-4.913 411.2.432 393.33 18.303L249.999 161.632 106.669 18.303C88.798.432 61.922-4.913 38.573 4.759 15.224 14.43-.001 37.214-.001 62.488v375.026c0 34.51 27.977 62.486 62.487 62.486 34.51 0 62.486-27.976 62.486-62.486V213.341l80.843 80.844c24.404 24.402 63.965 24.402 88.369 0l80.843-80.844v224.173c0 34.51 27.976 62.486 62.486 62.486s62.486-27.976 62.486-62.486V62.488c0-25.274-15.224-48.058-38.573-57.729\\\" style=\\\"fill-rule:nonzero\\\"/></g></svg>\";\nvar e = {\n    BEACON_COLLECTION_DOMAIN: \"beacon-collection-domain\",\n    CUSTOM_DOMAIN: \"custom-domain\",\n    DEBUG: \"debug\",\n    DISABLE_TRACKING: \"disable-tracking\",\n    DISABLE_COOKIES: \"disable-cookies\",\n    DRM_TOKEN: \"drm-token\",\n    PLAYBACK_TOKEN: \"playback-token\",\n    ENV_KEY: \"env-key\",\n    MAX_RESOLUTION: \"max-resolution\",\n    MIN_RESOLUTION: \"min-resolution\",\n    RENDITION_ORDER: \"rendition-order\",\n    PROGRAM_START_TIME: \"program-start-time\",\n    PROGRAM_END_TIME: \"program-end-time\",\n    ASSET_START_TIME: \"asset-start-time\",\n    ASSET_END_TIME: \"asset-end-time\",\n    METADATA_URL: \"metadata-url\",\n    PLAYBACK_ID: \"playback-id\",\n    PLAYER_SOFTWARE_NAME: \"player-software-name\",\n    PLAYER_SOFTWARE_VERSION: \"player-software-version\",\n    PLAYER_INIT_TIME: \"player-init-time\",\n    PREFER_CMCD: \"prefer-cmcd\",\n    PREFER_PLAYBACK: \"prefer-playback\",\n    START_TIME: \"start-time\",\n    STREAM_TYPE: \"stream-type\",\n    TARGET_LIVE_WINDOW: \"target-live-window\",\n    LIVE_EDGE_OFFSET: \"live-edge-offset\",\n    TYPE: \"type\",\n    LOGO: \"logo\"\n  },\n  at = Object.values(e),\n  v = P(),\n  x = \"mux-video\",\n  l,\n  f,\n  c,\n  A,\n  b,\n  T,\n  p,\n  _,\n  O,\n  g,\n  m,\n  y,\n  K = class extends I {\n    constructor() {\n      super();\n      u(this, m);\n      u(this, l);\n      u(this, f);\n      u(this, c);\n      u(this, A, {});\n      u(this, b, {});\n      u(this, T);\n      u(this, p);\n      u(this, _);\n      u(this, O);\n      u(this, g, \"\");\n      o(this, c, F()), this.nativeEl.addEventListener(\"muxmetadata\", t => {\n        var d;\n        let i = z(this.nativeEl),\n          r = (d = this.metadata) != null ? d : {};\n        this.metadata = _objectSpread(_objectSpread({}, i), r), (i == null ? void 0 : i[\"com.mux.video.branding\"]) === \"mux-free-plan\" && (o(this, g, \"default\"), this.updateLogo());\n      });\n    }\n    static get NAME() {\n      return x;\n    }\n    static get VERSION() {\n      return v;\n    }\n    static get observedAttributes() {\n      var t;\n      return [...at, ...((t = I.observedAttributes) != null ? t : [])];\n    }\n    static getLogoHTML(t) {\n      return !t || t === \"false\" ? \"\" : t === \"default\" ? k : \"<img part=\\\"logo\\\" src=\\\"\".concat(t, \"\\\" />\");\n    }\n    static getTemplateHTML() {\n      let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var i;\n      return \"\\n      \".concat(I.getTemplateHTML(t), \"\\n      <style>\\n        :host {\\n          position: relative;\\n        }\\n        slot[name=\\\"logo\\\"] {\\n          display: flex;\\n          justify-content: end;\\n          position: absolute;\\n          top: 1rem;\\n          right: 1rem;\\n          opacity: 0;\\n          transition: opacity 0.25s ease-in-out;\\n          z-index: 1;\\n        }\\n        slot[name=\\\"logo\\\"]:has([part=\\\"logo\\\"]) {\\n          opacity: 1;\\n        }\\n        slot[name=\\\"logo\\\"] [part=\\\"logo\\\"] {\\n          width: 5rem;\\n          pointer-events: none;\\n          user-select: none;\\n        }\\n      </style>\\n      <slot name=\\\"logo\\\">\\n        \").concat(this.getLogoHTML((i = t[e.LOGO]) != null ? i : \"\"), \"\\n      </slot>\\n    \");\n    }\n    get preferCmcd() {\n      var t;\n      return (t = this.getAttribute(e.PREFER_CMCD)) != null ? t : void 0;\n    }\n    set preferCmcd(t) {\n      t !== this.preferCmcd && (t ? D.includes(t) ? this.setAttribute(e.PREFER_CMCD, t) : console.warn(\"Invalid value for preferCmcd. Must be one of \".concat(D.join())) : this.removeAttribute(e.PREFER_CMCD));\n    }\n    get playerInitTime() {\n      return this.hasAttribute(e.PLAYER_INIT_TIME) ? +this.getAttribute(e.PLAYER_INIT_TIME) : n(this, c);\n    }\n    set playerInitTime(t) {\n      t != this.playerInitTime && (t == null ? this.removeAttribute(e.PLAYER_INIT_TIME) : this.setAttribute(e.PLAYER_INIT_TIME, \"\".concat(+t)));\n    }\n    get playerSoftwareName() {\n      var t;\n      return (t = n(this, _)) != null ? t : x;\n    }\n    set playerSoftwareName(t) {\n      o(this, _, t);\n    }\n    get playerSoftwareVersion() {\n      var t;\n      return (t = n(this, p)) != null ? t : v;\n    }\n    set playerSoftwareVersion(t) {\n      o(this, p, t);\n    }\n    get _hls() {\n      var t;\n      return (t = n(this, l)) == null ? void 0 : t.engine;\n    }\n    get mux() {\n      var t;\n      return (t = this.nativeEl) == null ? void 0 : t.mux;\n    }\n    get error() {\n      var t;\n      return (t = W(this.nativeEl)) != null ? t : null;\n    }\n    get errorTranslator() {\n      return n(this, O);\n    }\n    set errorTranslator(t) {\n      o(this, O, t);\n    }\n    get src() {\n      return this.getAttribute(\"src\");\n    }\n    set src(t) {\n      t !== this.src && (t == null ? this.removeAttribute(\"src\") : this.setAttribute(\"src\", t));\n    }\n    get type() {\n      var t;\n      return (t = this.getAttribute(e.TYPE)) != null ? t : void 0;\n    }\n    set type(t) {\n      t !== this.type && (t ? this.setAttribute(e.TYPE, t) : this.removeAttribute(e.TYPE));\n    }\n    get preload() {\n      let t = this.getAttribute(\"preload\");\n      return t === \"\" ? \"auto\" : [\"none\", \"metadata\", \"auto\"].includes(t) ? t : super.preload;\n    }\n    set preload(t) {\n      t != this.getAttribute(\"preload\") && ([\"\", \"none\", \"metadata\", \"auto\"].includes(t) ? this.setAttribute(\"preload\", t) : this.removeAttribute(\"preload\"));\n    }\n    get debug() {\n      return this.getAttribute(e.DEBUG) != null;\n    }\n    set debug(t) {\n      t !== this.debug && (t ? this.setAttribute(e.DEBUG, \"\") : this.removeAttribute(e.DEBUG));\n    }\n    get disableTracking() {\n      return this.hasAttribute(e.DISABLE_TRACKING);\n    }\n    set disableTracking(t) {\n      t !== this.disableTracking && this.toggleAttribute(e.DISABLE_TRACKING, !!t);\n    }\n    get disableCookies() {\n      return this.hasAttribute(e.DISABLE_COOKIES);\n    }\n    set disableCookies(t) {\n      t !== this.disableCookies && (t ? this.setAttribute(e.DISABLE_COOKIES, \"\") : this.removeAttribute(e.DISABLE_COOKIES));\n    }\n    get startTime() {\n      let t = this.getAttribute(e.START_TIME);\n      if (t == null) return;\n      let i = +t;\n      return Number.isNaN(i) ? void 0 : i;\n    }\n    set startTime(t) {\n      t !== this.startTime && (t == null ? this.removeAttribute(e.START_TIME) : this.setAttribute(e.START_TIME, \"\".concat(t)));\n    }\n    get playbackId() {\n      var t;\n      return this.hasAttribute(e.PLAYBACK_ID) ? this.getAttribute(e.PLAYBACK_ID) : (t = st(this.src)) != null ? t : void 0;\n    }\n    set playbackId(t) {\n      t !== this.playbackId && (t ? this.setAttribute(e.PLAYBACK_ID, t) : this.removeAttribute(e.PLAYBACK_ID));\n    }\n    get maxResolution() {\n      var t;\n      return (t = this.getAttribute(e.MAX_RESOLUTION)) != null ? t : void 0;\n    }\n    set maxResolution(t) {\n      t !== this.maxResolution && (t ? this.setAttribute(e.MAX_RESOLUTION, t) : this.removeAttribute(e.MAX_RESOLUTION));\n    }\n    get minResolution() {\n      var t;\n      return (t = this.getAttribute(e.MIN_RESOLUTION)) != null ? t : void 0;\n    }\n    set minResolution(t) {\n      t !== this.minResolution && (t ? this.setAttribute(e.MIN_RESOLUTION, t) : this.removeAttribute(e.MIN_RESOLUTION));\n    }\n    get renditionOrder() {\n      var t;\n      return (t = this.getAttribute(e.RENDITION_ORDER)) != null ? t : void 0;\n    }\n    set renditionOrder(t) {\n      t !== this.renditionOrder && (t ? this.setAttribute(e.RENDITION_ORDER, t) : this.removeAttribute(e.RENDITION_ORDER));\n    }\n    get programStartTime() {\n      let t = this.getAttribute(e.PROGRAM_START_TIME);\n      if (t == null) return;\n      let i = +t;\n      return Number.isNaN(i) ? void 0 : i;\n    }\n    set programStartTime(t) {\n      t == null ? this.removeAttribute(e.PROGRAM_START_TIME) : this.setAttribute(e.PROGRAM_START_TIME, \"\".concat(t));\n    }\n    get programEndTime() {\n      let t = this.getAttribute(e.PROGRAM_END_TIME);\n      if (t == null) return;\n      let i = +t;\n      return Number.isNaN(i) ? void 0 : i;\n    }\n    set programEndTime(t) {\n      t == null ? this.removeAttribute(e.PROGRAM_END_TIME) : this.setAttribute(e.PROGRAM_END_TIME, \"\".concat(t));\n    }\n    get assetStartTime() {\n      let t = this.getAttribute(e.ASSET_START_TIME);\n      if (t == null) return;\n      let i = +t;\n      return Number.isNaN(i) ? void 0 : i;\n    }\n    set assetStartTime(t) {\n      t == null ? this.removeAttribute(e.ASSET_START_TIME) : this.setAttribute(e.ASSET_START_TIME, \"\".concat(t));\n    }\n    get assetEndTime() {\n      let t = this.getAttribute(e.ASSET_END_TIME);\n      if (t == null) return;\n      let i = +t;\n      return Number.isNaN(i) ? void 0 : i;\n    }\n    set assetEndTime(t) {\n      t == null ? this.removeAttribute(e.ASSET_END_TIME) : this.setAttribute(e.ASSET_END_TIME, \"\".concat(t));\n    }\n    get customDomain() {\n      var t;\n      return (t = this.getAttribute(e.CUSTOM_DOMAIN)) != null ? t : void 0;\n    }\n    set customDomain(t) {\n      t !== this.customDomain && (t ? this.setAttribute(e.CUSTOM_DOMAIN, t) : this.removeAttribute(e.CUSTOM_DOMAIN));\n    }\n    get drmToken() {\n      var t;\n      return (t = this.getAttribute(e.DRM_TOKEN)) != null ? t : void 0;\n    }\n    set drmToken(t) {\n      t !== this.drmToken && (t ? this.setAttribute(e.DRM_TOKEN, t) : this.removeAttribute(e.DRM_TOKEN));\n    }\n    get playbackToken() {\n      var t, i, r, d;\n      if (this.hasAttribute(e.PLAYBACK_TOKEN)) return (t = this.getAttribute(e.PLAYBACK_TOKEN)) != null ? t : void 0;\n      if (this.hasAttribute(e.PLAYBACK_ID)) {\n        let [, E] = nt((i = this.playbackId) != null ? i : \"\");\n        return (r = new URLSearchParams(E).get(\"token\")) != null ? r : void 0;\n      }\n      if (this.src) return (d = new URLSearchParams(this.src).get(\"token\")) != null ? d : void 0;\n    }\n    set playbackToken(t) {\n      t !== this.playbackToken && (t ? this.setAttribute(e.PLAYBACK_TOKEN, t) : this.removeAttribute(e.PLAYBACK_TOKEN));\n    }\n    get tokens() {\n      let t = this.getAttribute(e.PLAYBACK_TOKEN),\n        i = this.getAttribute(e.DRM_TOKEN);\n      return _objectSpread(_objectSpread(_objectSpread({}, n(this, b)), t != null ? {\n        playback: t\n      } : {}), i != null ? {\n        drm: i\n      } : {});\n    }\n    set tokens(t) {\n      o(this, b, t != null ? t : {});\n    }\n    get ended() {\n      return it(this.nativeEl, this._hls);\n    }\n    get envKey() {\n      var t;\n      return (t = this.getAttribute(e.ENV_KEY)) != null ? t : void 0;\n    }\n    set envKey(t) {\n      t !== this.envKey && (t ? this.setAttribute(e.ENV_KEY, t) : this.removeAttribute(e.ENV_KEY));\n    }\n    get beaconCollectionDomain() {\n      var t;\n      return (t = this.getAttribute(e.BEACON_COLLECTION_DOMAIN)) != null ? t : void 0;\n    }\n    set beaconCollectionDomain(t) {\n      t !== this.beaconCollectionDomain && (t ? this.setAttribute(e.BEACON_COLLECTION_DOMAIN, t) : this.removeAttribute(e.BEACON_COLLECTION_DOMAIN));\n    }\n    get streamType() {\n      var t;\n      return (t = this.getAttribute(e.STREAM_TYPE)) != null ? t : Z(this.nativeEl);\n    }\n    set streamType(t) {\n      t !== this.streamType && (t ? this.setAttribute(e.STREAM_TYPE, t) : this.removeAttribute(e.STREAM_TYPE));\n    }\n    get targetLiveWindow() {\n      return this.hasAttribute(e.TARGET_LIVE_WINDOW) ? +this.getAttribute(e.TARGET_LIVE_WINDOW) : Q(this.nativeEl);\n    }\n    set targetLiveWindow(t) {\n      t != this.targetLiveWindow && (t == null ? this.removeAttribute(e.TARGET_LIVE_WINDOW) : this.setAttribute(e.TARGET_LIVE_WINDOW, \"\".concat(+t)));\n    }\n    get liveEdgeStart() {\n      var t, i;\n      if (this.hasAttribute(e.LIVE_EDGE_OFFSET)) {\n        let {\n            liveEdgeOffset: r\n          } = this,\n          d = (t = this.nativeEl.seekable.end(0)) != null ? t : 0,\n          E = (i = this.nativeEl.seekable.start(0)) != null ? i : 0;\n        return Math.max(E, d - r);\n      }\n      return tt(this.nativeEl);\n    }\n    get liveEdgeOffset() {\n      if (this.hasAttribute(e.LIVE_EDGE_OFFSET)) return +this.getAttribute(e.LIVE_EDGE_OFFSET);\n    }\n    set liveEdgeOffset(t) {\n      t != this.liveEdgeOffset && (t == null ? this.removeAttribute(e.LIVE_EDGE_OFFSET) : this.setAttribute(e.LIVE_EDGE_OFFSET, \"\".concat(+t)));\n    }\n    get seekable() {\n      return et(this.nativeEl);\n    }\n    async addCuePoints(t) {\n      return w(this.nativeEl, t);\n    }\n    get activeCuePoint() {\n      return $(this.nativeEl);\n    }\n    get cuePoints() {\n      return H(this.nativeEl);\n    }\n    async addChapters(t) {\n      return j(this.nativeEl, t);\n    }\n    get activeChapter() {\n      return q(this.nativeEl);\n    }\n    get chapters() {\n      return rt(this.nativeEl);\n    }\n    getStartDate() {\n      return X(this.nativeEl, this._hls);\n    }\n    get currentPdt() {\n      return J(this.nativeEl, this._hls);\n    }\n    get preferPlayback() {\n      let t = this.getAttribute(e.PREFER_PLAYBACK);\n      if (t === R.MSE || t === R.NATIVE) return t;\n    }\n    set preferPlayback(t) {\n      t !== this.preferPlayback && (t === R.MSE || t === R.NATIVE ? this.setAttribute(e.PREFER_PLAYBACK, t) : this.removeAttribute(e.PREFER_PLAYBACK));\n    }\n    get metadata() {\n      return _objectSpread(_objectSpread({}, this.getAttributeNames().filter(i => i.startsWith(\"metadata-\") && ![e.METADATA_URL].includes(i)).reduce((i, r) => {\n        let d = this.getAttribute(r);\n        return d != null && (i[r.replace(/^metadata-/, \"\").replace(/-/g, \"_\")] = d), i;\n      }, {})), n(this, A));\n    }\n    set metadata(t) {\n      o(this, A, t != null ? t : {}), this.mux && this.mux.emit(\"hb\", n(this, A));\n    }\n    get _hlsConfig() {\n      return n(this, T);\n    }\n    set _hlsConfig(t) {\n      o(this, T, t);\n    }\n    get logo() {\n      var t;\n      return (t = this.getAttribute(e.LOGO)) != null ? t : n(this, g);\n    }\n    set logo(t) {\n      t ? this.setAttribute(e.LOGO, t) : this.removeAttribute(e.LOGO);\n    }\n    load() {\n      o(this, l, G(this, this.nativeEl, n(this, l)));\n    }\n    unload() {\n      V(this.nativeEl, n(this, l), this), o(this, l, void 0);\n    }\n    attributeChangedCallback(t, i, r) {\n      var E, L;\n      switch (I.observedAttributes.includes(t) && ![\"src\", \"autoplay\", \"preload\"].includes(t) && super.attributeChangedCallback(t, i, r), t) {\n        case e.PLAYER_SOFTWARE_NAME:\n          this.playerSoftwareName = r != null ? r : void 0;\n          break;\n        case e.PLAYER_SOFTWARE_VERSION:\n          this.playerSoftwareVersion = r != null ? r : void 0;\n          break;\n        case \"src\":\n          {\n            let h = !!i,\n              N = !!r;\n            !h && N ? M(this, m, y).call(this) : h && !N ? this.unload() : h && N && (this.unload(), M(this, m, y).call(this));\n            break;\n          }\n        case \"autoplay\":\n          if (r === i) break;\n          (E = n(this, l)) == null || E.setAutoplay(this.autoplay);\n          break;\n        case \"preload\":\n          if (r === i) break;\n          (L = n(this, l)) == null || L.setPreload(r);\n          break;\n        case e.PLAYBACK_ID:\n          this.src = U(this);\n          break;\n        case e.DEBUG:\n          {\n            let h = this.debug;\n            this.mux && console.info(\"Cannot toggle debug mode of mux data after initialization. Make sure you set all metadata to override before setting the src.\"), this._hls && (this._hls.config.debug = h);\n            break;\n          }\n        case e.METADATA_URL:\n          r && fetch(r).then(h => h.json()).then(h => this.metadata = h).catch(() => console.error(\"Unable to load or parse metadata JSON from metadata-url \".concat(r, \"!\")));\n          break;\n        case e.STREAM_TYPE:\n          (r == null || r !== i) && this.dispatchEvent(new CustomEvent(\"streamtypechange\", {\n            composed: !0,\n            bubbles: !0\n          }));\n          break;\n        case e.TARGET_LIVE_WINDOW:\n          (r == null || r !== i) && this.dispatchEvent(new CustomEvent(\"targetlivewindowchange\", {\n            composed: !0,\n            bubbles: !0,\n            detail: this.targetLiveWindow\n          }));\n          break;\n        case e.LOGO:\n          (r == null || r !== i) && this.updateLogo();\n          break;\n      }\n    }\n    updateLogo() {\n      if (!this.shadowRoot) return;\n      let t = this.shadowRoot.querySelector('slot[name=\"logo\"]');\n      if (!t) return;\n      let i = this.constructor.getLogoHTML(n(this, g) || this.logo);\n      t.innerHTML = i;\n    }\n    connectedCallback() {\n      var t;\n      (t = super.connectedCallback) == null || t.call(this), this.nativeEl && this.src && !n(this, l) && M(this, m, y).call(this);\n    }\n    disconnectedCallback() {\n      this.unload();\n    }\n    handleEvent(t) {\n      t.target === this.nativeEl && this.dispatchEvent(new CustomEvent(t.type, {\n        composed: !0,\n        detail: t.detail\n      }));\n    }\n  };\nl = new WeakMap(), f = new WeakMap(), c = new WeakMap(), A = new WeakMap(), b = new WeakMap(), T = new WeakMap(), p = new WeakMap(), _ = new WeakMap(), O = new WeakMap(), g = new WeakMap(), m = new WeakSet(), y = async function () {\n  n(this, f) || (await o(this, f, Promise.resolve()), o(this, f, null), this.load());\n};\nexport { e as Attributes, bt as Events, At as MediaError, K as MuxVideoBaseElement, F as generatePlayerInitTime, x as playerSoftwareName, v as playerSoftwareVersion };","map":{"version":3,"names":["initialize","G","teardown","V","generatePlayerInitTime","F","PlaybackTypes","R","toMuxVideoURL","U","MediaError","At","getError","W","CmcdTypeValues","D","addCuePoints","w","getCuePoints","H","getActiveCuePoint","$","addChapters","j","getActiveChapter","q","getMetadata","z","getStartDate","X","getCurrentPdt","J","getStreamType","Z","getTargetLiveWindow","Q","getLiveEdgeStart","tt","getSeekable","et","getEnded","it","getChapters","rt","toPlaybackIdFromSrc","st","toPlaybackIdParts","nt","Y","getEnvPlayerVersion","_unused","B","P","getPlayerVersion","CustomVideoElement","I","Events","bt","k","e","BEACON_COLLECTION_DOMAIN","CUSTOM_DOMAIN","DEBUG","DISABLE_TRACKING","DISABLE_COOKIES","DRM_TOKEN","PLAYBACK_TOKEN","ENV_KEY","MAX_RESOLUTION","MIN_RESOLUTION","RENDITION_ORDER","PROGRAM_START_TIME","PROGRAM_END_TIME","ASSET_START_TIME","ASSET_END_TIME","METADATA_URL","PLAYBACK_ID","PLAYER_SOFTWARE_NAME","PLAYER_SOFTWARE_VERSION","PLAYER_INIT_TIME","PREFER_CMCD","PREFER_PLAYBACK","START_TIME","STREAM_TYPE","TARGET_LIVE_WINDOW","LIVE_EDGE_OFFSET","TYPE","LOGO","at","Object","values","v","x","l","f","c","A","b","T","p","_","O","g","m","y","K","constructor","u","o","nativeEl","addEventListener","t","d","i","r","metadata","_objectSpread","updateLogo","NAME","VERSION","observedAttributes","getLogoHTML","concat","getTemplateHTML","arguments","length","undefined","preferCmcd","getAttribute","includes","setAttribute","console","warn","join","removeAttribute","playerInitTime","hasAttribute","n","playerSoftwareName","playerSoftwareVersion","_hls","engine","mux","error","errorTranslator","src","type","preload","debug","disableTracking","toggleAttribute","disableCookies","startTime","Number","isNaN","playbackId","maxResolution","minResolution","renditionOrder","programStartTime","programEndTime","assetStartTime","assetEndTime","customDomain","drmToken","playbackToken","E","URLSearchParams","get","tokens","playback","drm","ended","envKey","beaconCollectionDomain","streamType","targetLiveWindow","liveEdgeStart","liveEdgeOffset","seekable","end","start","Math","max","activeCuePoint","cuePoints","activeChapter","chapters","currentPdt","preferPlayback","MSE","NATIVE","getAttributeNames","filter","startsWith","reduce","replace","emit","_hlsConfig","logo","load","unload","attributeChangedCallback","L","h","N","M","call","setAutoplay","autoplay","setPreload","info","config","fetch","then","json","catch","dispatchEvent","CustomEvent","composed","bubbles","detail","shadowRoot","querySelector","innerHTML","connectedCallback","disconnectedCallback","handleEvent","target","WeakMap","WeakSet","requestLoad_fn","Promise","resolve","Attributes","MuxVideoBaseElement"],"sources":["d:\\Users\\User55\\Documents\\GitHub\\Vk-marusya-app\\node_modules\\@mux\\mux-video\\src\\base.ts","d:\\Users\\User55\\Documents\\GitHub\\Vk-marusya-app\\node_modules\\@mux\\mux-video\\src\\env.ts","d:\\Users\\User55\\Documents\\GitHub\\Vk-marusya-app\\node_modules\\@mux\\mux-video\\src\\assets\\mux-logo.ts"],"sourcesContent":["import {\n  initialize,\n  teardown,\n  generatePlayerInitTime,\n  MuxMediaProps,\n  StreamTypes,\n  PlaybackTypes,\n  toMuxVideoURL,\n  Metadata,\n  MediaError,\n  getError,\n  CmcdTypes,\n  CmcdTypeValues,\n  addCuePoints,\n  getCuePoints,\n  getActiveCuePoint,\n  addChapters,\n  getActiveChapter,\n  getMetadata,\n  getStartDate,\n  getCurrentPdt,\n  getStreamType,\n  getTargetLiveWindow,\n  getLiveEdgeStart,\n  getSeekable,\n  getEnded,\n  getChapters,\n  toPlaybackIdFromSrc,\n  toPlaybackIdParts,\n  // isMuxVideoSrc,\n} from '@mux/playback-core';\nimport type {\n  PlaybackCore,\n  PlaybackEngine,\n  ExtensionMimeTypeMap,\n  ValueOf,\n  MaxResolutionValue,\n  MinResolutionValue,\n  RenditionOrderValue,\n  Chapter,\n  CuePoint,\n  Tokens,\n} from '@mux/playback-core';\nimport { getPlayerVersion } from './env';\n// this must be imported after playback-core for the polyfill to be included\nimport { CustomVideoElement, Events } from 'custom-media-element';\nimport type { HlsConfig } from 'hls.js';\nimport { muxLogo } from './assets/mux-logo.js';\nimport type { IMuxVideoBaseElement } from './types.js';\n\nexport * from './types.js';\n\nexport const Attributes = {\n  BEACON_COLLECTION_DOMAIN: 'beacon-collection-domain',\n  CUSTOM_DOMAIN: 'custom-domain',\n  DEBUG: 'debug',\n  DISABLE_TRACKING: 'disable-tracking',\n  DISABLE_COOKIES: 'disable-cookies',\n  DRM_TOKEN: 'drm-token',\n  PLAYBACK_TOKEN: 'playback-token',\n  ENV_KEY: 'env-key',\n  MAX_RESOLUTION: 'max-resolution',\n  MIN_RESOLUTION: 'min-resolution',\n  RENDITION_ORDER: 'rendition-order',\n  PROGRAM_START_TIME: 'program-start-time',\n  PROGRAM_END_TIME: 'program-end-time',\n  ASSET_START_TIME: 'asset-start-time',\n  ASSET_END_TIME: 'asset-end-time',\n  METADATA_URL: 'metadata-url',\n  PLAYBACK_ID: 'playback-id',\n  PLAYER_SOFTWARE_NAME: 'player-software-name',\n  PLAYER_SOFTWARE_VERSION: 'player-software-version',\n  PLAYER_INIT_TIME: 'player-init-time',\n  PREFER_CMCD: 'prefer-cmcd',\n  PREFER_PLAYBACK: 'prefer-playback',\n  START_TIME: 'start-time',\n  STREAM_TYPE: 'stream-type',\n  TARGET_LIVE_WINDOW: 'target-live-window',\n  LIVE_EDGE_OFFSET: 'live-edge-offset',\n  TYPE: 'type',\n  LOGO: 'logo',\n} as const;\n\nconst AttributeNameValues = Object.values(Attributes);\n\nexport const playerSoftwareVersion = getPlayerVersion();\nexport const playerSoftwareName = 'mux-video';\n\nexport class MuxVideoBaseElement extends CustomVideoElement implements IMuxVideoBaseElement {\n  static get NAME() {\n    return playerSoftwareName;\n  }\n\n  static get VERSION() {\n    return playerSoftwareVersion;\n  }\n\n  static get observedAttributes() {\n    return [...AttributeNameValues, ...(CustomVideoElement.observedAttributes ?? [])];\n  }\n\n  #core?: PlaybackCore;\n  #loadRequested?: Promise<void> | null;\n  #defaultPlayerInitTime: number;\n  #metadata: Metadata = {};\n  #tokens: Tokens = {};\n  #_hlsConfig?: Partial<HlsConfig>;\n  #playerSoftwareVersion?: string;\n  #playerSoftwareName?: string;\n  #errorTranslator?: (errorEvent: any) => any;\n  #logo: string = '';\n\n  static getLogoHTML(logoValue: string | null) {\n    if (!logoValue || logoValue === 'false') return '';\n    return logoValue === 'default' ? muxLogo : `<img part=\"logo\" src=\"${logoValue}\" />`;\n  }\n\n  static getTemplateHTML(attrs: Record<string, string> = {}) {\n    return /* html */ `\n      ${CustomVideoElement.getTemplateHTML(attrs)}\n      <style>\n        :host {\n          position: relative;\n        }\n        slot[name=\"logo\"] {\n          display: flex;\n          justify-content: end;\n          position: absolute;\n          top: 1rem;\n          right: 1rem;\n          opacity: 0;\n          transition: opacity 0.25s ease-in-out;\n          z-index: 1;\n        }\n        slot[name=\"logo\"]:has([part=\"logo\"]) {\n          opacity: 1;\n        }\n        slot[name=\"logo\"] [part=\"logo\"] {\n          width: 5rem;\n          pointer-events: none;\n          user-select: none;\n        }\n      </style>\n      <slot name=\"logo\">\n        ${this.getLogoHTML(attrs[Attributes.LOGO] ?? '')}\n      </slot>\n    `;\n  }\n\n  constructor() {\n    super();\n    this.#defaultPlayerInitTime = generatePlayerInitTime();\n\n    this.nativeEl.addEventListener('muxmetadata', (_event: Event) => {\n      const fetchedMetadata = getMetadata(this.nativeEl);\n      const userMetadata = this.metadata ?? {};\n\n      // User metadata takes precedence over fetched metadata...\n      this.metadata = {\n        ...fetchedMetadata,\n        ...userMetadata,\n      };\n\n      // ...except for the free plan branding metadata\n      if ((fetchedMetadata as any)?.['com.mux.video.branding'] === 'mux-free-plan') {\n        this.#logo = 'default';\n        this.updateLogo();\n      }\n    });\n  }\n\n  get preferCmcd() {\n    return (this.getAttribute(Attributes.PREFER_CMCD) as ValueOf<CmcdTypes>) ?? undefined;\n  }\n\n  set preferCmcd(value: ValueOf<CmcdTypes> | undefined) {\n    if (value === this.preferCmcd) return;\n    if (!value) {\n      this.removeAttribute(Attributes.PREFER_CMCD);\n    } else if (CmcdTypeValues.includes(value)) {\n      this.setAttribute(Attributes.PREFER_CMCD, value);\n    } else {\n      console.warn(`Invalid value for preferCmcd. Must be one of ${CmcdTypeValues.join()}`);\n    }\n  }\n\n  get playerInitTime() {\n    if (!this.hasAttribute(Attributes.PLAYER_INIT_TIME)) return this.#defaultPlayerInitTime;\n    return +(this.getAttribute(Attributes.PLAYER_INIT_TIME) as string) as number;\n  }\n\n  set playerInitTime(val) {\n    // don't cause an infinite loop and avoid change event dispatching\n    if (val == this.playerInitTime) return;\n\n    if (val == null) {\n      this.removeAttribute(Attributes.PLAYER_INIT_TIME);\n    } else {\n      this.setAttribute(Attributes.PLAYER_INIT_TIME, `${+val}`);\n    }\n  }\n\n  get playerSoftwareName() {\n    return this.#playerSoftwareName ?? playerSoftwareName;\n  }\n\n  set playerSoftwareName(value: string | undefined) {\n    this.#playerSoftwareName = value;\n  }\n\n  get playerSoftwareVersion() {\n    return this.#playerSoftwareVersion ?? playerSoftwareVersion;\n  }\n\n  set playerSoftwareVersion(value: string | undefined) {\n    this.#playerSoftwareVersion = value;\n  }\n\n  // Keeping this named \"_hls\" since it's exposed for unadvertised \"advanced usage\" via getter that assumes specifically hls.js (CJP)\n  get _hls(): PlaybackEngine | undefined {\n    return this.#core?.engine;\n  }\n\n  get mux(): Readonly<HTMLVideoElement['mux']> | undefined {\n    return this.nativeEl?.mux;\n  }\n\n  get error() {\n    return getError(this.nativeEl) ?? null;\n  }\n\n  get errorTranslator(): ((errorEvent: any) => any) | undefined {\n    return this.#errorTranslator;\n  }\n\n  set errorTranslator(value: ((errorEvent: any) => any) | undefined) {\n    this.#errorTranslator = value;\n  }\n\n  get src() {\n    // Use the attribute value as the source of truth.\n    // No need to store it in two places.\n    // This avoids needing a to read the attribute initially and update the src.\n    return this.getAttribute('src') as string;\n  }\n\n  set src(val: string) {\n    // If being set by attributeChangedCallback,\n    // dont' cause an infinite loop\n    if (val === this.src) return;\n\n    if (val == null) {\n      this.removeAttribute('src');\n    } else {\n      this.setAttribute('src', val);\n    }\n  }\n\n  get type(): ValueOf<ExtensionMimeTypeMap> | undefined {\n    return (this.getAttribute(Attributes.TYPE) as ValueOf<ExtensionMimeTypeMap>) ?? undefined;\n  }\n\n  set type(val: ValueOf<ExtensionMimeTypeMap> | undefined) {\n    // dont' cause an infinite loop\n    if (val === this.type) return;\n\n    if (val) {\n      this.setAttribute(Attributes.TYPE, val);\n    } else {\n      this.removeAttribute(Attributes.TYPE);\n    }\n  }\n\n  get preload() {\n    const val = this.getAttribute('preload') as HTMLMediaElement['preload'];\n    if (val === '') return 'auto';\n    if (['none', 'metadata', 'auto'].includes(val)) return val;\n    return super.preload;\n  }\n\n  set preload(val) {\n    // don't cause an infinite loop\n    // check the attribute because an empty string maps to the `auto` prop\n    if (val == this.getAttribute('preload')) return;\n\n    if (['', 'none', 'metadata', 'auto'].includes(val)) {\n      this.setAttribute('preload', val);\n    } else {\n      this.removeAttribute('preload');\n    }\n  }\n\n  get debug() {\n    return this.getAttribute(Attributes.DEBUG) != null;\n  }\n\n  set debug(val) {\n    // dont' cause an infinite loop\n    if (val === this.debug) return;\n\n    if (val) {\n      this.setAttribute(Attributes.DEBUG, '');\n    } else {\n      this.removeAttribute(Attributes.DEBUG);\n    }\n  }\n\n  get disableTracking() {\n    return this.hasAttribute(Attributes.DISABLE_TRACKING);\n  }\n\n  set disableTracking(val) {\n    // dont' cause an infinite loop\n    if (val === this.disableTracking) return;\n\n    this.toggleAttribute(Attributes.DISABLE_TRACKING, !!val);\n  }\n\n  get disableCookies() {\n    return this.hasAttribute(Attributes.DISABLE_COOKIES);\n  }\n\n  set disableCookies(val) {\n    // dont' cause an infinite loop\n    if (val === this.disableCookies) return;\n\n    if (val) {\n      this.setAttribute(Attributes.DISABLE_COOKIES, '');\n    } else {\n      this.removeAttribute(Attributes.DISABLE_COOKIES);\n    }\n  }\n\n  get startTime(): number | undefined {\n    const val = this.getAttribute(Attributes.START_TIME);\n    if (val == null) return undefined;\n    const num = +val;\n    return !Number.isNaN(num) ? num : undefined;\n  }\n\n  set startTime(val: number | undefined) {\n    // dont' cause an infinite loop\n    if (val === this.startTime) return;\n\n    if (val == null) {\n      this.removeAttribute(Attributes.START_TIME);\n    } else {\n      this.setAttribute(Attributes.START_TIME, `${val}`);\n    }\n  }\n\n  // NOTE: playbackId may contain additional query params (e.g. token= for playback token) (CJP)\n  get playbackId(): string | undefined {\n    if (this.hasAttribute(Attributes.PLAYBACK_ID)) {\n      return this.getAttribute(Attributes.PLAYBACK_ID) as string;\n    }\n\n    return toPlaybackIdFromSrc(this.src) ?? undefined;\n  }\n\n  set playbackId(val: string | undefined) {\n    // dont' cause an infinite loop\n    if (val === this.playbackId) return;\n\n    if (val) {\n      this.setAttribute(Attributes.PLAYBACK_ID, val);\n    } else {\n      this.removeAttribute(Attributes.PLAYBACK_ID);\n    }\n  }\n\n  get maxResolution() {\n    return (this.getAttribute(Attributes.MAX_RESOLUTION) as MaxResolutionValue) ?? undefined;\n  }\n\n  set maxResolution(val: MaxResolutionValue | undefined) {\n    if (val === this.maxResolution) return;\n\n    if (val) {\n      this.setAttribute(Attributes.MAX_RESOLUTION, val);\n    } else {\n      this.removeAttribute(Attributes.MAX_RESOLUTION);\n    }\n  }\n\n  get minResolution() {\n    return (this.getAttribute(Attributes.MIN_RESOLUTION) as MinResolutionValue) ?? undefined;\n  }\n\n  set minResolution(val: MinResolutionValue | undefined) {\n    if (val === this.minResolution) return;\n\n    if (val) {\n      this.setAttribute(Attributes.MIN_RESOLUTION, val);\n    } else {\n      this.removeAttribute(Attributes.MIN_RESOLUTION);\n    }\n  }\n\n  get renditionOrder() {\n    return (this.getAttribute(Attributes.RENDITION_ORDER) as RenditionOrderValue) ?? undefined;\n  }\n\n  set renditionOrder(val: RenditionOrderValue | undefined) {\n    if (val === this.renditionOrder) return;\n\n    if (val) {\n      this.setAttribute(Attributes.RENDITION_ORDER, val);\n    } else {\n      this.removeAttribute(Attributes.RENDITION_ORDER);\n    }\n  }\n\n  get programStartTime() {\n    const val = this.getAttribute(Attributes.PROGRAM_START_TIME);\n    if (val == null) return undefined;\n    const num = +val;\n    return !Number.isNaN(num) ? num : undefined;\n  }\n\n  set programStartTime(val: number | undefined) {\n    if (val == undefined) {\n      this.removeAttribute(Attributes.PROGRAM_START_TIME);\n    } else {\n      this.setAttribute(Attributes.PROGRAM_START_TIME, `${val}`);\n    }\n  }\n\n  get programEndTime() {\n    const val = this.getAttribute(Attributes.PROGRAM_END_TIME);\n    if (val == null) return undefined;\n    const num = +val;\n    return !Number.isNaN(num) ? num : undefined;\n  }\n\n  set programEndTime(val: number | undefined) {\n    if (val == undefined) {\n      this.removeAttribute(Attributes.PROGRAM_END_TIME);\n    } else {\n      this.setAttribute(Attributes.PROGRAM_END_TIME, `${val}`);\n    }\n  }\n\n  get assetStartTime() {\n    const val = this.getAttribute(Attributes.ASSET_START_TIME);\n    if (val == null) return undefined;\n    const num = +val;\n    return !Number.isNaN(num) ? num : undefined;\n  }\n\n  set assetStartTime(val: number | undefined) {\n    if (val == undefined) {\n      this.removeAttribute(Attributes.ASSET_START_TIME);\n    } else {\n      this.setAttribute(Attributes.ASSET_START_TIME, `${val}`);\n    }\n  }\n\n  get assetEndTime() {\n    const val = this.getAttribute(Attributes.ASSET_END_TIME);\n    if (val == null) return undefined;\n    const num = +val;\n    return !Number.isNaN(num) ? num : undefined;\n  }\n\n  set assetEndTime(val: number | undefined) {\n    if (val == undefined) {\n      this.removeAttribute(Attributes.ASSET_END_TIME);\n    } else {\n      this.setAttribute(Attributes.ASSET_END_TIME, `${val}`);\n    }\n  }\n\n  get customDomain() {\n    return this.getAttribute(Attributes.CUSTOM_DOMAIN) ?? undefined;\n  }\n\n  set customDomain(val: string | undefined) {\n    // dont' cause an infinite loop\n    if (val === this.customDomain) return;\n\n    if (val) {\n      this.setAttribute(Attributes.CUSTOM_DOMAIN, val);\n    } else {\n      this.removeAttribute(Attributes.CUSTOM_DOMAIN);\n    }\n  }\n\n  get drmToken() {\n    return this.getAttribute(Attributes.DRM_TOKEN) ?? undefined;\n  }\n\n  set drmToken(val: string | undefined) {\n    // dont' cause an infinite loop\n    if (val === this.drmToken) return;\n\n    if (val) {\n      this.setAttribute(Attributes.DRM_TOKEN, val);\n    } else {\n      this.removeAttribute(Attributes.DRM_TOKEN);\n    }\n  }\n\n  /**\n   * Get the playback token for signing the src URL.\n   */\n  get playbackToken() {\n    if (this.hasAttribute(Attributes.PLAYBACK_TOKEN)) {\n      return this.getAttribute(Attributes.PLAYBACK_TOKEN) ?? undefined;\n    }\n    if (this.hasAttribute(Attributes.PLAYBACK_ID)) {\n      const [, queryParts] = toPlaybackIdParts(this.playbackId ?? '');\n      return new URLSearchParams(queryParts).get('token') ?? undefined;\n    }\n    if (this.src) {\n      return new URLSearchParams(this.src).get('token') ?? undefined;\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the playback token for signing the src URL.\n   */\n  set playbackToken(val: string | undefined) {\n    if (val === this.playbackToken) return;\n\n    if (val) {\n      this.setAttribute(Attributes.PLAYBACK_TOKEN, val);\n    } else {\n      this.removeAttribute(Attributes.PLAYBACK_TOKEN);\n    }\n  }\n\n  get tokens() {\n    const playback = this.getAttribute(Attributes.PLAYBACK_TOKEN);\n    const drm = this.getAttribute(Attributes.DRM_TOKEN);\n    return {\n      ...this.#tokens,\n      ...(playback != null ? { playback } : {}),\n      ...(drm != null ? { drm } : {}),\n    };\n  }\n\n  set tokens(val) {\n    this.#tokens = val ?? {};\n  }\n\n  get ended() {\n    // This ensures that edge case media that doesn't properly end will\n    // still announce itself as \"ended\".\n    return getEnded(this.nativeEl, this._hls);\n  }\n\n  get envKey(): string | undefined {\n    return this.getAttribute(Attributes.ENV_KEY) ?? undefined;\n  }\n\n  set envKey(val: string | undefined) {\n    // dont' cause an infinite loop\n    if (val === this.envKey) return;\n\n    if (val) {\n      this.setAttribute(Attributes.ENV_KEY, val);\n    } else {\n      this.removeAttribute(Attributes.ENV_KEY);\n    }\n  }\n\n  get beaconCollectionDomain(): string | undefined {\n    return this.getAttribute(Attributes.BEACON_COLLECTION_DOMAIN) ?? undefined;\n  }\n\n  set beaconCollectionDomain(val: string | undefined) {\n    // don't cause an infinite loop\n    if (val === this.beaconCollectionDomain) return;\n\n    if (val) {\n      this.setAttribute(Attributes.BEACON_COLLECTION_DOMAIN, val);\n    } else {\n      this.removeAttribute(Attributes.BEACON_COLLECTION_DOMAIN);\n    }\n  }\n\n  get streamType(): ValueOf<StreamTypes> | undefined {\n    // Allow overriding inferred `streamType`\n    return (this.getAttribute(Attributes.STREAM_TYPE) as ValueOf<StreamTypes>) ?? getStreamType(this.nativeEl);\n  }\n\n  set streamType(val: ValueOf<StreamTypes> | undefined) {\n    // don't cause an infinite loop and avoid change event dispatching\n    if (val === this.streamType) return;\n\n    if (val) {\n      this.setAttribute(Attributes.STREAM_TYPE, val);\n    } else {\n      this.removeAttribute(Attributes.STREAM_TYPE);\n    }\n  }\n\n  get targetLiveWindow() {\n    // Allow overriding inferred `targetLiveWindow`\n    if (this.hasAttribute(Attributes.TARGET_LIVE_WINDOW)) {\n      return +(this.getAttribute(Attributes.TARGET_LIVE_WINDOW) as string) as number;\n    }\n    return getTargetLiveWindow(this.nativeEl);\n  }\n\n  set targetLiveWindow(val: number | undefined) {\n    // don't cause an infinite loop and avoid change event dispatching\n    if (val == this.targetLiveWindow) return;\n\n    if (val == null) {\n      this.removeAttribute(Attributes.TARGET_LIVE_WINDOW);\n    } else {\n      this.setAttribute(Attributes.TARGET_LIVE_WINDOW, `${+val}`);\n    }\n  }\n\n  get liveEdgeStart() {\n    if (this.hasAttribute(Attributes.LIVE_EDGE_OFFSET)) {\n      const { liveEdgeOffset } = this;\n      const seekableEnd = this.nativeEl.seekable.end(0) ?? 0;\n      const seekableStart = this.nativeEl.seekable.start(0) ?? 0;\n      return Math.max(seekableStart, seekableEnd - (liveEdgeOffset as number));\n    }\n    return getLiveEdgeStart(this.nativeEl);\n  }\n\n  get liveEdgeOffset() {\n    if (!this.hasAttribute(Attributes.LIVE_EDGE_OFFSET)) return undefined;\n    return +(this.getAttribute(Attributes.LIVE_EDGE_OFFSET) as string) as number;\n  }\n\n  set liveEdgeOffset(val: number | undefined) {\n    // don't cause an infinite loop and avoid change event dispatching\n    if (val == this.liveEdgeOffset) return;\n\n    if (val == null) {\n      this.removeAttribute(Attributes.LIVE_EDGE_OFFSET);\n    } else {\n      this.setAttribute(Attributes.LIVE_EDGE_OFFSET, `${+val}`);\n    }\n  }\n\n  get seekable() {\n    return getSeekable(this.nativeEl);\n  }\n\n  async addCuePoints<T = any>(cuePoints: CuePoint<T>[]) {\n    return addCuePoints(this.nativeEl, cuePoints);\n  }\n\n  get activeCuePoint() {\n    return getActiveCuePoint(this.nativeEl);\n  }\n\n  get cuePoints() {\n    return getCuePoints(this.nativeEl);\n  }\n\n  async addChapters(chapters: Chapter[]) {\n    return addChapters(this.nativeEl, chapters);\n  }\n\n  get activeChapter() {\n    return getActiveChapter(this.nativeEl);\n  }\n\n  get chapters() {\n    return getChapters(this.nativeEl);\n  }\n\n  getStartDate() {\n    return getStartDate(this.nativeEl, this._hls);\n  }\n\n  get currentPdt() {\n    return getCurrentPdt(this.nativeEl, this._hls);\n  }\n\n  get preferPlayback(): ValueOf<PlaybackTypes> | undefined {\n    const val = this.getAttribute(Attributes.PREFER_PLAYBACK);\n    if (val === PlaybackTypes.MSE || val === PlaybackTypes.NATIVE) return val;\n    return undefined;\n  }\n\n  set preferPlayback(val: ValueOf<PlaybackTypes> | undefined) {\n    if (val === this.preferPlayback) return;\n\n    if (val === PlaybackTypes.MSE || val === PlaybackTypes.NATIVE) {\n      this.setAttribute(Attributes.PREFER_PLAYBACK, val);\n    } else {\n      this.removeAttribute(Attributes.PREFER_PLAYBACK);\n    }\n  }\n\n  get metadata() {\n    const inferredMetadataAttrs: { [key: string]: string } = this.getAttributeNames()\n      .filter((attrName) => {\n        return attrName.startsWith('metadata-') && !([Attributes.METADATA_URL] as string[]).includes(attrName);\n      })\n      .reduce(\n        (currAttrs, attrName) => {\n          const value = this.getAttribute(attrName);\n          if (value != null) {\n            currAttrs[attrName.replace(/^metadata-/, '').replace(/-/g, '_') as string] = value;\n          }\n          return currAttrs;\n        },\n        {} as { [key: string]: string }\n      );\n\n    return {\n      ...inferredMetadataAttrs,\n      ...this.#metadata,\n    };\n  }\n\n  set metadata(val: Readonly<Metadata> | undefined) {\n    this.#metadata = val ?? {};\n    if (!!this.mux) {\n      this.mux.emit('hb', this.#metadata);\n    }\n  }\n\n  get _hlsConfig() {\n    return this.#_hlsConfig;\n  }\n\n  set _hlsConfig(val: Readonly<Partial<HlsConfig>> | undefined) {\n    this.#_hlsConfig = val;\n  }\n\n  get logo() {\n    return this.getAttribute(Attributes.LOGO) ?? this.#logo;\n  }\n\n  set logo(val) {\n    if (val) {\n      this.setAttribute(Attributes.LOGO, val);\n    } else {\n      this.removeAttribute(Attributes.LOGO);\n    }\n  }\n\n  async #requestLoad() {\n    if (this.#loadRequested) return;\n    await (this.#loadRequested = Promise.resolve());\n    this.#loadRequested = null;\n    this.load();\n  }\n\n  load() {\n    this.#core = initialize(this as Partial<MuxMediaProps>, this.nativeEl, this.#core);\n  }\n\n  unload() {\n    teardown(this.nativeEl, this.#core, this as Partial<MuxMediaProps>);\n    this.#core = undefined;\n  }\n\n  attributeChangedCallback(attrName: string, oldValue: string | null, newValue: string | null) {\n    // Only forward the attributes to the native media element that are not handled.\n    const isNativeAttr = CustomVideoElement.observedAttributes.includes(attrName);\n    if (isNativeAttr && !['src', 'autoplay', 'preload'].includes(attrName)) {\n      super.attributeChangedCallback(attrName, oldValue, newValue);\n    }\n\n    switch (attrName) {\n      case Attributes.PLAYER_SOFTWARE_NAME:\n        this.playerSoftwareName = newValue ?? undefined;\n        break;\n      case Attributes.PLAYER_SOFTWARE_VERSION:\n        this.playerSoftwareVersion = newValue ?? undefined;\n        break;\n      case 'src': {\n        const hadSrc = !!oldValue;\n        const hasSrc = !!newValue;\n        if (!hadSrc && hasSrc) {\n          this.#requestLoad();\n        } else if (hadSrc && !hasSrc) {\n          this.unload();\n        } else if (hadSrc && hasSrc) {\n          this.unload();\n          this.#requestLoad();\n        }\n        break;\n      }\n      case 'autoplay':\n        if (newValue === oldValue) {\n          break;\n        }\n        /** In case newValue is an empty string or null, use this.autoplay which translates to booleans (WL) */\n        this.#core?.setAutoplay(this.autoplay);\n        break;\n      case 'preload':\n        if (newValue === oldValue) {\n          break;\n        }\n        this.#core?.setPreload(newValue as HTMLMediaElement['preload']);\n        break;\n      case Attributes.PLAYBACK_ID:\n        this.src = toMuxVideoURL(this) as string;\n        break;\n      case Attributes.DEBUG: {\n        const debug = this.debug;\n        if (!!this.mux) {\n          /** @TODO Link to docs for a more detailed discussion (CJP) */\n          console.info(\n            'Cannot toggle debug mode of mux data after initialization. Make sure you set all metadata to override before setting the src.'\n          );\n        }\n        if (!!this._hls) {\n          this._hls.config.debug = debug;\n        }\n        break;\n      }\n      case Attributes.METADATA_URL:\n        if (newValue) {\n          fetch(newValue)\n            .then((resp) => resp.json())\n            .then((json) => (this.metadata = json))\n            .catch(() => console.error(`Unable to load or parse metadata JSON from metadata-url ${newValue}!`));\n        }\n        break;\n      case Attributes.STREAM_TYPE:\n        // If the newValue is unset\n        if (newValue == null || newValue !== oldValue) {\n          this.dispatchEvent(new CustomEvent('streamtypechange', { composed: true, bubbles: true }));\n        }\n        break;\n      case Attributes.TARGET_LIVE_WINDOW:\n        if (newValue == null || newValue !== oldValue) {\n          this.dispatchEvent(\n            new CustomEvent('targetlivewindowchange', { composed: true, bubbles: true, detail: this.targetLiveWindow })\n          );\n        }\n        break;\n      case Attributes.LOGO:\n        if (newValue == null || newValue !== oldValue) {\n          this.updateLogo();\n        }\n        break;\n    }\n  }\n\n  updateLogo() {\n    if (!this.shadowRoot) return;\n\n    const slotLogo = this.shadowRoot.querySelector('slot[name=\"logo\"]');\n    if (!slotLogo) return;\n\n    const logoHTML = (this.constructor as typeof MuxVideoElement).getLogoHTML(this.#logo || this.logo);\n    slotLogo.innerHTML = logoHTML;\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback?.();\n    if (this.nativeEl && this.src && !this.#core) {\n      this.#requestLoad();\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.unload();\n  }\n\n  handleEvent(event: Event): void {\n    if (event.target === this.nativeEl) {\n      // Composed events are forwarded to parent shadow hosts (e.g. mux-player).\n      this.dispatchEvent(\n        new CustomEvent(event.type, {\n          composed: true,\n          detail: (event as CustomEvent).detail,\n        })\n      );\n    }\n  }\n}\n\nexport {\n  PlaybackEngine,\n  PlaybackEngine as Hls,\n  ExtensionMimeTypeMap as MimeTypes,\n  MediaError,\n  Events,\n  generatePlayerInitTime,\n};\n","export const isMaybeBrowser = () => typeof window != 'undefined';\n// @ts-ignore\nexport const isMaybeServer = () => typeof global != 'undefined';\n\nconst getEnvPlayerVersion = () => {\n  try {\n    // @ts-ignore\n    return PLAYER_VERSION as string;\n  } catch {}\n  return 'UNKNOWN';\n};\n\nconst player_version: string = getEnvPlayerVersion();\n\nexport const getPlayerVersion = () => player_version;\n","export const muxLogo = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" part=\"logo\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2\" viewBox=\"0 0 1600 500\"><g fill=\"#fff\"><path d=\"M994.287 93.486c-17.121 0-31-13.879-31-31 0-17.121 13.879-31 31-31 17.121 0 31 13.879 31 31 0 17.121-13.879 31-31 31m0-93.486c-34.509 0-62.484 27.976-62.484 62.486v187.511c0 68.943-56.09 125.033-125.032 125.033s-125.03-56.09-125.03-125.033V62.486C681.741 27.976 653.765 0 619.256 0s-62.484 27.976-62.484 62.486v187.511C556.772 387.85 668.921 500 806.771 500c137.851 0 250.001-112.15 250.001-250.003V62.486c0-34.51-27.976-62.486-62.485-62.486M1537.51 468.511c-17.121 0-31-13.879-31-31 0-17.121 13.879-31 31-31 17.121 0 31 13.879 31 31 0 17.121-13.879 31-31 31m-275.883-218.509-143.33 143.329c-24.402 24.402-24.402 63.966 0 88.368 24.402 24.402 63.967 24.402 88.369 0l143.33-143.329 143.328 143.329c24.402 24.4 63.967 24.402 88.369 0 24.403-24.402 24.403-63.966.001-88.368l-143.33-143.329.001-.004 143.329-143.329c24.402-24.402 24.402-63.965 0-88.367s-63.967-24.402-88.369 0L1349.996 161.63 1206.667 18.302c-24.402-24.401-63.967-24.402-88.369 0s-24.402 63.965 0 88.367l143.329 143.329v.004ZM437.511 468.521c-17.121 0-31-13.879-31-31 0-17.121 13.879-31 31-31 17.121 0 31 13.879 31 31 0 17.121-13.879 31-31 31M461.426 4.759C438.078-4.913 411.2.432 393.33 18.303L249.999 161.632 106.669 18.303C88.798.432 61.922-4.913 38.573 4.759 15.224 14.43-.001 37.214-.001 62.488v375.026c0 34.51 27.977 62.486 62.487 62.486 34.51 0 62.486-27.976 62.486-62.486V213.341l80.843 80.844c24.404 24.402 63.965 24.402 88.369 0l80.843-80.844v224.173c0 34.51 27.976 62.486 62.486 62.486s62.486-27.976 62.486-62.486V62.488c0-25.274-15.224-48.058-38.573-57.729\" style=\"fill-rule:nonzero\"/></g></svg>`;\n"],"mappings":";;;;;;;;;AAAA,SACEA,UAAA,IAAAC,CAAA,EACAC,QAAA,IAAAC,CAAA,EACAC,sBAAA,IAAAC,CAAA,EAGAC,aAAA,IAAAC,CAAA,EACAC,aAAA,IAAAC,CAAA,EAEAC,UAAA,IAAAC,EAAA,EACAC,QAAA,IAAAC,CAAA,EAEAC,cAAA,IAAAC,CAAA,EACAC,YAAA,IAAAC,CAAA,EACAC,YAAA,IAAAC,CAAA,EACAC,iBAAA,IAAAC,CAAA,EACAC,WAAA,IAAAC,CAAA,EACAC,gBAAA,IAAAC,CAAA,EACAC,WAAA,IAAAC,CAAA,EACAC,YAAA,IAAAC,CAAA,EACAC,aAAA,IAAAC,CAAA,EACAC,aAAA,IAAAC,CAAA,EACAC,mBAAA,IAAAC,CAAA,EACAC,gBAAA,IAAAC,EAAA,EACAC,WAAA,IAAAC,EAAA,EACAC,QAAA,IAAAC,EAAA,EACAC,WAAA,IAAAC,EAAA,EACAC,mBAAA,IAAAC,EAAA,EACAC,iBAAA,IAAAC,EAAA,QAEK;AC1BP,IAAMC,CAAA,GAAsBC,CAAA,KAAM;IAChC,IAAI;MAEF,OAAO,QACT;IAAA,SAAAC,OAAA,EAAQ,CAAC;IACT,OAAO,SACT;EAAA;EAEMC,CAAA,GAAyBH,CAAA,CAAoB;EAEtCI,CAAA,GAAmBC,CAAA,KAAMF,CAAA;AD+BtC,SAASG,kBAAA,IAAAC,CAAA,EAAoBC,MAAA,IAAAC,EAAA,QAAc;AE7CpC,IAAMC,CAAA,uwD;AFoDN,IAAMC,CAAA,GAAa;IACxBC,wBAAA,EAA0B;IAC1BC,aAAA,EAAe;IACfC,KAAA,EAAO;IACPC,gBAAA,EAAkB;IAClBC,eAAA,EAAiB;IACjBC,SAAA,EAAW;IACXC,cAAA,EAAgB;IAChBC,OAAA,EAAS;IACTC,cAAA,EAAgB;IAChBC,cAAA,EAAgB;IAChBC,eAAA,EAAiB;IACjBC,kBAAA,EAAoB;IACpBC,gBAAA,EAAkB;IAClBC,gBAAA,EAAkB;IAClBC,cAAA,EAAgB;IAChBC,YAAA,EAAc;IACdC,WAAA,EAAa;IACbC,oBAAA,EAAsB;IACtBC,uBAAA,EAAyB;IACzBC,gBAAA,EAAkB;IAClBC,WAAA,EAAa;IACbC,eAAA,EAAiB;IACjBC,UAAA,EAAY;IACZC,WAAA,EAAa;IACbC,kBAAA,EAAoB;IACpBC,gBAAA,EAAkB;IAClBC,IAAA,EAAM;IACNC,IAAA,EAAM;EACR;EAEMC,EAAA,GAAsBC,MAAA,CAAOC,MAAA,CAAO/B,CAAU;EAEvCgC,CAAA,GAAwBvC,CAAA,CAAiB;EACzCwC,CAAA,GAAqB;EAtFlCC,CAAA;EAAAC,CAAA;EAAAC,CAAA;EAAAC,CAAA;EAAAC,CAAA;EAAAC,CAAA;EAAAC,CAAA;EAAAC,CAAA;EAAAC,CAAA;EAAAC,CAAA;EAAAC,CAAA;EAAAC,CAAA;EAwFaC,CAAA,GAAN,cAAkClD,CAAmD;IA6D1FmD,YAAA,EAAc;MACZ,MAAM;MA9DHC,CAAA,OAAAJ,CAAA;MAaLI,CAAA,OAAAd,CAAA;MACAc,CAAA,OAAAb,CAAA;MACAa,CAAA,OAAAZ,CAAA;MACAY,CAAA,OAAAX,CAAA,EAAsB,CAAC;MACvBW,CAAA,OAAAV,CAAA,EAAkB,CAAC;MACnBU,CAAA,OAAAT,CAAA;MACAS,CAAA,OAAAR,CAAA;MACAQ,CAAA,OAAAP,CAAA;MACAO,CAAA,OAAAN,CAAA;MACAM,CAAA,OAAAL,CAAA,EAAgB;MAyCdM,CAAA,OAAKb,CAAA,EAAyB1F,CAAA,CAAuB,IAErD,KAAKwG,QAAA,CAASC,gBAAA,CAAiB,eAAgBC,CAAA,IAAkB;QAzJrE,IAAAC,CAAA;QA0JM,IAAMC,CAAA,GAAkBtF,CAAA,CAAY,KAAKkF,QAAQ;UAC3CK,CAAA,IAAeF,CAAA,QAAKG,QAAA,KAAL,OAAAH,CAAA,GAAiB,CAAC;QAGvC,KAAKG,QAAA,GAAAC,aAAA,CAAAA,aAAA,KACAH,CAAA,GACAC,CACL,IAGKD,CAAA,oBAAAA,CAAA,CAA0B,+BAA8B,oBAC3DL,CAAA,OAAKN,CAAA,EAAQ,YACb,KAAKe,UAAA,CAAW,EAEpB;MAAA,CAAC,CACH;IAAA;IAhFA,WAAWC,KAAA,EAAO;MAChB,OAAO1B,CACT;IAAA;IAEA,WAAW2B,QAAA,EAAU;MACnB,OAAO5B,CACT;IAAA;IAEA,WAAW6B,mBAAA,EAAqB;MAjGlC,IAAAT,CAAA;MAkGI,OAAO,CAAC,GAAGvB,EAAA,EAAqB,KAAIuB,CAAA,GAAAxD,CAAA,CAAmBiE,kBAAA,KAAnB,OAAAT,CAAA,GAAyC,EAAG,EAClF;IAAA;IAaA,OAAOU,YAAYV,CAAA,EAA0B;MAC3C,OAAI,CAACA,CAAA,IAAaA,CAAA,KAAc,UAAgB,KACzCA,CAAA,KAAc,YAAYrD,CAAA,+BAAAgE,MAAA,CAAmCX,CAAS,UAC/E;IAAA;IAEA,OAAOY,gBAAA,EAAoD;MAAA,IAApCZ,CAAA,GAAAa,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAgC,CAAC;MArH1D,IAAAX,CAAA;MAsHI,kBAAAS,MAAA,CACInE,CAAA,CAAmBoE,eAAA,CAAgBZ,CAAK,CAAC,+nBAAAW,MAAA,CAyBvC,KAAKD,WAAA,EAAYR,CAAA,GAAAF,CAAA,CAAMpD,CAAA,CAAW4B,IAAI,MAArB,OAAA0B,CAAA,GAA0B,EAAE,CAAC;IAGtD;IAwBA,IAAIc,WAAA,EAAa;MA3KnB,IAAAhB,CAAA;MA4KI,QAAQA,CAAA,QAAKiB,YAAA,CAAarE,CAAA,CAAWqB,WAAW,MAAxC,OAAA+B,CAAA,GAAoE,MAC9E;IAAA;IAEA,IAAIgB,WAAWhB,CAAA,EAAuC;MAChDA,CAAA,KAAU,KAAKgB,UAAA,KACdhB,CAAA,GAEMhG,CAAA,CAAekH,QAAA,CAASlB,CAAK,IACtC,KAAKmB,YAAA,CAAavE,CAAA,CAAWqB,WAAA,EAAa+B,CAAK,IAE/CoB,OAAA,CAAQC,IAAA,iDAAAV,MAAA,CAAqD3G,CAAA,CAAesH,IAAA,CAAK,CAAC,CAAE,IAJpF,KAAKC,eAAA,CAAgB3E,CAAA,CAAWqB,WAAW,EAM/C;IAAA;IAEA,IAAIuD,eAAA,EAAiB;MACnB,OAAK,KAAKC,YAAA,CAAa7E,CAAA,CAAWoB,gBAAgB,IAC3C,CAAE,KAAKiD,YAAA,CAAarE,CAAA,CAAWoB,gBAAgB,IADM0D,CAAA,OAAK1C,CAAA,CAEnE;IAAA;IAEA,IAAIwC,eAAexB,CAAA,EAAK;MAElBA,CAAA,IAAO,KAAKwB,cAAA,KAEZxB,CAAA,IAAO,OACT,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWoB,gBAAgB,IAEhD,KAAKmD,YAAA,CAAavE,CAAA,CAAWoB,gBAAA,KAAA2C,MAAA,CAAqB,CAACX,CAAG,CAAE,EAE5D;IAAA;IAEA,IAAI2B,mBAAA,EAAqB;MA1M3B,IAAA3B,CAAA;MA2MI,QAAOA,CAAA,GAAA0B,CAAA,OAAKrC,CAAA,MAAL,OAAAW,CAAA,GAA4BnB,CACrC;IAAA;IAEA,IAAI8C,mBAAmB3B,CAAA,EAA2B;MAChDH,CAAA,OAAKR,CAAA,EAAsBW,CAAA,CAC7B;IAAA;IAEA,IAAI4B,sBAAA,EAAwB;MAlN9B,IAAA5B,CAAA;MAmNI,QAAOA,CAAA,GAAA0B,CAAA,OAAKtC,CAAA,MAAL,OAAAY,CAAA,GAA+BpB,CACxC;IAAA;IAEA,IAAIgD,sBAAsB5B,CAAA,EAA2B;MACnDH,CAAA,OAAKT,CAAA,EAAyBY,CAAA,CAChC;IAAA;IAGA,IAAI6B,KAAA,EAAmC;MA3NzC,IAAA7B,CAAA;MA4NI,QAAOA,CAAA,GAAA0B,CAAA,OAAK5C,CAAA,MAAL,gBAAAkB,CAAA,CAAY8B,MACrB;IAAA;IAEA,IAAIC,IAAA,EAAqD;MA/N3D,IAAA/B,CAAA;MAgOI,QAAOA,CAAA,QAAKF,QAAA,KAAL,gBAAAE,CAAA,CAAe+B,GACxB;IAAA;IAEA,IAAIC,MAAA,EAAQ;MAnOd,IAAAhC,CAAA;MAoOI,QAAOA,CAAA,GAAAlG,CAAA,CAAS,KAAKgG,QAAQ,MAAtB,OAAAE,CAAA,GAA2B,IACpC;IAAA;IAEA,IAAIiC,gBAAA,EAA0D;MAC5D,OAAOP,CAAA,OAAKpC,CAAA,CACd;IAAA;IAEA,IAAI2C,gBAAgBjC,CAAA,EAA+C;MACjEH,CAAA,OAAKP,CAAA,EAAmBU,CAAA,CAC1B;IAAA;IAEA,IAAIkC,IAAA,EAAM;MAIR,OAAO,KAAKjB,YAAA,CAAa,KAAK,CAChC;IAAA;IAEA,IAAIiB,IAAIlC,CAAA,EAAa;MAGfA,CAAA,KAAQ,KAAKkC,GAAA,KAEblC,CAAA,IAAO,OACT,KAAKuB,eAAA,CAAgB,KAAK,IAE1B,KAAKJ,YAAA,CAAa,OAAOnB,CAAG,EAEhC;IAAA;IAEA,IAAImC,KAAA,EAAkD;MAlQxD,IAAAnC,CAAA;MAmQI,QAAQA,CAAA,QAAKiB,YAAA,CAAarE,CAAA,CAAW2B,IAAI,MAAjC,OAAAyB,CAAA,GAAwE,MAClF;IAAA;IAEA,IAAImC,KAAKnC,CAAA,EAAgD;MAEnDA,CAAA,KAAQ,KAAKmC,IAAA,KAEbnC,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAW2B,IAAA,EAAMyB,CAAG,IAEtC,KAAKuB,eAAA,CAAgB3E,CAAA,CAAW2B,IAAI,EAExC;IAAA;IAEA,IAAI6D,QAAA,EAAU;MACZ,IAAMpC,CAAA,GAAM,KAAKiB,YAAA,CAAa,SAAS;MACvC,OAAIjB,CAAA,KAAQ,KAAW,SACnB,CAAC,QAAQ,YAAY,MAAM,EAAEkB,QAAA,CAASlB,CAAG,IAAUA,CAAA,GAChD,MAAMoC,OACf;IAAA;IAEA,IAAIA,QAAQpC,CAAA,EAAK;MAGXA,CAAA,IAAO,KAAKiB,YAAA,CAAa,SAAS,MAElC,CAAC,IAAI,QAAQ,YAAY,MAAM,EAAEC,QAAA,CAASlB,CAAG,IAC/C,KAAKmB,YAAA,CAAa,WAAWnB,CAAG,IAEhC,KAAKuB,eAAA,CAAgB,SAAS,EAElC;IAAA;IAEA,IAAIc,MAAA,EAAQ;MACV,OAAO,KAAKpB,YAAA,CAAarE,CAAA,CAAWG,KAAK,KAAK,IAChD;IAAA;IAEA,IAAIsF,MAAMrC,CAAA,EAAK;MAETA,CAAA,KAAQ,KAAKqC,KAAA,KAEbrC,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAWG,KAAA,EAAO,EAAE,IAEtC,KAAKwE,eAAA,CAAgB3E,CAAA,CAAWG,KAAK,EAEzC;IAAA;IAEA,IAAIuF,gBAAA,EAAkB;MACpB,OAAO,KAAKb,YAAA,CAAa7E,CAAA,CAAWI,gBAAgB,CACtD;IAAA;IAEA,IAAIsF,gBAAgBtC,CAAA,EAAK;MAEnBA,CAAA,KAAQ,KAAKsC,eAAA,IAEjB,KAAKC,eAAA,CAAgB3F,CAAA,CAAWI,gBAAA,EAAkB,CAAC,CAACgD,CAAG,CACzD;IAAA;IAEA,IAAIwC,eAAA,EAAiB;MACnB,OAAO,KAAKf,YAAA,CAAa7E,CAAA,CAAWK,eAAe,CACrD;IAAA;IAEA,IAAIuF,eAAexC,CAAA,EAAK;MAElBA,CAAA,KAAQ,KAAKwC,cAAA,KAEbxC,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAWK,eAAA,EAAiB,EAAE,IAEhD,KAAKsE,eAAA,CAAgB3E,CAAA,CAAWK,eAAe,EAEnD;IAAA;IAEA,IAAIwF,UAAA,EAAgC;MAClC,IAAMzC,CAAA,GAAM,KAAKiB,YAAA,CAAarE,CAAA,CAAWuB,UAAU;MACnD,IAAI6B,CAAA,IAAO,MAAM;MACjB,IAAME,CAAA,GAAM,CAACF,CAAA;MACb,OAAQ0C,MAAA,CAAOC,KAAA,CAAMzC,CAAG,IAAU,SAANA,CAC9B;IAAA;IAEA,IAAIuC,UAAUzC,CAAA,EAAyB;MAEjCA,CAAA,KAAQ,KAAKyC,SAAA,KAEbzC,CAAA,IAAO,OACT,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWuB,UAAU,IAE1C,KAAKgD,YAAA,CAAavE,CAAA,CAAWuB,UAAA,KAAAwC,MAAA,CAAeX,CAAG,CAAE,EAErD;IAAA;IAGA,IAAI4C,WAAA,EAAiC;MAhWvC,IAAA5C,CAAA;MAiWI,OAAI,KAAKyB,YAAA,CAAa7E,CAAA,CAAWiB,WAAW,IACnC,KAAKoD,YAAA,CAAarE,CAAA,CAAWiB,WAAW,KAG1CmC,CAAA,GAAAlE,EAAA,CAAoB,KAAKoG,GAAG,MAA5B,OAAAlC,CAAA,GAAiC,MAC1C;IAAA;IAEA,IAAI4C,WAAW5C,CAAA,EAAyB;MAElCA,CAAA,KAAQ,KAAK4C,UAAA,KAEb5C,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAWiB,WAAA,EAAamC,CAAG,IAE7C,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWiB,WAAW,EAE/C;IAAA;IAEA,IAAIgF,cAAA,EAAgB;MAnXtB,IAAA7C,CAAA;MAoXI,QAAQA,CAAA,QAAKiB,YAAA,CAAarE,CAAA,CAAWS,cAAc,MAA3C,OAAA2C,CAAA,GAAuE,MACjF;IAAA;IAEA,IAAI6C,cAAc7C,CAAA,EAAqC;MACjDA,CAAA,KAAQ,KAAK6C,aAAA,KAEb7C,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAWS,cAAA,EAAgB2C,CAAG,IAEhD,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWS,cAAc,EAElD;IAAA;IAEA,IAAIyF,cAAA,EAAgB;MAjYtB,IAAA9C,CAAA;MAkYI,QAAQA,CAAA,QAAKiB,YAAA,CAAarE,CAAA,CAAWU,cAAc,MAA3C,OAAA0C,CAAA,GAAuE,MACjF;IAAA;IAEA,IAAI8C,cAAc9C,CAAA,EAAqC;MACjDA,CAAA,KAAQ,KAAK8C,aAAA,KAEb9C,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAWU,cAAA,EAAgB0C,CAAG,IAEhD,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWU,cAAc,EAElD;IAAA;IAEA,IAAIyF,eAAA,EAAiB;MA/YvB,IAAA/C,CAAA;MAgZI,QAAQA,CAAA,QAAKiB,YAAA,CAAarE,CAAA,CAAWW,eAAe,MAA5C,OAAAyC,CAAA,GAAyE,MACnF;IAAA;IAEA,IAAI+C,eAAe/C,CAAA,EAAsC;MACnDA,CAAA,KAAQ,KAAK+C,cAAA,KAEb/C,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAWW,eAAA,EAAiByC,CAAG,IAEjD,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWW,eAAe,EAEnD;IAAA;IAEA,IAAIyF,iBAAA,EAAmB;MACrB,IAAMhD,CAAA,GAAM,KAAKiB,YAAA,CAAarE,CAAA,CAAWY,kBAAkB;MAC3D,IAAIwC,CAAA,IAAO,MAAM;MACjB,IAAME,CAAA,GAAM,CAACF,CAAA;MACb,OAAQ0C,MAAA,CAAOC,KAAA,CAAMzC,CAAG,IAAU,SAANA,CAC9B;IAAA;IAEA,IAAI8C,iBAAiBhD,CAAA,EAAyB;MACxCA,CAAA,IAAO,OACT,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWY,kBAAkB,IAElD,KAAK2D,YAAA,CAAavE,CAAA,CAAWY,kBAAA,KAAAmD,MAAA,CAAuBX,CAAG,CAAE,CAE7D;IAAA;IAEA,IAAIiD,eAAA,EAAiB;MACnB,IAAMjD,CAAA,GAAM,KAAKiB,YAAA,CAAarE,CAAA,CAAWa,gBAAgB;MACzD,IAAIuC,CAAA,IAAO,MAAM;MACjB,IAAME,CAAA,GAAM,CAACF,CAAA;MACb,OAAQ0C,MAAA,CAAOC,KAAA,CAAMzC,CAAG,IAAU,SAANA,CAC9B;IAAA;IAEA,IAAI+C,eAAejD,CAAA,EAAyB;MACtCA,CAAA,IAAO,OACT,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWa,gBAAgB,IAEhD,KAAK0D,YAAA,CAAavE,CAAA,CAAWa,gBAAA,KAAAkD,MAAA,CAAqBX,CAAG,CAAE,CAE3D;IAAA;IAEA,IAAIkD,eAAA,EAAiB;MACnB,IAAMlD,CAAA,GAAM,KAAKiB,YAAA,CAAarE,CAAA,CAAWc,gBAAgB;MACzD,IAAIsC,CAAA,IAAO,MAAM;MACjB,IAAME,CAAA,GAAM,CAACF,CAAA;MACb,OAAQ0C,MAAA,CAAOC,KAAA,CAAMzC,CAAG,IAAU,SAANA,CAC9B;IAAA;IAEA,IAAIgD,eAAelD,CAAA,EAAyB;MACtCA,CAAA,IAAO,OACT,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWc,gBAAgB,IAEhD,KAAKyD,YAAA,CAAavE,CAAA,CAAWc,gBAAA,KAAAiD,MAAA,CAAqBX,CAAG,CAAE,CAE3D;IAAA;IAEA,IAAImD,aAAA,EAAe;MACjB,IAAMnD,CAAA,GAAM,KAAKiB,YAAA,CAAarE,CAAA,CAAWe,cAAc;MACvD,IAAIqC,CAAA,IAAO,MAAM;MACjB,IAAME,CAAA,GAAM,CAACF,CAAA;MACb,OAAQ0C,MAAA,CAAOC,KAAA,CAAMzC,CAAG,IAAU,SAANA,CAC9B;IAAA;IAEA,IAAIiD,aAAanD,CAAA,EAAyB;MACpCA,CAAA,IAAO,OACT,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWe,cAAc,IAE9C,KAAKwD,YAAA,CAAavE,CAAA,CAAWe,cAAA,KAAAgD,MAAA,CAAmBX,CAAG,CAAE,CAEzD;IAAA;IAEA,IAAIoD,aAAA,EAAe;MAzdrB,IAAApD,CAAA;MA0dI,QAAOA,CAAA,QAAKiB,YAAA,CAAarE,CAAA,CAAWE,aAAa,MAA1C,OAAAkD,CAAA,GAA+C,MACxD;IAAA;IAEA,IAAIoD,aAAapD,CAAA,EAAyB;MAEpCA,CAAA,KAAQ,KAAKoD,YAAA,KAEbpD,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAWE,aAAA,EAAekD,CAAG,IAE/C,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWE,aAAa,EAEjD;IAAA;IAEA,IAAIuG,SAAA,EAAW;MAxejB,IAAArD,CAAA;MAyeI,QAAOA,CAAA,QAAKiB,YAAA,CAAarE,CAAA,CAAWM,SAAS,MAAtC,OAAA8C,CAAA,GAA2C,MACpD;IAAA;IAEA,IAAIqD,SAASrD,CAAA,EAAyB;MAEhCA,CAAA,KAAQ,KAAKqD,QAAA,KAEbrD,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAWM,SAAA,EAAW8C,CAAG,IAE3C,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWM,SAAS,EAE7C;IAAA;IAKA,IAAIoG,cAAA,EAAgB;MA1ftB,IAAAtD,CAAA,EAAAE,CAAA,EAAAC,CAAA,EAAAF,CAAA;MA2fI,IAAI,KAAKwB,YAAA,CAAa7E,CAAA,CAAWO,cAAc,GAC7C,QAAO6C,CAAA,QAAKiB,YAAA,CAAarE,CAAA,CAAWO,cAAc,MAA3C,OAAA6C,CAAA,GAAgD;MAEzD,IAAI,KAAKyB,YAAA,CAAa7E,CAAA,CAAWiB,WAAW,GAAG;QAC7C,IAAM,GAAG0F,CAAU,IAAIvH,EAAA,EAAkBkE,CAAA,QAAK0C,UAAA,KAAL,OAAA1C,CAAA,GAAmB,EAAE;QAC9D,QAAOC,CAAA,OAAIqD,eAAA,CAAgBD,CAAU,EAAEE,GAAA,CAAI,OAAO,MAA3C,OAAAtD,CAAA,GAAgD,MACzD;MAAA;MACA,IAAI,KAAK+B,GAAA,EACP,QAAOjC,CAAA,OAAIuD,eAAA,CAAgB,KAAKtB,GAAG,EAAEuB,GAAA,CAAI,OAAO,MAAzC,OAAAxD,CAAA,GAA8C,MAGzD;IAAA;IAKA,IAAIqD,cAActD,CAAA,EAAyB;MACrCA,CAAA,KAAQ,KAAKsD,aAAA,KAEbtD,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAWO,cAAA,EAAgB6C,CAAG,IAEhD,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWO,cAAc,EAElD;IAAA;IAEA,IAAIuG,OAAA,EAAS;MACX,IAAM1D,CAAA,GAAW,KAAKiB,YAAA,CAAarE,CAAA,CAAWO,cAAc;QACtD+C,CAAA,GAAM,KAAKe,YAAA,CAAarE,CAAA,CAAWM,SAAS;MAClD,OAAAmD,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACKqB,CAAA,OAAKxC,CAAA,IACJc,CAAA,IAAY,OAAO;QAAE2D,QAAA,EAAA3D;MAAS,IAAI,CAAC,IACnCE,CAAA,IAAO,OAAO;QAAE0D,GAAA,EAAA1D;MAAI,IAAI,CAAC,CAC/B;IACF;IAEA,IAAIwD,OAAO1D,CAAA,EAAK;MACdH,CAAA,OAAKX,CAAA,EAAUc,CAAA,WAAAA,CAAA,GAAO,CAAC,EACzB;IAAA;IAEA,IAAI6D,MAAA,EAAQ;MAGV,OAAOnI,EAAA,CAAS,KAAKoE,QAAA,EAAU,KAAK+B,IAAI,CAC1C;IAAA;IAEA,IAAIiC,OAAA,EAA6B;MAziBnC,IAAA9D,CAAA;MA0iBI,QAAOA,CAAA,QAAKiB,YAAA,CAAarE,CAAA,CAAWQ,OAAO,MAApC,OAAA4C,CAAA,GAAyC,MAClD;IAAA;IAEA,IAAI8D,OAAO9D,CAAA,EAAyB;MAE9BA,CAAA,KAAQ,KAAK8D,MAAA,KAEb9D,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAWQ,OAAA,EAAS4C,CAAG,IAEzC,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWQ,OAAO,EAE3C;IAAA;IAEA,IAAI2G,uBAAA,EAA6C;MAxjBnD,IAAA/D,CAAA;MAyjBI,QAAOA,CAAA,QAAKiB,YAAA,CAAarE,CAAA,CAAWC,wBAAwB,MAArD,OAAAmD,CAAA,GAA0D,MACnE;IAAA;IAEA,IAAI+D,uBAAuB/D,CAAA,EAAyB;MAE9CA,CAAA,KAAQ,KAAK+D,sBAAA,KAEb/D,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAWC,wBAAA,EAA0BmD,CAAG,IAE1D,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWC,wBAAwB,EAE5D;IAAA;IAEA,IAAImH,WAAA,EAA+C;MAvkBrD,IAAAhE,CAAA;MAykBI,QAAQA,CAAA,QAAKiB,YAAA,CAAarE,CAAA,CAAWwB,WAAW,MAAxC,OAAA4B,CAAA,GAAsE9E,CAAA,CAAc,KAAK4E,QAAQ,CAC3G;IAAA;IAEA,IAAIkE,WAAWhE,CAAA,EAAuC;MAEhDA,CAAA,KAAQ,KAAKgE,UAAA,KAEbhE,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAWwB,WAAA,EAAa4B,CAAG,IAE7C,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWwB,WAAW,EAE/C;IAAA;IAEA,IAAI6F,iBAAA,EAAmB;MAErB,OAAI,KAAKxC,YAAA,CAAa7E,CAAA,CAAWyB,kBAAkB,IAC1C,CAAE,KAAK4C,YAAA,CAAarE,CAAA,CAAWyB,kBAAkB,IAEnDjD,CAAA,CAAoB,KAAK0E,QAAQ,CAC1C;IAAA;IAEA,IAAImE,iBAAiBjE,CAAA,EAAyB;MAExCA,CAAA,IAAO,KAAKiE,gBAAA,KAEZjE,CAAA,IAAO,OACT,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWyB,kBAAkB,IAElD,KAAK8C,YAAA,CAAavE,CAAA,CAAWyB,kBAAA,KAAAsC,MAAA,CAAuB,CAACX,CAAG,CAAE,EAE9D;IAAA;IAEA,IAAIkE,cAAA,EAAgB;MA1mBtB,IAAAlE,CAAA,EAAAE,CAAA;MA2mBI,IAAI,KAAKuB,YAAA,CAAa7E,CAAA,CAAW0B,gBAAgB,GAAG;QAClD,IAAM;YAAE6F,cAAA,EAAAhE;UAAe,IAAI;UACrBF,CAAA,IAAcD,CAAA,QAAKF,QAAA,CAASsE,QAAA,CAASC,GAAA,CAAI,CAAC,MAA5B,OAAArE,CAAA,GAAiC;UAC/CuD,CAAA,IAAgBrD,CAAA,QAAKJ,QAAA,CAASsE,QAAA,CAASE,KAAA,CAAM,CAAC,MAA9B,OAAApE,CAAA,GAAmC;QACzD,OAAOqE,IAAA,CAAKC,GAAA,CAAIjB,CAAA,EAAetD,CAAA,GAAeE,CAAyB,CACzE;MAAA;MACA,OAAO7E,EAAA,CAAiB,KAAKwE,QAAQ,CACvC;IAAA;IAEA,IAAIqE,eAAA,EAAiB;MACnB,IAAK,KAAK1C,YAAA,CAAa7E,CAAA,CAAW0B,gBAAgB,GAClD,OAAO,CAAE,KAAK2C,YAAA,CAAarE,CAAA,CAAW0B,gBAAgB,CACxD;IAAA;IAEA,IAAI6F,eAAenE,CAAA,EAAyB;MAEtCA,CAAA,IAAO,KAAKmE,cAAA,KAEZnE,CAAA,IAAO,OACT,KAAKuB,eAAA,CAAgB3E,CAAA,CAAW0B,gBAAgB,IAEhD,KAAK6C,YAAA,CAAavE,CAAA,CAAW0B,gBAAA,KAAAqC,MAAA,CAAqB,CAACX,CAAG,CAAE,EAE5D;IAAA;IAEA,IAAIoE,SAAA,EAAW;MACb,OAAO5I,EAAA,CAAY,KAAKsE,QAAQ,CAClC;IAAA;IAEA,MAAM7F,aAAsB+F,CAAA,EAA0B;MACpD,OAAO9F,CAAA,CAAa,KAAK4F,QAAA,EAAUE,CAAS,CAC9C;IAAA;IAEA,IAAIyE,eAAA,EAAiB;MACnB,OAAOnK,CAAA,CAAkB,KAAKwF,QAAQ,CACxC;IAAA;IAEA,IAAI4E,UAAA,EAAY;MACd,OAAOtK,CAAA,CAAa,KAAK0F,QAAQ,CACnC;IAAA;IAEA,MAAMvF,YAAYyF,CAAA,EAAqB;MACrC,OAAOxF,CAAA,CAAY,KAAKsF,QAAA,EAAUE,CAAQ,CAC5C;IAAA;IAEA,IAAI2E,cAAA,EAAgB;MAClB,OAAOjK,CAAA,CAAiB,KAAKoF,QAAQ,CACvC;IAAA;IAEA,IAAI8E,SAAA,EAAW;MACb,OAAOhJ,EAAA,CAAY,KAAKkE,QAAQ,CAClC;IAAA;IAEAjF,aAAA,EAAe;MACb,OAAOC,CAAA,CAAa,KAAKgF,QAAA,EAAU,KAAK+B,IAAI,CAC9C;IAAA;IAEA,IAAIgD,WAAA,EAAa;MACf,OAAO7J,CAAA,CAAc,KAAK8E,QAAA,EAAU,KAAK+B,IAAI,CAC/C;IAAA;IAEA,IAAIiD,eAAA,EAAqD;MACvD,IAAM9E,CAAA,GAAM,KAAKiB,YAAA,CAAarE,CAAA,CAAWsB,eAAe;MACxD,IAAI8B,CAAA,KAAQxG,CAAA,CAAcuL,GAAA,IAAO/E,CAAA,KAAQxG,CAAA,CAAcwL,MAAA,EAAQ,OAAOhF,CAExE;IAAA;IAEA,IAAI8E,eAAe9E,CAAA,EAAyC;MACtDA,CAAA,KAAQ,KAAK8E,cAAA,KAEb9E,CAAA,KAAQxG,CAAA,CAAcuL,GAAA,IAAO/E,CAAA,KAAQxG,CAAA,CAAcwL,MAAA,GACrD,KAAK7D,YAAA,CAAavE,CAAA,CAAWsB,eAAA,EAAiB8B,CAAG,IAEjD,KAAKuB,eAAA,CAAgB3E,CAAA,CAAWsB,eAAe,EAEnD;IAAA;IAEA,IAAIkC,SAAA,EAAW;MAgBb,OAAAC,aAAA,CAAAA,aAAA,KAfyD,KAAK4E,iBAAA,CAAkB,EAC7EC,MAAA,CAAQhF,CAAA,IACAA,CAAA,CAASiF,UAAA,CAAW,WAAW,KAAK,CAAE,CAACvI,CAAA,CAAWgB,YAAY,EAAesD,QAAA,CAAShB,CAAQ,CACtG,EACAkF,MAAA,CACC,CAAClF,CAAA,EAAWC,CAAA,KAAa;QACvB,IAAMF,CAAA,GAAQ,KAAKgB,YAAA,CAAad,CAAQ;QACxC,OAAIF,CAAA,IAAS,SACXC,CAAA,CAAUC,CAAA,CAASkF,OAAA,CAAQ,cAAc,EAAE,EAAEA,OAAA,CAAQ,MAAM,GAAG,CAAW,IAAIpF,CAAA,GAExEC,CACT;MAAA,GACA,CAAC,CACH,IAIGwB,CAAA,OAAKzC,CAAA,CACV;IACF;IAEA,IAAImB,SAASJ,CAAA,EAAqC;MAChDH,CAAA,OAAKZ,CAAA,EAAYe,CAAA,WAAAA,CAAA,GAAO,CAAC,IACnB,KAAK+B,GAAA,IACT,KAAKA,GAAA,CAAIuD,IAAA,CAAK,MAAM5D,CAAA,OAAKzC,CAAA,CAAS,CAEtC;IAAA;IAEA,IAAIsG,WAAA,EAAa;MACf,OAAO7D,CAAA,OAAKvC,CAAA,CACd;IAAA;IAEA,IAAIoG,WAAWvF,CAAA,EAA+C;MAC5DH,CAAA,OAAKV,CAAA,EAAca,CAAA,CACrB;IAAA;IAEA,IAAIwF,KAAA,EAAO;MA7tBb,IAAAxF,CAAA;MA8tBI,QAAOA,CAAA,QAAKiB,YAAA,CAAarE,CAAA,CAAW4B,IAAI,MAAjC,OAAAwB,CAAA,GAAsC0B,CAAA,OAAKnC,CAAA,CACpD;IAAA;IAEA,IAAIiG,KAAKxF,CAAA,EAAK;MACRA,CAAA,GACF,KAAKmB,YAAA,CAAavE,CAAA,CAAW4B,IAAA,EAAMwB,CAAG,IAEtC,KAAKuB,eAAA,CAAgB3E,CAAA,CAAW4B,IAAI,CAExC;IAAA;IASAiH,KAAA,EAAO;MACL5F,CAAA,OAAKf,CAAA,EAAQ5F,CAAA,CAAW,MAAgC,KAAK4G,QAAA,EAAU4B,CAAA,OAAK5C,CAAA,CAAK,EACnF;IAAA;IAEA4G,OAAA,EAAS;MACPtM,CAAA,CAAS,KAAK0G,QAAA,EAAU4B,CAAA,OAAK5C,CAAA,GAAO,IAA8B,GAClEe,CAAA,OAAKf,CAAA,EAAQ,OACf;IAAA;IAEA6G,yBAAyB3F,CAAA,EAAkBE,CAAA,EAAyBC,CAAA,EAAyB;MAzvB/F,IAAAoD,CAAA,EAAAqC,CAAA;MAgwBI,QALqBpJ,CAAA,CAAmBiE,kBAAA,CAAmBS,QAAA,CAASlB,CAAQ,KACxD,CAAC,CAAC,OAAO,YAAY,SAAS,EAAEkB,QAAA,CAASlB,CAAQ,KACnE,MAAM2F,wBAAA,CAAyB3F,CAAA,EAAUE,CAAA,EAAUC,CAAQ,GAGrDH,CAAA;QACN,KAAKpD,CAAA,CAAWkB,oBAAA;UACd,KAAK6D,kBAAA,GAAqBxB,CAAA,WAAAA,CAAA,GAAY;UACtC;QACF,KAAKvD,CAAA,CAAWmB,uBAAA;UACd,KAAK6D,qBAAA,GAAwBzB,CAAA,WAAAA,CAAA,GAAY;UACzC;QACF,KAAK;UAAO;YACV,IAAM0F,CAAA,GAAS,CAAC,CAAC3F,CAAA;cACX4F,CAAA,GAAS,CAAC,CAAC3F,CAAA;YACb,CAAC0F,CAAA,IAAUC,CAAA,GACbC,CAAA,OAAKvG,CAAA,EAAAC,CAAA,EAALuG,IAAA,SACSH,CAAA,IAAU,CAACC,CAAA,GACpB,KAAKJ,MAAA,CAAO,IACHG,CAAA,IAAUC,CAAA,KACnB,KAAKJ,MAAA,CAAO,GACZK,CAAA,OAAKvG,CAAA,EAAAC,CAAA,EAALuG,IAAA;YAEF;UACF;QACA,KAAK;UACH,IAAI7F,CAAA,KAAaD,CAAA,EACf;UAAA,CAGFqD,CAAA,GAAA7B,CAAA,OAAK5C,CAAA,MAAL,QAAAyE,CAAA,CAAY0C,WAAA,CAAY,KAAKC,QAAA;UAC7B;QACF,KAAK;UACH,IAAI/F,CAAA,KAAaD,CAAA,EACf;UAAA,CAEF0F,CAAA,GAAAlE,CAAA,OAAK5C,CAAA,MAAL,QAAA8G,CAAA,CAAYO,UAAA,CAAWhG,CAAA;UACvB;QACF,KAAKvD,CAAA,CAAWiB,WAAA;UACd,KAAKqE,GAAA,GAAMxI,CAAA,CAAc,IAAI;UAC7B;QACF,KAAKkD,CAAA,CAAWG,KAAA;UAAO;YACrB,IAAM8I,CAAA,GAAQ,KAAKxD,KAAA;YACb,KAAKN,GAAA,IAETX,OAAA,CAAQgF,IAAA,CACN,+HACF,GAEI,KAAKvE,IAAA,KACT,KAAKA,IAAA,CAAKwE,MAAA,CAAOhE,KAAA,GAAQwD,CAAA;YAE3B;UACF;QACA,KAAKjJ,CAAA,CAAWgB,YAAA;UACVuC,CAAA,IACFmG,KAAA,CAAMnG,CAAQ,EACXoG,IAAA,CAAMV,CAAA,IAASA,CAAA,CAAKW,IAAA,CAAK,CAAC,EAC1BD,IAAA,CAAMV,CAAA,IAAU,KAAKzF,QAAA,GAAWyF,CAAK,EACrCY,KAAA,CAAM,MAAMrF,OAAA,CAAQY,KAAA,4DAAArB,MAAA,CAAiER,CAAQ,MAAG,CAAC;UAEtG;QACF,KAAKvD,CAAA,CAAWwB,WAAA;UAAA,CAEV+B,CAAA,IAAY,QAAQA,CAAA,KAAaD,CAAA,KACnC,KAAKwG,aAAA,CAAc,IAAIC,WAAA,CAAY,oBAAoB;YAAEC,QAAA,EAAU;YAAMC,OAAA,EAAS;UAAK,CAAC,CAAC;UAE3F;QACF,KAAKjK,CAAA,CAAWyB,kBAAA;UAAA,CACV8B,CAAA,IAAY,QAAQA,CAAA,KAAaD,CAAA,KACnC,KAAKwG,aAAA,CACH,IAAIC,WAAA,CAAY,0BAA0B;YAAEC,QAAA,EAAU;YAAMC,OAAA,EAAS;YAAMC,MAAA,EAAQ,KAAK7C;UAAiB,CAAC,CAC5G;UAEF;QACF,KAAKrH,CAAA,CAAW4B,IAAA;UAAA,CACV2B,CAAA,IAAY,QAAQA,CAAA,KAAaD,CAAA,KACnC,KAAKI,UAAA,CAAW;UAElB;MACJ;IACF;IAEAA,WAAA,EAAa;MACX,IAAI,CAAC,KAAKyG,UAAA,EAAY;MAEtB,IAAM/G,CAAA,GAAW,KAAK+G,UAAA,CAAWC,aAAA,CAAc,mBAAmB;MAClE,IAAI,CAAChH,CAAA,EAAU;MAEf,IAAME,CAAA,GAAY,KAAKP,WAAA,CAAuCe,WAAA,CAAYgB,CAAA,OAAKnC,CAAA,KAAS,KAAKiG,IAAI;MACjGxF,CAAA,CAASiH,SAAA,GAAY/G,CACvB;IAAA;IAEAgH,kBAAA,EAA0B;MAx1B5B,IAAAlH,CAAA;MAAA,CAy1BIA,CAAA,SAAMkH,iBAAA,KAAN,QAAAlH,CAAA,CAAAgG,IAAA,QACI,KAAKlG,QAAA,IAAY,KAAKoC,GAAA,IAAO,CAACR,CAAA,OAAK5C,CAAA,KACrCiH,CAAA,OAAKvG,CAAA,EAAAC,CAAA,EAALuG,IAAA,MAEJ;IAAA;IAEAmB,qBAAA,EAA6B;MAC3B,KAAKzB,MAAA,CAAO,CACd;IAAA;IAEA0B,YAAYpH,CAAA,EAAoB;MAC1BA,CAAA,CAAMqH,MAAA,KAAW,KAAKvH,QAAA,IAExB,KAAK4G,aAAA,CACH,IAAIC,WAAA,CAAY3G,CAAA,CAAMmC,IAAA,EAAM;QAC1ByE,QAAA,EAAU;QACVE,MAAA,EAAS9G,CAAA,CAAsB8G;MACjC,CAAC,CACH,CAEJ;IAAA;EACF;AAzwBEhI,CAAA,OAAAwI,OAAA,IACAvI,CAAA,OAAAuI,OAAA,IACAtI,CAAA,OAAAsI,OAAA,IACArI,CAAA,OAAAqI,OAAA,IACApI,CAAA,OAAAoI,OAAA,IACAnI,CAAA,OAAAmI,OAAA,IACAlI,CAAA,OAAAkI,OAAA,IACAjI,CAAA,OAAAiI,OAAA,IACAhI,CAAA,OAAAgI,OAAA,IACA/H,CAAA,OAAA+H,OAAA,IAtBK9H,CAAA,OAAA+H,OAAA,IAipBC9H,CAAA,GAAY,eAAA+H,CAAA,EAAG;EACf9F,CAAA,OAAK3C,CAAA,MACT,MAAOc,CAAA,OAAKd,CAAA,EAAiB0I,OAAA,CAAQC,OAAA,CAAQ,IAC7C7H,CAAA,OAAKd,CAAA,EAAiB,OACtB,KAAK0G,IAAA,CAAK,EACZ;AAAA;AAAA,SAAA7I,CAAA,IAAA+K,UAAA,EAAAjL,EAAA,IAAAD,MAAA,EAAA7C,EAAA,IAAAD,UAAA,EAAA+F,CAAA,IAAAkI,mBAAA,EAAAtO,CAAA,IAAAD,sBAAA,EAAAwF,CAAA,IAAA8C,kBAAA,EAAA/C,CAAA,IAAAgD,qBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}