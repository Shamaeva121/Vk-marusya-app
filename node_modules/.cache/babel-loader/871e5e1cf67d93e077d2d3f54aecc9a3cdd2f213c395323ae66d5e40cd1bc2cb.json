{"ast":null,"code":"import _classPrivateMethodInitSpec from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _defineProperty from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldSet from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport _classPrivateFieldGet from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _assertClassBrand from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nvar _globalThis$document;\n/**\n * Super Media Element\n * Based on https://github.com/muxinc/custom-video-element - Mux - MIT License\n *\n * The goal is to create an element that works just like the video element\n * but can be extended/sub-classed, because native elements cannot be\n * extended today across browsers. Support for extending async loaded video\n * like API's. e.g. video players.\n */\n\n// The onevent like props are weirdly set on the HTMLElement prototype with other\n// generic events making it impossible to pick these specific to HTMLMediaElement.\nexport const Events = ['abort', 'canplay', 'canplaythrough', 'durationchange', 'emptied', 'encrypted', 'ended', 'error', 'loadeddata', 'loadedmetadata', 'loadstart', 'pause', 'play', 'playing', 'progress', 'ratechange', 'seeked', 'seeking', 'stalled', 'suspend', 'timeupdate', 'volumechange', 'waiting', 'waitingforkey', 'resize', 'enterpictureinpicture', 'leavepictureinpicture', 'webkitbeginfullscreen', 'webkitendfullscreen', 'webkitpresentationmodechanged'];\nexport const template = (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.createElement('template');\nif (template) {\n  template.innerHTML = /*html*/\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n        line-height: 0;\\n      }\\n\\n      video,\\n      audio {\\n        max-width: 100%;\\n        max-height: 100%;\\n        min-width: 100%;\\n        min-height: 100%;\\n      }\\n    </style>\\n    <slot></slot>\\n  \";\n}\n\n/**\n * @see https://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\n */\nexport const SuperMediaMixin = (superclass, _ref) => {\n  var _globalThis$document2, _SuperMedia, _isInit, _loadComplete, _hasLoaded, _isLoaded, _nativeEl, _standinEl, _SuperMedia_brand, _isDefined;\n  let {\n    tag,\n    is\n  } = _ref;\n  const nativeElTest = (_globalThis$document2 = globalThis.document) === null || _globalThis$document2 === void 0 ? void 0 : _globalThis$document2.createElement(tag, {\n    is\n  });\n  const nativeElProps = nativeElTest ? getNativeElProps(nativeElTest) : [];\n  return _isInit = /*#__PURE__*/new WeakMap(), _loadComplete = /*#__PURE__*/new WeakMap(), _hasLoaded = /*#__PURE__*/new WeakMap(), _isLoaded = /*#__PURE__*/new WeakMap(), _nativeEl = /*#__PURE__*/new WeakMap(), _standinEl = /*#__PURE__*/new WeakMap(), _SuperMedia_brand = /*#__PURE__*/new WeakSet(), _SuperMedia = class SuperMedia extends superclass {\n    static get observedAttributes() {\n      var _nativeElTest$constru, _nativeElTest$constru2;\n      _assertClassBrand(_SuperMedia, SuperMedia, _define).call(SuperMedia);\n\n      // Include any attributes from the custom built-in.\n      const natAttrs = (_nativeElTest$constru = nativeElTest === null || nativeElTest === void 0 || (_nativeElTest$constru2 = nativeElTest.constructor) === null || _nativeElTest$constru2 === void 0 ? void 0 : _nativeElTest$constru2.observedAttributes) !== null && _nativeElTest$constru !== void 0 ? _nativeElTest$constru : [];\n      return [...natAttrs, 'autopictureinpicture', 'disablepictureinpicture', 'disableremoteplayback', 'autoplay', 'controls', 'controlslist', 'crossorigin', 'loop', 'muted', 'playsinline', 'poster', 'preload', 'src'];\n    }\n    constructor() {\n      super();\n      _classPrivateMethodInitSpec(this, _SuperMedia_brand);\n      _classPrivateFieldInitSpec(this, _isInit, void 0);\n      _classPrivateFieldInitSpec(this, _loadComplete, void 0);\n      _classPrivateFieldInitSpec(this, _hasLoaded, false);\n      _classPrivateFieldInitSpec(this, _isLoaded, false);\n      _classPrivateFieldInitSpec(this, _nativeEl, void 0);\n      _classPrivateFieldInitSpec(this, _standinEl, void 0);\n      if (!this.shadowRoot) {\n        this.attachShadow({\n          mode: 'open'\n        });\n        this.shadowRoot.append(this.constructor.template.content.cloneNode(true));\n      }\n\n      // If a load method is provided in the child class create a load promise.\n      if (this.load !== SuperMedia.prototype.load) {\n        this.loadComplete = new PublicPromise();\n      }\n\n      // If the custom element is defined before the custom element's HTML is parsed\n      // no attributes will be available in the constructor (construction process).\n      // Wait until initializing in the attributeChangedCallback or\n      // connectedCallback or accessing any properties.\n    }\n    get loadComplete() {\n      return _classPrivateFieldGet(_loadComplete, this);\n    }\n    set loadComplete(promise) {\n      _classPrivateFieldSet(_isLoaded, this, false);\n      _classPrivateFieldSet(_loadComplete, this, promise);\n      promise === null || promise === void 0 || promise.then(() => {\n        _classPrivateFieldSet(_isLoaded, this, true);\n      });\n    }\n    get isLoaded() {\n      return _classPrivateFieldGet(_isLoaded, this);\n    }\n    get nativeEl() {\n      var _ref2, _classPrivateFieldGet2;\n      return (_ref2 = (_classPrivateFieldGet2 = _classPrivateFieldGet(_nativeEl, this)) !== null && _classPrivateFieldGet2 !== void 0 ? _classPrivateFieldGet2 : this.shadowRoot.querySelector(tag)) !== null && _ref2 !== void 0 ? _ref2 : this.querySelector(tag);\n    }\n    set nativeEl(val) {\n      _classPrivateFieldSet(_nativeEl, this, val);\n    }\n    get defaultMuted() {\n      return this.hasAttribute('muted');\n    }\n    set defaultMuted(val) {\n      this.toggleAttribute('muted', Boolean(val));\n    }\n    get src() {\n      return this.getAttribute('src');\n    }\n    set src(val) {\n      this.setAttribute('src', \"\".concat(val));\n    }\n    get preload() {\n      var _this$getAttribute, _this$nativeEl;\n      return (_this$getAttribute = this.getAttribute('preload')) !== null && _this$getAttribute !== void 0 ? _this$getAttribute : (_this$nativeEl = this.nativeEl) === null || _this$nativeEl === void 0 ? void 0 : _this$nativeEl.preload;\n    }\n    set preload(val) {\n      this.setAttribute('preload', \"\".concat(val));\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      // Initialize right after construction when the attributes become available.\n      _assertClassBrand(_SuperMedia_brand, this, _init).call(this);\n\n      // Only call loadSrc when the super class has a load method.\n      if (attrName === 'src' && this.load !== SuperMedia.prototype.load) {\n        _assertClassBrand(_SuperMedia_brand, this, _loadSrc).call(this);\n      }\n      _assertClassBrand(_SuperMedia_brand, this, _forwardAttribute).call(this, attrName, oldValue, newValue);\n    }\n    connectedCallback() {\n      _assertClassBrand(_SuperMedia_brand, this, _init).call(this);\n    }\n  }, _defineProperty(_SuperMedia, \"Events\", Events), _defineProperty(_SuperMedia, \"template\", template), _defineProperty(_SuperMedia, \"skipAttributes\", []), _isDefined = {\n    _: void 0\n  }, _SuperMedia;\n  function _define() {\n    if (_assertClassBrand(_SuperMedia, this, _isDefined)._) return;\n    _isDefined._ = _assertClassBrand(_SuperMedia, this, true);\n    const propsToAttrs = new Set(this.observedAttributes);\n    // defaultMuted maps to the muted attribute, handled manually below.\n    propsToAttrs.delete('muted');\n\n    // Passthrough native el functions from the custom el to the native el\n    for (let prop of nativeElProps) {\n      if (prop in this.prototype) continue;\n      const type = typeof nativeElTest[prop];\n      if (type == 'function') {\n        // Function\n        this.prototype[prop] = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          _assertClassBrand(_SuperMedia_brand, this, _init).call(this);\n          const fn = () => {\n            if (this.call) return this.call(prop, ...args);\n            return this.nativeEl[prop].apply(this.nativeEl, args);\n          };\n          if (this.loadComplete && !this.isLoaded) {\n            return this.loadComplete.then(fn);\n          }\n          return fn();\n        };\n      } else {\n        // Some properties like src, preload, defaultMuted are handled manually.\n\n        // Getter\n        let config = {\n          get() {\n            var _ref3, _this$get, _this$get2, _this$nativeEl2;\n            _assertClassBrand(_SuperMedia_brand, this, _init).call(this);\n            let attr = prop.toLowerCase();\n            if (propsToAttrs.has(attr)) {\n              const val = this.getAttribute(attr);\n              return val === null ? false : val === '' ? true : val;\n            }\n            return (_ref3 = (_this$get = (_this$get2 = this.get) === null || _this$get2 === void 0 ? void 0 : _this$get2.call(this, prop)) !== null && _this$get !== void 0 ? _this$get : (_this$nativeEl2 = this.nativeEl) === null || _this$nativeEl2 === void 0 ? void 0 : _this$nativeEl2[prop]) !== null && _ref3 !== void 0 ? _ref3 : _classPrivateFieldGet(_standinEl, this)[prop];\n          }\n        };\n        if (prop !== prop.toUpperCase()) {\n          // Setter (not a CONSTANT)\n          config.set = async function (val) {\n            _assertClassBrand(_SuperMedia_brand, this, _init).call(this);\n            let attr = prop.toLowerCase();\n            if (propsToAttrs.has(attr)) {\n              if (val === true || val === false || val == null) {\n                this.toggleAttribute(attr, Boolean(val));\n              } else {\n                this.setAttribute(attr, val);\n              }\n              return;\n            }\n            if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n            if (this.set) {\n              this.set(prop, val);\n              return;\n            }\n            this.nativeEl[prop] = val;\n          };\n        }\n        Object.defineProperty(this.prototype, prop, config);\n      }\n    }\n  }\n  async function _init() {\n    if (_classPrivateFieldGet(_isInit, this)) return;\n    _classPrivateFieldSet(_isInit, this, true);\n    _assertClassBrand(_SuperMedia_brand, this, _initStandinEl).call(this);\n    _assertClassBrand(_SuperMedia_brand, this, _initNativeEl).call(this);\n    for (let prop of nativeElProps) _assertClassBrand(_SuperMedia_brand, this, _upgradeProperty).call(this, prop);\n\n    // Keep some native child elements like track and source in sync.\n    const childMap = new Map();\n    // An unnamed <slot> will be filled with all of the custom element's\n    // top-level child nodes that do not have the slot attribute.\n    const slotEl = this.shadowRoot.querySelector('slot:not([name])');\n    slotEl === null || slotEl === void 0 || slotEl.addEventListener('slotchange', () => {\n      const removeNativeChildren = new Map(childMap);\n      slotEl.assignedElements().filter(el => ['track', 'source'].includes(el.localName)).forEach(async el => {\n        var _this$nativeEl$append, _this$nativeEl3;\n        // If the source or track is still in the assigned elements keep it.\n        removeNativeChildren.delete(el);\n        // Re-use clones if possible.\n        let clone = childMap.get(el);\n        if (!clone) {\n          clone = el.cloneNode();\n          childMap.set(el, clone);\n        }\n        if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n        (_this$nativeEl$append = (_this$nativeEl3 = this.nativeEl).append) === null || _this$nativeEl$append === void 0 || _this$nativeEl$append.call(_this$nativeEl3, clone);\n      });\n      removeNativeChildren.forEach(el => el.remove());\n    });\n\n    // The video events are dispatched on the SuperMediaElement instance.\n    // This makes it possible to add event listeners before the element is upgraded.\n    for (let type of this.constructor.Events) {\n      var _this$shadowRoot$addE, _this$shadowRoot;\n      (_this$shadowRoot$addE = (_this$shadowRoot = this.shadowRoot).addEventListener) === null || _this$shadowRoot$addE === void 0 || _this$shadowRoot$addE.call(_this$shadowRoot, type, evt => {\n        if (evt.target !== this.nativeEl) return;\n        this.dispatchEvent(new CustomEvent(evt.type, {\n          detail: evt.detail\n        }));\n      }, true);\n    }\n  }\n  function _upgradeProperty(prop) {\n    // Sets properties that are set before the custom element is upgraded.\n    // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n    if (Object.prototype.hasOwnProperty.call(this, prop)) {\n      const value = this[prop];\n      // Delete the set property from this instance.\n      delete this[prop];\n      // Set the value again via the (prototype) setter on this class.\n      this[prop] = value;\n    }\n  }\n  function _initStandinEl() {\n    // Neither Chrome or Firefox support setting the muted attribute\n    // after using document.createElement.\n    // Get around this by setting the muted property manually.\n    const dummyEl = document.createElement(tag, {\n      is\n    });\n    dummyEl.muted = this.hasAttribute('muted');\n    for (let {\n      name,\n      value\n    } of this.attributes) {\n      dummyEl.setAttribute(name, value);\n    }\n    _classPrivateFieldSet(_standinEl, this, {});\n    for (let name of getNativeElProps(dummyEl)) {\n      _classPrivateFieldGet(_standinEl, this)[name] = dummyEl[name];\n    }\n\n    // unload dummy video element\n    dummyEl.removeAttribute('src');\n    dummyEl.load();\n  }\n  async function _initNativeEl() {\n    if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n    // If there is no nativeEl by now, create it our bloody selves.\n    if (!this.nativeEl) {\n      const nativeEl = document.createElement(tag, {\n        is\n      });\n      nativeEl.part = tag;\n      this.shadowRoot.append(nativeEl);\n    }\n\n    // Neither Chrome or Firefox support setting the muted attribute\n    // after using document.createElement.\n    // Get around this by setting the muted property manually.\n    this.nativeEl.muted = this.hasAttribute('muted');\n  }\n  async function _loadSrc() {\n    var _this$loadComplete;\n    // The first time we use the Promise created in the constructor.\n    if (_classPrivateFieldGet(_hasLoaded, this)) this.loadComplete = new PublicPromise();\n    _classPrivateFieldSet(_hasLoaded, this, true);\n\n    // Wait 1 tick to allow other attributes to be set.\n    await Promise.resolve();\n    await this.load();\n    (_this$loadComplete = this.loadComplete) === null || _this$loadComplete === void 0 || _this$loadComplete.resolve();\n    await this.loadComplete;\n  }\n  async function _forwardAttribute(attrName, oldValue, newValue) {\n    if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n    // Ignore a few that don't need to be passed & skipped attributes.\n    // e.g. src: native element is using MSE and has a blob url as src attribute.\n    if (['id', 'class', ...this.constructor.skipAttributes].includes(attrName)) {\n      return;\n    }\n    if (newValue === null) {\n      var _this$nativeEl$remove, _this$nativeEl4;\n      (_this$nativeEl$remove = (_this$nativeEl4 = this.nativeEl).removeAttribute) === null || _this$nativeEl$remove === void 0 || _this$nativeEl$remove.call(_this$nativeEl4, attrName);\n    } else {\n      var _this$nativeEl$setAtt, _this$nativeEl5;\n      (_this$nativeEl$setAtt = (_this$nativeEl5 = this.nativeEl).setAttribute) === null || _this$nativeEl$setAtt === void 0 || _this$nativeEl$setAtt.call(_this$nativeEl5, attrName, newValue);\n    }\n  }\n};\nfunction getNativeElProps(nativeElTest) {\n  // Map all native element properties to the custom element\n  // so that they're applied to the native element.\n  // Skipping HTMLElement because of things like \"attachShadow\"\n  // causing issues. Most of those props still need to apply to\n  // the custom element.\n  let nativeElProps = [];\n\n  // Walk the prototype chain up to HTMLElement.\n  // This will grab all super class props in between.\n  // i.e. VideoElement and MediaElement\n  for (let proto = Object.getPrototypeOf(nativeElTest); proto && proto !== HTMLElement.prototype; proto = Object.getPrototypeOf(proto)) {\n    nativeElProps.push(...Object.getOwnPropertyNames(proto));\n  }\n  return nativeElProps;\n}\n\n/**\n * A utility to create Promises with convenient public resolve and reject methods.\n * @return {Promise}\n */\nclass PublicPromise extends Promise {\n  constructor() {\n    let executor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : () => {};\n    let res, rej;\n    super((resolve, reject) => {\n      executor(resolve, reject);\n      res = resolve;\n      rej = reject;\n    });\n    this.resolve = res;\n    this.reject = rej;\n  }\n}\nexport const SuperVideoElement = globalThis.document ? SuperMediaMixin(HTMLElement, {\n  tag: 'video'\n}) : class {};\nexport const SuperAudioElement = globalThis.document ? SuperMediaMixin(HTMLElement, {\n  tag: 'audio'\n}) : class {};","map":{"version":3,"names":["Events","template","_globalThis$document","globalThis","document","createElement","innerHTML","SuperMediaMixin","superclass","_ref","_globalThis$document2","_SuperMedia","_isInit","_loadComplete","_hasLoaded","_isLoaded","_nativeEl","_standinEl","_SuperMedia_brand","_isDefined","tag","is","nativeElTest","nativeElProps","getNativeElProps","WeakMap","WeakSet","SuperMedia","observedAttributes","_nativeElTest$constru","_nativeElTest$constru2","_assertClassBrand","_define","call","natAttrs","constructor","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","shadowRoot","attachShadow","mode","append","content","cloneNode","load","prototype","loadComplete","PublicPromise","_classPrivateFieldGet","promise","_classPrivateFieldSet","then","isLoaded","nativeEl","_ref2","_classPrivateFieldGet2","querySelector","val","defaultMuted","hasAttribute","toggleAttribute","Boolean","src","getAttribute","setAttribute","concat","preload","_this$getAttribute","_this$nativeEl","attributeChangedCallback","attrName","oldValue","newValue","_init","_loadSrc","_forwardAttribute","connectedCallback","_defineProperty","_","propsToAttrs","Set","delete","prop","type","_len","arguments","length","args","Array","_key","fn","apply","config","get","_ref3","_this$get","_this$get2","_this$nativeEl2","attr","toLowerCase","has","toUpperCase","set","Object","defineProperty","_initStandinEl","_initNativeEl","_upgradeProperty","childMap","Map","slotEl","addEventListener","removeNativeChildren","assignedElements","filter","el","includes","localName","forEach","_this$nativeEl$append","_this$nativeEl3","clone","remove","_this$shadowRoot$addE","_this$shadowRoot","evt","target","dispatchEvent","CustomEvent","detail","hasOwnProperty","value","dummyEl","muted","name","attributes","removeAttribute","part","_this$loadComplete","Promise","resolve","skipAttributes","_this$nativeEl$remove","_this$nativeEl4","_this$nativeEl$setAtt","_this$nativeEl5","proto","getPrototypeOf","HTMLElement","push","getOwnPropertyNames","executor","undefined","res","rej","reject","SuperVideoElement","SuperAudioElement"],"sources":["d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/super-media-element/super-media-element.js"],"sourcesContent":["/**\n * Super Media Element\n * Based on https://github.com/muxinc/custom-video-element - Mux - MIT License\n *\n * The goal is to create an element that works just like the video element\n * but can be extended/sub-classed, because native elements cannot be\n * extended today across browsers. Support for extending async loaded video\n * like API's. e.g. video players.\n */\n\n// The onevent like props are weirdly set on the HTMLElement prototype with other\n// generic events making it impossible to pick these specific to HTMLMediaElement.\nexport const Events = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  'timeupdate',\n  'volumechange',\n  'waiting',\n  'waitingforkey',\n  'resize',\n  'enterpictureinpicture',\n  'leavepictureinpicture',\n  'webkitbeginfullscreen',\n  'webkitendfullscreen',\n  'webkitpresentationmodechanged',\n];\n\nexport const template = globalThis.document?.createElement('template');\n\nif (template) {\n  template.innerHTML = /*html*/`\n    <style>\n      :host {\n        display: inline-block;\n        line-height: 0;\n      }\n\n      video,\n      audio {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n      }\n    </style>\n    <slot></slot>\n  `;\n}\n\n/**\n * @see https://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\n */\nexport const SuperMediaMixin = (superclass, { tag, is }) => {\n\n  const nativeElTest = globalThis.document?.createElement(tag, { is });\n  const nativeElProps = nativeElTest ? getNativeElProps(nativeElTest) : [];\n\n  return class SuperMedia extends superclass {\n    static Events = Events;\n    static template = template;\n    static skipAttributes = [];\n    static #isDefined;\n\n    static get observedAttributes() {\n      SuperMedia.#define();\n\n      // Include any attributes from the custom built-in.\n      const natAttrs = nativeElTest?.constructor?.observedAttributes ?? [];\n\n      return [\n        ...natAttrs,\n        'autopictureinpicture',\n        'disablepictureinpicture',\n        'disableremoteplayback',\n        'autoplay',\n        'controls',\n        'controlslist',\n        'crossorigin',\n        'loop',\n        'muted',\n        'playsinline',\n        'poster',\n        'preload',\n        'src',\n      ];\n    }\n\n    static #define() {\n      if (this.#isDefined) return;\n      this.#isDefined = true;\n\n      const propsToAttrs = new Set(this.observedAttributes);\n      // defaultMuted maps to the muted attribute, handled manually below.\n      propsToAttrs.delete('muted');\n\n      // Passthrough native el functions from the custom el to the native el\n      for (let prop of nativeElProps) {\n        if (prop in this.prototype) continue;\n\n        const type = typeof nativeElTest[prop];\n        if (type == 'function') {\n          // Function\n          this.prototype[prop] = function (...args) {\n            this.#init();\n\n            const fn = () => {\n              if (this.call) return this.call(prop, ...args);\n              return this.nativeEl[prop].apply(this.nativeEl, args);\n            };\n\n            if (this.loadComplete && !this.isLoaded) {\n              return this.loadComplete.then(fn);\n            }\n            return fn();\n          };\n        } else {\n          // Some properties like src, preload, defaultMuted are handled manually.\n\n          // Getter\n          let config = {\n            get() {\n              this.#init();\n\n              let attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                const val = this.getAttribute(attr);\n                return val === null ? false : val === '' ? true : val;\n              }\n\n              return this.get?.(prop) ?? this.nativeEl?.[prop] ?? this.#standinEl[prop];\n            },\n          };\n\n          if (prop !== prop.toUpperCase()) {\n            // Setter (not a CONSTANT)\n            config.set = async function (val) {\n              this.#init();\n\n              let attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                if (val === true || val === false || val == null) {\n                  this.toggleAttribute(attr, Boolean(val));\n                } else {\n                  this.setAttribute(attr, val);\n                }\n                return;\n              }\n\n              if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n              if (this.set) {\n                this.set(prop, val);\n                return;\n              }\n\n              this.nativeEl[prop] = val;\n            };\n          }\n\n          Object.defineProperty(this.prototype, prop, config);\n        }\n      }\n    }\n\n    #isInit;\n    #loadComplete;\n    #hasLoaded = false;\n    #isLoaded = false;\n    #nativeEl;\n    #standinEl;\n\n    constructor() {\n      super();\n\n      if (!this.shadowRoot) {\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.append(this.constructor.template.content.cloneNode(true));\n      }\n\n      // If a load method is provided in the child class create a load promise.\n      if (this.load !== SuperMedia.prototype.load) {\n        this.loadComplete = new PublicPromise();\n      }\n\n      // If the custom element is defined before the custom element's HTML is parsed\n      // no attributes will be available in the constructor (construction process).\n      // Wait until initializing in the attributeChangedCallback or\n      // connectedCallback or accessing any properties.\n    }\n\n    get loadComplete() {\n      return this.#loadComplete;\n    }\n\n    set loadComplete(promise) {\n      this.#isLoaded = false;\n      this.#loadComplete = promise;\n      promise?.then(() => {\n        this.#isLoaded = true;\n      });\n    }\n\n    get isLoaded() {\n      return this.#isLoaded;\n    }\n\n    get nativeEl() {\n      return this.#nativeEl\n        ?? this.shadowRoot.querySelector(tag)\n        ?? this.querySelector(tag);\n    }\n\n    set nativeEl(val) {\n      this.#nativeEl = val;\n    }\n\n    get defaultMuted() {\n      return this.hasAttribute('muted');\n    }\n\n    set defaultMuted(val) {\n      this.toggleAttribute('muted', Boolean(val));\n    }\n\n    get src() {\n      return this.getAttribute('src');\n    }\n\n    set src(val) {\n      this.setAttribute('src', `${val}`);\n    }\n\n    get preload() {\n      return this.getAttribute('preload') ?? this.nativeEl?.preload;\n    }\n\n    set preload(val) {\n      this.setAttribute('preload', `${val}`);\n    }\n\n    async #init() {\n      if (this.#isInit) return;\n      this.#isInit = true;\n\n      this.#initStandinEl();\n      this.#initNativeEl();\n\n      for (let prop of nativeElProps)\n        this.#upgradeProperty(prop);\n\n      // Keep some native child elements like track and source in sync.\n      const childMap = new Map();\n      // An unnamed <slot> will be filled with all of the custom element's\n      // top-level child nodes that do not have the slot attribute.\n      const slotEl = this.shadowRoot.querySelector('slot:not([name])');\n      slotEl?.addEventListener('slotchange', () => {\n        const removeNativeChildren = new Map(childMap);\n        slotEl\n          .assignedElements()\n          .filter((el) => ['track', 'source'].includes(el.localName))\n          .forEach(async (el) => {\n            // If the source or track is still in the assigned elements keep it.\n            removeNativeChildren.delete(el);\n            // Re-use clones if possible.\n            let clone = childMap.get(el);\n            if (!clone) {\n              clone = el.cloneNode();\n              childMap.set(el, clone);\n            }\n            if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n            this.nativeEl.append?.(clone);\n          });\n        removeNativeChildren.forEach((el) => el.remove());\n      });\n\n      // The video events are dispatched on the SuperMediaElement instance.\n      // This makes it possible to add event listeners before the element is upgraded.\n      for (let type of this.constructor.Events) {\n        this.shadowRoot.addEventListener?.(type, (evt) => {\n          if (evt.target !== this.nativeEl) return;\n          this.dispatchEvent(new CustomEvent(evt.type, { detail: evt.detail }));\n        }, true);\n      }\n    }\n\n    #upgradeProperty(prop) {\n      // Sets properties that are set before the custom element is upgraded.\n      // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        // Delete the set property from this instance.\n        delete this[prop];\n        // Set the value again via the (prototype) setter on this class.\n        this[prop] = value;\n      }\n    }\n\n    #initStandinEl() {\n      // Neither Chrome or Firefox support setting the muted attribute\n      // after using document.createElement.\n      // Get around this by setting the muted property manually.\n      const dummyEl = document.createElement(tag, { is });\n      dummyEl.muted = this.hasAttribute('muted');\n\n      for (let { name, value } of this.attributes) {\n        dummyEl.setAttribute(name, value);\n      }\n\n      this.#standinEl = {};\n      for (let name of getNativeElProps(dummyEl)) {\n        this.#standinEl[name] = dummyEl[name];\n      }\n\n      // unload dummy video element\n      dummyEl.removeAttribute('src');\n      dummyEl.load();\n    }\n\n    async #initNativeEl() {\n      if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n      // If there is no nativeEl by now, create it our bloody selves.\n      if (!this.nativeEl) {\n        const nativeEl = document.createElement(tag, { is });\n        nativeEl.part = tag;\n        this.shadowRoot.append(nativeEl);\n      }\n\n      // Neither Chrome or Firefox support setting the muted attribute\n      // after using document.createElement.\n      // Get around this by setting the muted property manually.\n      this.nativeEl.muted = this.hasAttribute('muted');\n    }\n\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      // Initialize right after construction when the attributes become available.\n      this.#init();\n\n      // Only call loadSrc when the super class has a load method.\n      if (attrName === 'src' && this.load !== SuperMedia.prototype.load) {\n        this.#loadSrc();\n      }\n\n      this.#forwardAttribute(attrName, oldValue, newValue);\n    }\n\n    async #loadSrc() {\n      // The first time we use the Promise created in the constructor.\n      if (this.#hasLoaded) this.loadComplete = new PublicPromise();\n      this.#hasLoaded = true;\n\n      // Wait 1 tick to allow other attributes to be set.\n      await Promise.resolve();\n      await this.load();\n\n      this.loadComplete?.resolve();\n      await this.loadComplete;\n    }\n\n    async #forwardAttribute(attrName, oldValue, newValue) {\n      if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n      // Ignore a few that don't need to be passed & skipped attributes.\n      // e.g. src: native element is using MSE and has a blob url as src attribute.\n      if (['id', 'class', ...this.constructor.skipAttributes].includes(attrName)) {\n        return;\n      }\n\n      if (newValue === null) {\n        this.nativeEl.removeAttribute?.(attrName);\n      } else {\n        this.nativeEl.setAttribute?.(attrName, newValue);\n      }\n    }\n\n    connectedCallback() {\n      this.#init();\n    }\n  };\n};\n\nfunction getNativeElProps(nativeElTest) {\n  // Map all native element properties to the custom element\n  // so that they're applied to the native element.\n  // Skipping HTMLElement because of things like \"attachShadow\"\n  // causing issues. Most of those props still need to apply to\n  // the custom element.\n  let nativeElProps = [];\n\n  // Walk the prototype chain up to HTMLElement.\n  // This will grab all super class props in between.\n  // i.e. VideoElement and MediaElement\n  for (\n    let proto = Object.getPrototypeOf(nativeElTest);\n    proto && proto !== HTMLElement.prototype;\n    proto = Object.getPrototypeOf(proto)\n  ) {\n    nativeElProps.push(...Object.getOwnPropertyNames(proto));\n  }\n\n  return nativeElProps;\n}\n\n/**\n * A utility to create Promises with convenient public resolve and reject methods.\n * @return {Promise}\n */\nclass PublicPromise extends Promise {\n  constructor(executor = () => {}) {\n    let res, rej;\n    super((resolve, reject) => {\n      executor(resolve, reject);\n      res = resolve;\n      rej = reject;\n    });\n    this.resolve = res;\n    this.reject = rej;\n  }\n}\n\nexport const SuperVideoElement = globalThis.document ? SuperMediaMixin(HTMLElement, { tag: 'video' }) : class {};\n\nexport const SuperAudioElement = globalThis.document ? SuperMediaMixin(HTMLElement, { tag: 'audio' }) : class {};\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,MAAMA,MAAM,GAAG,CACpB,OAAO,EACP,SAAS,EACT,gBAAgB,EAChB,gBAAgB,EAChB,SAAS,EACT,WAAW,EACX,OAAO,EACP,OAAO,EACP,YAAY,EACZ,gBAAgB,EAChB,WAAW,EACX,OAAO,EACP,MAAM,EACN,SAAS,EACT,UAAU,EACV,YAAY,EACZ,QAAQ,EACR,SAAS,EACT,SAAS,EACT,SAAS,EACT,YAAY,EACZ,cAAc,EACd,SAAS,EACT,eAAe,EACf,QAAQ,EACR,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,qBAAqB,EACrB,+BAA+B,CAChC;AAED,OAAO,MAAMC,QAAQ,IAAAC,oBAAA,GAAGC,UAAU,CAACC,QAAQ,cAAAF,oBAAA,uBAAnBA,oBAAA,CAAqBG,aAAa,CAAC,UAAU,CAAC;AAEtE,IAAIJ,QAAQ,EAAE;EACZA,QAAQ,CAACK,SAAS,GAAG,+RAgBpB;AACH;;AAEA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAACC,UAAU,EAAAC,IAAA,KAAkB;EAAA,IAAAC,qBAAA,EAAAC,WAAA,EAAAC,OAAA,EAAAC,aAAA,EAAAC,UAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,UAAA,EAAAC,iBAAA,EAAAC,UAAA;EAAA,IAAhB;IAAEC,GAAG;IAAEC;EAAG,CAAC,GAAAZ,IAAA;EAErD,MAAMa,YAAY,IAAAZ,qBAAA,GAAGP,UAAU,CAACC,QAAQ,cAAAM,qBAAA,uBAAnBA,qBAAA,CAAqBL,aAAa,CAACe,GAAG,EAAE;IAAEC;EAAG,CAAC,CAAC;EACpE,MAAME,aAAa,GAAGD,YAAY,GAAGE,gBAAgB,CAACF,YAAY,CAAC,GAAG,EAAE;EAExE,OAAAV,OAAA,oBAAAa,OAAA,IAAAZ,aAAA,oBAAAY,OAAA,IAAAX,UAAA,oBAAAW,OAAA,IAAAV,SAAA,oBAAAU,OAAA,IAAAT,SAAA,oBAAAS,OAAA,IAAAR,UAAA,oBAAAQ,OAAA,IAAAP,iBAAA,oBAAAQ,OAAA,IAAAf,WAAA,GAAO,MAAMgB,UAAU,SAASnB,UAAU,CAAC;IAMzC,WAAWoB,kBAAkBA,CAAA,EAAG;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MAC9BC,iBAAA,CAAApB,WAAA,EAAAgB,UAAU,EAACK,OAAM,CAAC,CAAAC,IAAA,CAAlBN,UAAU;;MAEV;MACA,MAAMO,QAAQ,IAAAL,qBAAA,GAAGP,YAAY,aAAZA,YAAY,gBAAAQ,sBAAA,GAAZR,YAAY,CAAEa,WAAW,cAAAL,sBAAA,uBAAzBA,sBAAA,CAA2BF,kBAAkB,cAAAC,qBAAA,cAAAA,qBAAA,GAAI,EAAE;MAEpE,OAAO,CACL,GAAGK,QAAQ,EACX,sBAAsB,EACtB,yBAAyB,EACzB,uBAAuB,EACvB,UAAU,EACV,UAAU,EACV,cAAc,EACd,aAAa,EACb,MAAM,EACN,OAAO,EACP,aAAa,EACb,QAAQ,EACR,SAAS,EACT,KAAK,CACN;IACH;IAsFAC,WAAWA,CAAA,EAAG;MACZ,KAAK,CAAC,CAAC;MAACC,2BAAA,OAAAlB,iBAAA;MARVmB,0BAAA,OAAAzB,OAAO;MACPyB,0BAAA,OAAAxB,aAAa;MACbwB,0BAAA,OAAAvB,UAAU,EAAG,KAAK;MAClBuB,0BAAA,OAAAtB,SAAS,EAAG,KAAK;MACjBsB,0BAAA,OAAArB,SAAS;MACTqB,0BAAA,OAAApB,UAAU;MAKR,IAAI,CAAC,IAAI,CAACqB,UAAU,EAAE;QACpB,IAAI,CAACC,YAAY,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC,CAAC;QACnC,IAAI,CAACF,UAAU,CAACG,MAAM,CAAC,IAAI,CAACN,WAAW,CAAClC,QAAQ,CAACyC,OAAO,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;MAC3E;;MAEA;MACA,IAAI,IAAI,CAACC,IAAI,KAAKjB,UAAU,CAACkB,SAAS,CAACD,IAAI,EAAE;QAC3C,IAAI,CAACE,YAAY,GAAG,IAAIC,aAAa,CAAC,CAAC;MACzC;;MAEA;MACA;MACA;MACA;IACF;IAEA,IAAID,YAAYA,CAAA,EAAG;MACjB,OAAOE,qBAAA,CAAKnC,aAAa,EAAlB,IAAiB,CAAC;IAC3B;IAEA,IAAIiC,YAAYA,CAACG,OAAO,EAAE;MACxBC,qBAAA,CAAKnC,SAAS,EAAd,IAAI,EAAa,KAAJ,CAAC;MACdmC,qBAAA,CAAKrC,aAAa,EAAlB,IAAI,EAAiBoC,OAAJ,CAAC;MAClBA,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEE,IAAI,CAAC,MAAM;QAClBD,qBAAA,CAAKnC,SAAS,EAAd,IAAI,EAAa,IAAJ,CAAC;MAChB,CAAC,CAAC;IACJ;IAEA,IAAIqC,QAAQA,CAAA,EAAG;MACb,OAAOJ,qBAAA,CAAKjC,SAAS,EAAd,IAAa,CAAC;IACvB;IAEA,IAAIsC,QAAQA,CAAA,EAAG;MAAA,IAAAC,KAAA,EAAAC,sBAAA;MACb,QAAAD,KAAA,IAAAC,sBAAA,GAAOP,qBAAA,CAAKhC,SAAS,EAAd,IAAa,CAAC,cAAAuC,sBAAA,cAAAA,sBAAA,GAChB,IAAI,CAACjB,UAAU,CAACkB,aAAa,CAACpC,GAAG,CAAC,cAAAkC,KAAA,cAAAA,KAAA,GAClC,IAAI,CAACE,aAAa,CAACpC,GAAG,CAAC;IAC9B;IAEA,IAAIiC,QAAQA,CAACI,GAAG,EAAE;MAChBP,qBAAA,CAAKlC,SAAS,EAAd,IAAI,EAAayC,GAAJ,CAAC;IAChB;IAEA,IAAIC,YAAYA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC;IACnC;IAEA,IAAID,YAAYA,CAACD,GAAG,EAAE;MACpB,IAAI,CAACG,eAAe,CAAC,OAAO,EAAEC,OAAO,CAACJ,GAAG,CAAC,CAAC;IAC7C;IAEA,IAAIK,GAAGA,CAAA,EAAG;MACR,OAAO,IAAI,CAACC,YAAY,CAAC,KAAK,CAAC;IACjC;IAEA,IAAID,GAAGA,CAACL,GAAG,EAAE;MACX,IAAI,CAACO,YAAY,CAAC,KAAK,KAAAC,MAAA,CAAKR,GAAG,CAAE,CAAC;IACpC;IAEA,IAAIS,OAAOA,CAAA,EAAG;MAAA,IAAAC,kBAAA,EAAAC,cAAA;MACZ,QAAAD,kBAAA,GAAO,IAAI,CAACJ,YAAY,CAAC,SAAS,CAAC,cAAAI,kBAAA,cAAAA,kBAAA,IAAAC,cAAA,GAAI,IAAI,CAACf,QAAQ,cAAAe,cAAA,uBAAbA,cAAA,CAAeF,OAAO;IAC/D;IAEA,IAAIA,OAAOA,CAACT,GAAG,EAAE;MACf,IAAI,CAACO,YAAY,CAAC,SAAS,KAAAC,MAAA,CAAKR,GAAG,CAAE,CAAC;IACxC;IAgGAY,wBAAwBA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;MACrD;MACAzC,iBAAA,CAAAb,iBAAA,MAAI,EAACuD,KAAI,CAAC,CAAAxC,IAAA,CAAV,IAAI;;MAEJ;MACA,IAAIqC,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC1B,IAAI,KAAKjB,UAAU,CAACkB,SAAS,CAACD,IAAI,EAAE;QACjEb,iBAAA,CAAAb,iBAAA,MAAI,EAACwD,QAAO,CAAC,CAAAzC,IAAA,CAAb,IAAI;MACN;MAEAF,iBAAA,CAAAb,iBAAA,MAAI,EAACyD,iBAAgB,CAAC,CAAA1C,IAAA,CAAtB,IAAI,EAAmBqC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ;IACrD;IA+BAI,iBAAiBA,CAAA,EAAG;MAClB7C,iBAAA,CAAAb,iBAAA,MAAI,EAACuD,KAAI,CAAC,CAAAxC,IAAA,CAAV,IAAI;IACN;EACF,CAAC,EAAA4C,eAAA,CAAAlE,WAAA,YAhUiBX,MAAM,GAAA6E,eAAA,CAAAlE,WAAA,cACJV,QAAQ,GAAA4E,eAAA,CAAAlE,WAAA,oBACF,EAAE,GAAAQ,UAAA;IAAA2D,CAAA;EAAA,GAAAnE,WAAA;EA8T1B,SAAAqB,QAAA,EAnSiB;IACf,IAAID,iBAAA,CAAApB,WAAA,MAAI,EAACQ,UAAU,EAAA2D,CAAA,EAAE;IAChB3D,UAAU,CAAA2D,CAAA,GAAA/C,iBAAA,CAAApB,WAAA,EAAf,IAAI,EAAc,IAAI,CAAP;IAEf,MAAMoE,YAAY,GAAG,IAAIC,GAAG,CAAC,IAAI,CAACpD,kBAAkB,CAAC;IACrD;IACAmD,YAAY,CAACE,MAAM,CAAC,OAAO,CAAC;;IAE5B;IACA,KAAK,IAAIC,IAAI,IAAI3D,aAAa,EAAE;MAC9B,IAAI2D,IAAI,IAAI,IAAI,CAACrC,SAAS,EAAE;MAE5B,MAAMsC,IAAI,GAAG,OAAO7D,YAAY,CAAC4D,IAAI,CAAC;MACtC,IAAIC,IAAI,IAAI,UAAU,EAAE;QACtB;QACA,IAAI,CAACtC,SAAS,CAACqC,IAAI,CAAC,GAAG,YAAmB;UAAA,SAAAE,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;YAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;UAAA;UACtC1D,iBAAA,CAAAb,iBAAA,MAAI,EAACuD,KAAI,CAAC,CAAAxC,IAAA,CAAV,IAAI;UAEJ,MAAMyD,EAAE,GAAGA,CAAA,KAAM;YACf,IAAI,IAAI,CAACzD,IAAI,EAAE,OAAO,IAAI,CAACA,IAAI,CAACiD,IAAI,EAAE,GAAGK,IAAI,CAAC;YAC9C,OAAO,IAAI,CAAClC,QAAQ,CAAC6B,IAAI,CAAC,CAACS,KAAK,CAAC,IAAI,CAACtC,QAAQ,EAAEkC,IAAI,CAAC;UACvD,CAAC;UAED,IAAI,IAAI,CAACzC,YAAY,IAAI,CAAC,IAAI,CAACM,QAAQ,EAAE;YACvC,OAAO,IAAI,CAACN,YAAY,CAACK,IAAI,CAACuC,EAAE,CAAC;UACnC;UACA,OAAOA,EAAE,CAAC,CAAC;QACb,CAAC;MACH,CAAC,MAAM;QACL;;QAEA;QACA,IAAIE,MAAM,GAAG;UACXC,GAAGA,CAAA,EAAG;YAAA,IAAAC,KAAA,EAAAC,SAAA,EAAAC,UAAA,EAAAC,eAAA;YACJlE,iBAAA,CAAAb,iBAAA,MAAI,EAACuD,KAAI,CAAC,CAAAxC,IAAA,CAAV,IAAI;YAEJ,IAAIiE,IAAI,GAAGhB,IAAI,CAACiB,WAAW,CAAC,CAAC;YAC7B,IAAIpB,YAAY,CAACqB,GAAG,CAACF,IAAI,CAAC,EAAE;cAC1B,MAAMzC,GAAG,GAAG,IAAI,CAACM,YAAY,CAACmC,IAAI,CAAC;cACnC,OAAOzC,GAAG,KAAK,IAAI,GAAG,KAAK,GAAGA,GAAG,KAAK,EAAE,GAAG,IAAI,GAAGA,GAAG;YACvD;YAEA,QAAAqC,KAAA,IAAAC,SAAA,IAAAC,UAAA,GAAO,IAAI,CAACH,GAAG,cAAAG,UAAA,uBAARA,UAAA,CAAA/D,IAAA,KAAI,EAAOiD,IAAI,CAAC,cAAAa,SAAA,cAAAA,SAAA,IAAAE,eAAA,GAAI,IAAI,CAAC5C,QAAQ,cAAA4C,eAAA,uBAAbA,eAAA,CAAgBf,IAAI,CAAC,cAAAY,KAAA,cAAAA,KAAA,GAAI9C,qBAAA,CAAK/B,UAAU,EAAf,IAAc,CAAC,CAACiE,IAAI,CAAC;UAC3E;QACF,CAAC;QAED,IAAIA,IAAI,KAAKA,IAAI,CAACmB,WAAW,CAAC,CAAC,EAAE;UAC/B;UACAT,MAAM,CAACU,GAAG,GAAG,gBAAgB7C,GAAG,EAAE;YAChC1B,iBAAA,CAAAb,iBAAA,MAAI,EAACuD,KAAI,CAAC,CAAAxC,IAAA,CAAV,IAAI;YAEJ,IAAIiE,IAAI,GAAGhB,IAAI,CAACiB,WAAW,CAAC,CAAC;YAC7B,IAAIpB,YAAY,CAACqB,GAAG,CAACF,IAAI,CAAC,EAAE;cAC1B,IAAIzC,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK,IAAIA,GAAG,IAAI,IAAI,EAAE;gBAChD,IAAI,CAACG,eAAe,CAACsC,IAAI,EAAErC,OAAO,CAACJ,GAAG,CAAC,CAAC;cAC1C,CAAC,MAAM;gBACL,IAAI,CAACO,YAAY,CAACkC,IAAI,EAAEzC,GAAG,CAAC;cAC9B;cACA;YACF;YAEA,IAAI,IAAI,CAACX,YAAY,IAAI,CAAC,IAAI,CAACM,QAAQ,EAAE,MAAM,IAAI,CAACN,YAAY;YAEhE,IAAI,IAAI,CAACwD,GAAG,EAAE;cACZ,IAAI,CAACA,GAAG,CAACpB,IAAI,EAAEzB,GAAG,CAAC;cACnB;YACF;YAEA,IAAI,CAACJ,QAAQ,CAAC6B,IAAI,CAAC,GAAGzB,GAAG;UAC3B,CAAC;QACH;QAEA8C,MAAM,CAACC,cAAc,CAAC,IAAI,CAAC3D,SAAS,EAAEqC,IAAI,EAAEU,MAAM,CAAC;MACrD;IACF;EACF;EAAC,eAAAnB,MAAA,EA8Ea;IACZ,IAAIzB,qBAAA,CAAKpC,OAAO,EAAZ,IAAW,CAAC,EAAE;IAClBsC,qBAAA,CAAKtC,OAAO,EAAZ,IAAI,EAAW,IAAJ,CAAC;IAEZmB,iBAAA,CAAAb,iBAAA,MAAI,EAACuF,cAAa,CAAC,CAAAxE,IAAA,CAAnB,IAAI;IACJF,iBAAA,CAAAb,iBAAA,MAAI,EAACwF,aAAY,CAAC,CAAAzE,IAAA,CAAlB,IAAI;IAEJ,KAAK,IAAIiD,IAAI,IAAI3D,aAAa,EAC5BQ,iBAAA,CAAAb,iBAAA,MAAI,EAACyF,gBAAe,CAAC,CAAA1E,IAAA,CAArB,IAAI,EAAkBiD,IAAI;;IAE5B;IACA,MAAM0B,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC1B;IACA;IACA,MAAMC,MAAM,GAAG,IAAI,CAACxE,UAAU,CAACkB,aAAa,CAAC,kBAAkB,CAAC;IAChEsD,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEC,gBAAgB,CAAC,YAAY,EAAE,MAAM;MAC3C,MAAMC,oBAAoB,GAAG,IAAIH,GAAG,CAACD,QAAQ,CAAC;MAC9CE,MAAM,CACHG,gBAAgB,CAAC,CAAC,CAClBC,MAAM,CAAEC,EAAE,IAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAACD,EAAE,CAACE,SAAS,CAAC,CAAC,CAC1DC,OAAO,CAAC,MAAOH,EAAE,IAAK;QAAA,IAAAI,qBAAA,EAAAC,eAAA;QACrB;QACAR,oBAAoB,CAAC/B,MAAM,CAACkC,EAAE,CAAC;QAC/B;QACA,IAAIM,KAAK,GAAGb,QAAQ,CAACf,GAAG,CAACsB,EAAE,CAAC;QAC5B,IAAI,CAACM,KAAK,EAAE;UACVA,KAAK,GAAGN,EAAE,CAACxE,SAAS,CAAC,CAAC;UACtBiE,QAAQ,CAACN,GAAG,CAACa,EAAE,EAAEM,KAAK,CAAC;QACzB;QACA,IAAI,IAAI,CAAC3E,YAAY,IAAI,CAAC,IAAI,CAACM,QAAQ,EAAE,MAAM,IAAI,CAACN,YAAY;QAChE,CAAAyE,qBAAA,IAAAC,eAAA,OAAI,CAACnE,QAAQ,EAACZ,MAAM,cAAA8E,qBAAA,eAApBA,qBAAA,CAAAtF,IAAA,CAAAuF,eAAA,EAAuBC,KAAK,CAAC;MAC/B,CAAC,CAAC;MACJT,oBAAoB,CAACM,OAAO,CAAEH,EAAE,IAAKA,EAAE,CAACO,MAAM,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC;;IAEF;IACA;IACA,KAAK,IAAIvC,IAAI,IAAI,IAAI,CAAChD,WAAW,CAACnC,MAAM,EAAE;MAAA,IAAA2H,qBAAA,EAAAC,gBAAA;MACxC,CAAAD,qBAAA,IAAAC,gBAAA,OAAI,CAACtF,UAAU,EAACyE,gBAAgB,cAAAY,qBAAA,eAAhCA,qBAAA,CAAA1F,IAAA,CAAA2F,gBAAA,EAAmCzC,IAAI,EAAG0C,GAAG,IAAK;QAChD,IAAIA,GAAG,CAACC,MAAM,KAAK,IAAI,CAACzE,QAAQ,EAAE;QAClC,IAAI,CAAC0E,aAAa,CAAC,IAAIC,WAAW,CAACH,GAAG,CAAC1C,IAAI,EAAE;UAAE8C,MAAM,EAAEJ,GAAG,CAACI;QAAO,CAAC,CAAC,CAAC;MACvE,CAAC,EAAE,IAAI,CAAC;IACV;EACF;EAAC,SAAAtB,iBAEgBzB,IAAI,EAAE;IACrB;IACA;IACA,IAAIqB,MAAM,CAAC1D,SAAS,CAACqF,cAAc,CAACjG,IAAI,CAAC,IAAI,EAAEiD,IAAI,CAAC,EAAE;MACpD,MAAMiD,KAAK,GAAG,IAAI,CAACjD,IAAI,CAAC;MACxB;MACA,OAAO,IAAI,CAACA,IAAI,CAAC;MACjB;MACA,IAAI,CAACA,IAAI,CAAC,GAAGiD,KAAK;IACpB;EACF;EAAC,SAAA1B,eAAA,EAEgB;IACf;IACA;IACA;IACA,MAAM2B,OAAO,GAAGhI,QAAQ,CAACC,aAAa,CAACe,GAAG,EAAE;MAAEC;IAAG,CAAC,CAAC;IACnD+G,OAAO,CAACC,KAAK,GAAG,IAAI,CAAC1E,YAAY,CAAC,OAAO,CAAC;IAE1C,KAAK,IAAI;MAAE2E,IAAI;MAAEH;IAAM,CAAC,IAAI,IAAI,CAACI,UAAU,EAAE;MAC3CH,OAAO,CAACpE,YAAY,CAACsE,IAAI,EAAEH,KAAK,CAAC;IACnC;IAEAjF,qBAAA,CAAKjC,UAAU,EAAf,IAAI,EAAc,CAAC,CAAL,CAAC;IACf,KAAK,IAAIqH,IAAI,IAAI9G,gBAAgB,CAAC4G,OAAO,CAAC,EAAE;MAC1CpF,qBAAA,CAAK/B,UAAU,EAAf,IAAc,CAAC,CAACqH,IAAI,CAAC,GAAGF,OAAO,CAACE,IAAI,CAAC;IACvC;;IAEA;IACAF,OAAO,CAACI,eAAe,CAAC,KAAK,CAAC;IAC9BJ,OAAO,CAACxF,IAAI,CAAC,CAAC;EAChB;EAAC,eAAA8D,cAAA,EAEqB;IACpB,IAAI,IAAI,CAAC5D,YAAY,IAAI,CAAC,IAAI,CAACM,QAAQ,EAAE,MAAM,IAAI,CAACN,YAAY;;IAEhE;IACA,IAAI,CAAC,IAAI,CAACO,QAAQ,EAAE;MAClB,MAAMA,QAAQ,GAAGjD,QAAQ,CAACC,aAAa,CAACe,GAAG,EAAE;QAAEC;MAAG,CAAC,CAAC;MACpDgC,QAAQ,CAACoF,IAAI,GAAGrH,GAAG;MACnB,IAAI,CAACkB,UAAU,CAACG,MAAM,CAACY,QAAQ,CAAC;IAClC;;IAEA;IACA;IACA;IACA,IAAI,CAACA,QAAQ,CAACgF,KAAK,GAAG,IAAI,CAAC1E,YAAY,CAAC,OAAO,CAAC;EAClD;EAAC,eAAAe,SAAA,EAcgB;IAAA,IAAAgE,kBAAA;IACf;IACA,IAAI1F,qBAAA,CAAKlC,UAAU,EAAf,IAAc,CAAC,EAAE,IAAI,CAACgC,YAAY,GAAG,IAAIC,aAAa,CAAC,CAAC;IAC5DG,qBAAA,CAAKpC,UAAU,EAAf,IAAI,EAAc,IAAJ,CAAC;;IAEf;IACA,MAAM6H,OAAO,CAACC,OAAO,CAAC,CAAC;IACvB,MAAM,IAAI,CAAChG,IAAI,CAAC,CAAC;IAEjB,CAAA8F,kBAAA,OAAI,CAAC5F,YAAY,cAAA4F,kBAAA,eAAjBA,kBAAA,CAAmBE,OAAO,CAAC,CAAC;IAC5B,MAAM,IAAI,CAAC9F,YAAY;EACzB;EAAC,eAAA6B,kBAEuBL,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IACpD,IAAI,IAAI,CAAC1B,YAAY,IAAI,CAAC,IAAI,CAACM,QAAQ,EAAE,MAAM,IAAI,CAACN,YAAY;;IAEhE;IACA;IACA,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,CAACX,WAAW,CAAC0G,cAAc,CAAC,CAACzB,QAAQ,CAAC9C,QAAQ,CAAC,EAAE;MAC1E;IACF;IAEA,IAAIE,QAAQ,KAAK,IAAI,EAAE;MAAA,IAAAsE,qBAAA,EAAAC,eAAA;MACrB,CAAAD,qBAAA,IAAAC,eAAA,OAAI,CAAC1F,QAAQ,EAACmF,eAAe,cAAAM,qBAAA,eAA7BA,qBAAA,CAAA7G,IAAA,CAAA8G,eAAA,EAAgCzE,QAAQ,CAAC;IAC3C,CAAC,MAAM;MAAA,IAAA0E,qBAAA,EAAAC,eAAA;MACL,CAAAD,qBAAA,IAAAC,eAAA,OAAI,CAAC5F,QAAQ,EAACW,YAAY,cAAAgF,qBAAA,eAA1BA,qBAAA,CAAA/G,IAAA,CAAAgH,eAAA,EAA6B3E,QAAQ,EAAEE,QAAQ,CAAC;IAClD;EACF;AAMJ,CAAC;AAED,SAAShD,gBAAgBA,CAACF,YAAY,EAAE;EACtC;EACA;EACA;EACA;EACA;EACA,IAAIC,aAAa,GAAG,EAAE;;EAEtB;EACA;EACA;EACA,KACE,IAAI2H,KAAK,GAAG3C,MAAM,CAAC4C,cAAc,CAAC7H,YAAY,CAAC,EAC/C4H,KAAK,IAAIA,KAAK,KAAKE,WAAW,CAACvG,SAAS,EACxCqG,KAAK,GAAG3C,MAAM,CAAC4C,cAAc,CAACD,KAAK,CAAC,EACpC;IACA3H,aAAa,CAAC8H,IAAI,CAAC,GAAG9C,MAAM,CAAC+C,mBAAmB,CAACJ,KAAK,CAAC,CAAC;EAC1D;EAEA,OAAO3H,aAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA,MAAMwB,aAAa,SAAS4F,OAAO,CAAC;EAClCxG,WAAWA,CAAA,EAAsB;IAAA,IAArBoH,QAAQ,GAAAlE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAmE,SAAA,GAAAnE,SAAA,MAAG,MAAM,CAAC,CAAC;IAC7B,IAAIoE,GAAG,EAAEC,GAAG;IACZ,KAAK,CAAC,CAACd,OAAO,EAAEe,MAAM,KAAK;MACzBJ,QAAQ,CAACX,OAAO,EAAEe,MAAM,CAAC;MACzBF,GAAG,GAAGb,OAAO;MACbc,GAAG,GAAGC,MAAM;IACd,CAAC,CAAC;IACF,IAAI,CAACf,OAAO,GAAGa,GAAG;IAClB,IAAI,CAACE,MAAM,GAAGD,GAAG;EACnB;AACF;AAEA,OAAO,MAAME,iBAAiB,GAAGzJ,UAAU,CAACC,QAAQ,GAAGG,eAAe,CAAC6I,WAAW,EAAE;EAAEhI,GAAG,EAAE;AAAQ,CAAC,CAAC,GAAG,MAAM,EAAE;AAEhH,OAAO,MAAMyI,iBAAiB,GAAG1J,UAAU,CAACC,QAAQ,GAAGG,eAAe,CAAC6I,WAAW,EAAE;EAAEhI,GAAG,EAAE;AAAQ,CAAC,CAAC,GAAG,MAAM,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}