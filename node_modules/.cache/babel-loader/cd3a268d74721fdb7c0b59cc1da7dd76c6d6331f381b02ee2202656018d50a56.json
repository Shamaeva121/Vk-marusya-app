{"ast":null,"code":"import _objectWithoutProperties from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classPrivateMethodInitSpec from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _defineProperty from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldSet from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport _classPrivateFieldGet from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _assertClassBrand from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nconst _excluded = [\"src\"];\nimport { CustomVideoElement } from \"custom-media-element\";\nimport { MediaTracksMixin } from \"media-tracks\";\nimport Hls from \"hls.js/dist/hls.mjs\";\nconst HlsVideoMixin = superclass => {\n  var _HlsVideo, _airplaySourceEl, _config, _HlsVideo_brand, _toggleHlsLoad;\n  return _airplaySourceEl = /*#__PURE__*/new WeakMap(), _config = /*#__PURE__*/new WeakMap(), _HlsVideo_brand = /*#__PURE__*/new WeakSet(), _toggleHlsLoad = /*#__PURE__*/new WeakMap(), _HlsVideo = class HlsVideo extends superclass {\n    constructor() {\n      super();\n      _classPrivateMethodInitSpec(this, _HlsVideo_brand);\n      _classPrivateFieldInitSpec(this, _airplaySourceEl, null);\n      _classPrivateFieldInitSpec(this, _config, null);\n      _classPrivateFieldInitSpec(this, _toggleHlsLoad, () => {\n        var _a, _b, _c;\n        if ((_a = this.nativeEl) == null ? void 0 : _a.webkitCurrentPlaybackTargetIsWireless) {\n          (_b = this.api) == null ? void 0 : _b.stopLoad();\n        } else {\n          (_c = this.api) == null ? void 0 : _c.startLoad();\n        }\n      });\n      _assertClassBrand(_HlsVideo_brand, this, _upgradeProperty).call(this, \"config\");\n    }\n    get config() {\n      return _classPrivateFieldGet(_config, this);\n    }\n    set config(value) {\n      _classPrivateFieldSet(_config, this, value);\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      if (attrName !== \"src\") {\n        super.attributeChangedCallback(attrName, oldValue, newValue);\n      }\n      if (attrName === \"src\" && oldValue != newValue) {\n        this.load();\n      }\n    }\n    async load() {\n      var _a, _b;\n      const isFirstLoad = !this.api;\n      _assertClassBrand(_HlsVideo_brand, this, _destroy).call(this);\n      if (!this.src) {\n        return;\n      }\n      if (isFirstLoad && !_classPrivateFieldGet(_config, this)) {\n        _classPrivateFieldSet(_config, this, JSON.parse(((_a = this.shadowRoot.getElementById(\"config\")) == null ? void 0 : _a.textContent) || \"{}\"));\n      }\n      if (Hls.isSupported()) {\n        this.api = new Hls(_objectSpread({\n          // Mimic the media element with an Infinity duration for live streams.\n          liveDurationInfinity: true,\n          // Disable auto quality level/fragment loading.\n          autoStartLoad: false\n        }, this.config));\n        await Promise.resolve();\n        this.api.loadSource(this.src);\n        this.api.attachMedia(this.nativeEl);\n        switch (this.nativeEl.preload) {\n          case \"none\":\n            {\n              const loadSourceOnPlay = () => this.api.startLoad();\n              this.nativeEl.addEventListener(\"play\", loadSourceOnPlay, {\n                once: true\n              });\n              this.api.on(Hls.Events.DESTROYING, () => {\n                this.nativeEl.removeEventListener(\"play\", loadSourceOnPlay);\n              });\n              break;\n            }\n          case \"metadata\":\n            {\n              const originalLength = this.api.config.maxBufferLength;\n              const originalSize = this.api.config.maxBufferSize;\n              this.api.config.maxBufferLength = 1;\n              this.api.config.maxBufferSize = 1;\n              const increaseBufferOnPlay = () => {\n                this.api.config.maxBufferLength = originalLength;\n                this.api.config.maxBufferSize = originalSize;\n              };\n              this.nativeEl.addEventListener(\"play\", increaseBufferOnPlay, {\n                once: true\n              });\n              this.api.on(Hls.Events.DESTROYING, () => {\n                this.nativeEl.removeEventListener(\"play\", increaseBufferOnPlay);\n              });\n              this.api.startLoad();\n              break;\n            }\n          default:\n            this.api.startLoad();\n        }\n        if (this.nativeEl.webkitCurrentPlaybackTargetIsWireless) {\n          this.api.stopLoad();\n        }\n        this.nativeEl.addEventListener(\"webkitcurrentplaybacktargetiswirelesschanged\", _classPrivateFieldGet(_toggleHlsLoad, this));\n        _classPrivateFieldSet(_airplaySourceEl, this, document.createElement(\"source\"));\n        _classPrivateFieldGet(_airplaySourceEl, this).setAttribute(\"type\", \"application/x-mpegURL\");\n        _classPrivateFieldGet(_airplaySourceEl, this).setAttribute(\"src\", this.src);\n        this.nativeEl.disableRemotePlayback = false;\n        this.nativeEl.append(_classPrivateFieldGet(_airplaySourceEl, this));\n        const levelIdMap = /* @__PURE__ */new WeakMap();\n        this.api.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\n          if (this.nativeEl.autoplay && this.nativeEl.paused) {\n            this.nativeEl.play().catch(err => {\n              console.warn(\"Autoplay failed:\", err);\n            });\n          }\n          removeAllMediaTracks();\n          let videoTrack = this.videoTracks.getTrackById(\"main\");\n          if (!videoTrack) {\n            videoTrack = this.addVideoTrack(\"main\");\n            videoTrack.id = \"main\";\n            videoTrack.selected = true;\n          }\n          for (const [id, level] of data.levels.entries()) {\n            const videoRendition = videoTrack.addRendition(level.url[0], level.width, level.height, level.videoCodec, level.bitrate);\n            levelIdMap.set(level, \"\".concat(id));\n            videoRendition.id = \"\".concat(id);\n          }\n          for (let [id, a] of data.audioTracks.entries()) {\n            const kind = a.default ? \"main\" : \"alternative\";\n            const audioTrack = this.addAudioTrack(kind, a.name, a.lang);\n            audioTrack.id = \"\".concat(id);\n            if (a.default) {\n              audioTrack.enabled = true;\n            }\n          }\n        });\n        this.audioTracks.addEventListener(\"change\", () => {\n          var _a2;\n          const audioTrackId = +((_a2 = [...this.audioTracks].find(t => t.enabled)) == null ? void 0 : _a2.id);\n          const availableIds = this.api.audioTracks.map(t => t.id);\n          if (audioTrackId != this.api.audioTrack && availableIds.includes(audioTrackId)) {\n            this.api.audioTrack = audioTrackId;\n          }\n        });\n        this.api.on(Hls.Events.LEVELS_UPDATED, (event, data) => {\n          var _this$videoTracks$sel;\n          const videoTrack = this.videoTracks[(_this$videoTracks$sel = this.videoTracks.selectedIndex) !== null && _this$videoTracks$sel !== void 0 ? _this$videoTracks$sel : 0];\n          if (!videoTrack) return;\n          const levelIds = data.levels.map(l => levelIdMap.get(l));\n          for (const rendition of this.videoRenditions) {\n            if (rendition.id && !levelIds.includes(rendition.id)) {\n              videoTrack.removeRendition(rendition);\n            }\n          }\n        });\n        const switchRendition = event => {\n          const level = event.target.selectedIndex;\n          if (level != this.api.nextLevel) {\n            this.api.nextLevel = level;\n          }\n        };\n        (_b = this.videoRenditions) == null ? void 0 : _b.addEventListener(\"change\", switchRendition);\n        const removeAllMediaTracks = () => {\n          for (const videoTrack of this.videoTracks) {\n            this.removeVideoTrack(videoTrack);\n          }\n          for (const audioTrack of this.audioTracks) {\n            this.removeAudioTrack(audioTrack);\n          }\n        };\n        this.api.once(Hls.Events.DESTROYING, removeAllMediaTracks);\n        return;\n      }\n      await Promise.resolve();\n      if (this.nativeEl.canPlayType(\"application/vnd.apple.mpegurl\")) {\n        this.nativeEl.src = this.src;\n      }\n    }\n  }, _defineProperty(_HlsVideo, \"shadowRootOptions\", _objectSpread({}, superclass.shadowRootOptions)), _defineProperty(_HlsVideo, \"getTemplateHTML\", function (attrs) {\n    let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n        src\n      } = attrs,\n      rest = _objectWithoutProperties(attrs, _excluded);\n    return \"\\n        <script type=\\\"application/json\\\" id=\\\"config\\\">\\n          \".concat(JSON.stringify(props.config || {}), \"\\n        </script>\\n        \").concat(superclass.getTemplateHTML(rest), \"\\n      \");\n  }), _HlsVideo;\n  function _destroy() {\n    var _a, _b;\n    (_a = _classPrivateFieldGet(_airplaySourceEl, this)) == null ? void 0 : _a.remove();\n    (_b = this.nativeEl) == null ? void 0 : _b.removeEventListener(\"webkitcurrentplaybacktargetiswirelesschanged\", _classPrivateFieldGet(_toggleHlsLoad, this));\n    if (this.api) {\n      this.api.detachMedia();\n      this.api.destroy();\n      this.api = null;\n    }\n  }\n  // This is a pattern to update property values that are set before\n  // the custom element is upgraded.\n  // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n  function _upgradeProperty(prop) {\n    if (Object.prototype.hasOwnProperty.call(this, prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n};\nconst HlsVideoElement = HlsVideoMixin(MediaTracksMixin(CustomVideoElement));\nif (globalThis.customElements && !globalThis.customElements.get(\"hls-video\")) {\n  globalThis.customElements.define(\"hls-video\", HlsVideoElement);\n}\nvar hls_video_element_default = HlsVideoElement;\nexport { Hls, HlsVideoElement, HlsVideoMixin, hls_video_element_default as default };","map":{"version":3,"names":["CustomVideoElement","MediaTracksMixin","Hls","HlsVideoMixin","superclass","_HlsVideo","_airplaySourceEl","_config","_HlsVideo_brand","_toggleHlsLoad","WeakMap","WeakSet","HlsVideo","constructor","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_a","_b","_c","nativeEl","webkitCurrentPlaybackTargetIsWireless","api","stopLoad","startLoad","_assertClassBrand","_upgradeProperty","call","config","_classPrivateFieldGet","value","_classPrivateFieldSet","attributeChangedCallback","attrName","oldValue","newValue","load","isFirstLoad","_destroy","src","JSON","parse","shadowRoot","getElementById","textContent","isSupported","_objectSpread","liveDurationInfinity","autoStartLoad","Promise","resolve","loadSource","attachMedia","preload","loadSourceOnPlay","addEventListener","once","on","Events","DESTROYING","removeEventListener","originalLength","maxBufferLength","originalSize","maxBufferSize","increaseBufferOnPlay","document","createElement","setAttribute","disableRemotePlayback","append","levelIdMap","MANIFEST_PARSED","event","data","autoplay","paused","play","catch","err","console","warn","removeAllMediaTracks","videoTrack","videoTracks","getTrackById","addVideoTrack","id","selected","level","levels","entries","videoRendition","addRendition","url","width","height","videoCodec","bitrate","set","concat","a","audioTracks","kind","default","audioTrack","addAudioTrack","name","lang","enabled","_a2","audioTrackId","find","t","availableIds","map","includes","LEVELS_UPDATED","_this$videoTracks$sel","selectedIndex","levelIds","l","get","rendition","videoRenditions","removeRendition","switchRendition","target","nextLevel","removeVideoTrack","removeAudioTrack","canPlayType","_defineProperty","shadowRootOptions","attrs","props","arguments","length","undefined","rest","_objectWithoutProperties","_excluded","stringify","getTemplateHTML","remove","detachMedia","destroy","prop","Object","prototype","hasOwnProperty","HlsVideoElement","globalThis","customElements","define","hls_video_element_default"],"sources":["d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/hls-video-element/dist/hls-video-element.js"],"sourcesContent":["import { CustomVideoElement } from \"custom-media-element\";\nimport { MediaTracksMixin } from \"media-tracks\";\nimport Hls from \"hls.js/dist/hls.mjs\";\nconst HlsVideoMixin = (superclass) => {\n  return class HlsVideo extends superclass {\n    static shadowRootOptions = { ...superclass.shadowRootOptions };\n    static getTemplateHTML = (attrs, props = {}) => {\n      const { src, ...rest } = attrs;\n      return `\n        <script type=\"application/json\" id=\"config\">\n          ${JSON.stringify(props.config || {})}\n        </script>\n        ${superclass.getTemplateHTML(rest)}\n      `;\n    };\n    #airplaySourceEl = null;\n    #config = null;\n    constructor() {\n      super();\n      this.#upgradeProperty(\"config\");\n    }\n    get config() {\n      return this.#config;\n    }\n    set config(value) {\n      this.#config = value;\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      if (attrName !== \"src\") {\n        super.attributeChangedCallback(attrName, oldValue, newValue);\n      }\n      if (attrName === \"src\" && oldValue != newValue) {\n        this.load();\n      }\n    }\n    #destroy() {\n      var _a, _b;\n      (_a = this.#airplaySourceEl) == null ? void 0 : _a.remove();\n      (_b = this.nativeEl) == null ? void 0 : _b.removeEventListener(\n        \"webkitcurrentplaybacktargetiswirelesschanged\",\n        this.#toggleHlsLoad\n      );\n      if (this.api) {\n        this.api.detachMedia();\n        this.api.destroy();\n        this.api = null;\n      }\n    }\n    async load() {\n      var _a, _b;\n      const isFirstLoad = !this.api;\n      this.#destroy();\n      if (!this.src) {\n        return;\n      }\n      if (isFirstLoad && !this.#config) {\n        this.#config = JSON.parse(((_a = this.shadowRoot.getElementById(\"config\")) == null ? void 0 : _a.textContent) || \"{}\");\n      }\n      if (Hls.isSupported()) {\n        this.api = new Hls({\n          // Mimic the media element with an Infinity duration for live streams.\n          liveDurationInfinity: true,\n          // Disable auto quality level/fragment loading.\n          autoStartLoad: false,\n          // Custom configuration for hls.js.\n          ...this.config\n        });\n        await Promise.resolve();\n        this.api.loadSource(this.src);\n        this.api.attachMedia(this.nativeEl);\n        switch (this.nativeEl.preload) {\n          case \"none\": {\n            const loadSourceOnPlay = () => this.api.startLoad();\n            this.nativeEl.addEventListener(\"play\", loadSourceOnPlay, {\n              once: true\n            });\n            this.api.on(Hls.Events.DESTROYING, () => {\n              this.nativeEl.removeEventListener(\"play\", loadSourceOnPlay);\n            });\n            break;\n          }\n          case \"metadata\": {\n            const originalLength = this.api.config.maxBufferLength;\n            const originalSize = this.api.config.maxBufferSize;\n            this.api.config.maxBufferLength = 1;\n            this.api.config.maxBufferSize = 1;\n            const increaseBufferOnPlay = () => {\n              this.api.config.maxBufferLength = originalLength;\n              this.api.config.maxBufferSize = originalSize;\n            };\n            this.nativeEl.addEventListener(\"play\", increaseBufferOnPlay, {\n              once: true\n            });\n            this.api.on(Hls.Events.DESTROYING, () => {\n              this.nativeEl.removeEventListener(\"play\", increaseBufferOnPlay);\n            });\n            this.api.startLoad();\n            break;\n          }\n          default:\n            this.api.startLoad();\n        }\n        if (this.nativeEl.webkitCurrentPlaybackTargetIsWireless) {\n          this.api.stopLoad();\n        }\n        this.nativeEl.addEventListener(\n          \"webkitcurrentplaybacktargetiswirelesschanged\",\n          this.#toggleHlsLoad\n        );\n        this.#airplaySourceEl = document.createElement(\"source\");\n        this.#airplaySourceEl.setAttribute(\"type\", \"application/x-mpegURL\");\n        this.#airplaySourceEl.setAttribute(\"src\", this.src);\n        this.nativeEl.disableRemotePlayback = false;\n        this.nativeEl.append(this.#airplaySourceEl);\n        const levelIdMap = /* @__PURE__ */ new WeakMap();\n        this.api.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\n          if (this.nativeEl.autoplay && this.nativeEl.paused) {\n            this.nativeEl.play().catch((err) => {\n              console.warn(\"Autoplay failed:\", err);\n            });\n          }\n          removeAllMediaTracks();\n          let videoTrack = this.videoTracks.getTrackById(\"main\");\n          if (!videoTrack) {\n            videoTrack = this.addVideoTrack(\"main\");\n            videoTrack.id = \"main\";\n            videoTrack.selected = true;\n          }\n          for (const [id, level] of data.levels.entries()) {\n            const videoRendition = videoTrack.addRendition(\n              level.url[0],\n              level.width,\n              level.height,\n              level.videoCodec,\n              level.bitrate\n            );\n            levelIdMap.set(level, `${id}`);\n            videoRendition.id = `${id}`;\n          }\n          for (let [id, a] of data.audioTracks.entries()) {\n            const kind = a.default ? \"main\" : \"alternative\";\n            const audioTrack = this.addAudioTrack(kind, a.name, a.lang);\n            audioTrack.id = `${id}`;\n            if (a.default) {\n              audioTrack.enabled = true;\n            }\n          }\n        });\n        this.audioTracks.addEventListener(\"change\", () => {\n          var _a2;\n          const audioTrackId = +((_a2 = [...this.audioTracks].find((t) => t.enabled)) == null ? void 0 : _a2.id);\n          const availableIds = this.api.audioTracks.map((t) => t.id);\n          if (audioTrackId != this.api.audioTrack && availableIds.includes(audioTrackId)) {\n            this.api.audioTrack = audioTrackId;\n          }\n        });\n        this.api.on(Hls.Events.LEVELS_UPDATED, (event, data) => {\n          const videoTrack = this.videoTracks[this.videoTracks.selectedIndex ?? 0];\n          if (!videoTrack) return;\n          const levelIds = data.levels.map((l) => levelIdMap.get(l));\n          for (const rendition of this.videoRenditions) {\n            if (rendition.id && !levelIds.includes(rendition.id)) {\n              videoTrack.removeRendition(rendition);\n            }\n          }\n        });\n        const switchRendition = (event) => {\n          const level = event.target.selectedIndex;\n          if (level != this.api.nextLevel) {\n            this.api.nextLevel = level;\n          }\n        };\n        (_b = this.videoRenditions) == null ? void 0 : _b.addEventListener(\"change\", switchRendition);\n        const removeAllMediaTracks = () => {\n          for (const videoTrack of this.videoTracks) {\n            this.removeVideoTrack(videoTrack);\n          }\n          for (const audioTrack of this.audioTracks) {\n            this.removeAudioTrack(audioTrack);\n          }\n        };\n        this.api.once(Hls.Events.DESTROYING, removeAllMediaTracks);\n        return;\n      }\n      await Promise.resolve();\n      if (this.nativeEl.canPlayType(\"application/vnd.apple.mpegurl\")) {\n        this.nativeEl.src = this.src;\n      }\n    }\n    #toggleHlsLoad = () => {\n      var _a, _b, _c;\n      if ((_a = this.nativeEl) == null ? void 0 : _a.webkitCurrentPlaybackTargetIsWireless) {\n        (_b = this.api) == null ? void 0 : _b.stopLoad();\n      } else {\n        (_c = this.api) == null ? void 0 : _c.startLoad();\n      }\n    };\n    // This is a pattern to update property values that are set before\n    // the custom element is upgraded.\n    // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n    #upgradeProperty(prop) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        delete this[prop];\n        this[prop] = value;\n      }\n    }\n  };\n};\nconst HlsVideoElement = HlsVideoMixin(MediaTracksMixin(CustomVideoElement));\nif (globalThis.customElements && !globalThis.customElements.get(\"hls-video\")) {\n  globalThis.customElements.define(\"hls-video\", HlsVideoElement);\n}\nvar hls_video_element_default = HlsVideoElement;\nexport {\n  Hls,\n  HlsVideoElement,\n  HlsVideoMixin,\n  hls_video_element_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}