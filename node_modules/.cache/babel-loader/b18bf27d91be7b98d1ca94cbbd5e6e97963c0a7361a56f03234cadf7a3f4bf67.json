{"ast":null,"code":"import axios from'axios';import{QueryClient}from'@tanstack/react-query';export const apiClient=axios.create({baseURL:'https://cinemaguide.skillbox.cc/',withCredentials:true,headers:{'Content-Type':'application/json'}});export const queryClient=new QueryClient();export const fetchProfile=()=>apiClient.get('/profile').then(res=>res.data);export const loginUser=async _ref=>{let{email,password}=_ref;const response=await apiClient.post('/auth/login',{email,password});if(response.status===200){const user=await fetchProfile();return{result:true,user};}else{return{result:false,message:'Неверный email или пароль'};}};export const registerUser=async _ref2=>{let{name,surname,email,password}=_ref2;try{const response=await apiClient.post('/user',{name,surname,email,password});if(response.status===200||response.status===201){const loginResponse=await apiClient.post('/auth/login',{email,password});if(loginResponse.status===200){const user=await fetchProfile();return{result:true,user};}else{return{result:false,message:'Ошибка при входе после регистрации'};}}else{return{result:false,message:'Ошибка при регистрации'};}}catch(error){return{result:false,message:error.message||'Ошибка при регистрации'};}};export const getMovies=function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let genre=arguments.length>2?arguments[2]:undefined;let title=arguments.length>3?arguments[3]:undefined;return apiClient.get('/movie',{params:{page,limit,genre,title}}).then(res=>res.data);};export const getTop10Movies=()=>{return apiClient.get('/movie/top10').then(res=>res.data);};export const getMovieGenres=()=>{return apiClient.get('/movie/genres').then(res=>res.data);};export const getMovieById=id=>{return apiClient.get(\"/movie/\".concat(id)).then(res=>res.data);};export const getRandomMovie=()=>{return apiClient.get('/movie/random').then(res=>res.data);};export const getFavoriteMovies=()=>{return apiClient.get('/favorites').then(res=>res.data);};export const addToFavorites=movieId=>{return apiClient.post('/favorites',{id:movieId},{headers:{'Content-Type':'application/json'}}).then(res=>res.data);};export const removeFromFavorites=movieId=>{return apiClient.delete(\"/favorites/\".concat(movieId)).then(res=>res.data);};export const logoutUser=async()=>{await apiClient.get('/auth/logout');};export default apiClient;","map":{"version":3,"names":["axios","QueryClient","apiClient","create","baseURL","withCredentials","headers","queryClient","fetchProfile","get","then","res","data","loginUser","_ref","email","password","response","post","status","user","result","message","registerUser","_ref2","name","surname","loginResponse","error","getMovies","page","arguments","length","undefined","limit","genre","title","params","getTop10Movies","getMovieGenres","getMovieById","id","concat","getRandomMovie","getFavoriteMovies","addToFavorites","movieId","removeFromFavorites","delete","logoutUser"],"sources":["d:/Users/User55/Documents/GitHub/Vk-marusya-app/src/api/apiClient.ts"],"sourcesContent":["import axios from 'axios';\nimport { QueryClient } from '@tanstack/react-query';\n\nexport const apiClient = axios.create({\n  baseURL: 'https://cinemaguide.skillbox.cc/',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const queryClient = new QueryClient();\n\nexport const fetchProfile = () => apiClient.get('/profile').then(res => res.data);\n\nexport const loginUser = async ({ email, password }: { email: string; password: string }) => {\n  const response = await apiClient.post('/auth/login', { email, password });\n  if (response.status === 200) {\n    const user = await fetchProfile();\n    return { result: true, user };\n  } else {\n    return { result: false, message: 'Неверный email или пароль' };\n  }\n};\n\nexport const registerUser = async ({ name, surname, email, password }: { name: string; surname: string; email: string; password: string }) => {\n  try {\n    const response = await apiClient.post('/user', { name, surname, email, password });\n    if (response.status === 200 || response.status === 201) {\n      const loginResponse = await apiClient.post('/auth/login', { email, password });\n      if (loginResponse.status === 200) {\n        const user = await fetchProfile();\n        return { result: true, user };\n      } else {\n        return { result: false, message: 'Ошибка при входе после регистрации' };\n      }\n    } else {\n      return { result: false, message: 'Ошибка при регистрации' };\n    }\n  } catch (error: any) {\n    return { result: false, message: error.message || 'Ошибка при регистрации' };\n  }\n};\n\nexport const getMovies = (\n  page: number = 1,\n  limit: number = 10,\n  genre?: string,\n  title?: string\n) => {\n  return apiClient\n    .get('/movie', {\n      params: { page, limit, genre, title },\n    })\n    .then(res => res.data);\n};\n\nexport const getTop10Movies = () => {\n  return apiClient.get('/movie/top10').then(res => res.data);\n};\n\nexport const getMovieGenres = () => {\n  return apiClient.get('/movie/genres').then(res => res.data);\n};\n\nexport const getMovieById = (id: string) => {\n  return apiClient.get(`/movie/${id}`).then(res => res.data);\n};\n\nexport const getRandomMovie = () => {\n  return apiClient.get('/movie/random').then(res => res.data);\n};\n\nexport const getFavoriteMovies = () => {\n  return apiClient.get('/favorites').then(res => res.data);\n};\n\n\nexport const addToFavorites = (movieId: string) => {\n  return apiClient.post('/favorites', { id: movieId }, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  }).then(res => res.data);\n};\n\n\nexport const removeFromFavorites = (movieId: string) => {\nreturn apiClient.delete(`/favorites/${movieId}`).then(res => res.data);\n};\n\nexport const logoutUser = async () => {\n  await apiClient.get('/auth/logout');\n};\n\nexport default apiClient;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}