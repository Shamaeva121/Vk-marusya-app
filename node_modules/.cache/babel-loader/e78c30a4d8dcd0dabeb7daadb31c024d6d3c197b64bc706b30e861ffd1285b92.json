{"ast":null,"code":"import _classPrivateMethodInitSpec from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _defineProperty from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldSet from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport _classPrivateFieldGet from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _assertClassBrand from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nvar _globalThis$HTMLEleme, _globalThis$HTMLEleme2;\nconst Events = [\"abort\", \"canplay\", \"canplaythrough\", \"durationchange\", \"emptied\", \"encrypted\", \"ended\", \"error\", \"loadeddata\", \"loadedmetadata\", \"loadstart\", \"pause\", \"play\", \"playing\", \"progress\", \"ratechange\", \"seeked\", \"seeking\", \"stalled\", \"suspend\", \"timeupdate\", \"volumechange\", \"waiting\", \"waitingforkey\", \"resize\", \"enterpictureinpicture\", \"leavepictureinpicture\", \"webkitbeginfullscreen\", \"webkitendfullscreen\", \"webkitpresentationmodechanged\"];\nconst Attributes = [\"autopictureinpicture\", \"disablepictureinpicture\", \"disableremoteplayback\", \"autoplay\", \"controls\", \"controlslist\", \"crossorigin\", \"loop\", \"muted\", \"playsinline\", \"poster\", \"preload\", \"src\"];\nfunction getAudioTemplateHTML(attrs) {\n  return /*html*/\"\\n    <style>\\n      :host {\\n        display: inline-flex;\\n        line-height: 0;\\n        flex-direction: column;\\n        justify-content: end;\\n      }\\n\\n      audio {\\n        width: 100%;\\n      }\\n    </style>\\n    <slot name=\\\"media\\\">\\n      <audio\".concat(serializeAttributes(attrs), \"></audio>\\n    </slot>\\n    <slot></slot>\\n  \");\n}\nfunction getVideoTemplateHTML(attrs) {\n  return /*html*/\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n        line-height: 0;\\n      }\\n\\n      video {\\n        max-width: 100%;\\n        max-height: 100%;\\n        min-width: 100%;\\n        min-height: 100%;\\n        object-fit: var(--media-object-fit, contain);\\n        object-position: var(--media-object-position, 50% 50%);\\n      }\\n\\n      video::-webkit-media-text-track-container {\\n        transform: var(--media-webkit-text-track-transform);\\n        transition: var(--media-webkit-text-track-transition);\\n      }\\n    </style>\\n    <slot name=\\\"media\\\">\\n      <video\".concat(serializeAttributes(attrs), \"></video>\\n    </slot>\\n    <slot></slot>\\n  \");\n}\nfunction CustomMediaMixin(superclass, _ref) {\n  var _globalThis$document, _globalThis$document$, _CustomMedia, _isInit, _nativeEl, _childMap, _childObserver, _CustomMedia_brand, _isDefined;\n  let {\n    tag,\n    is\n  } = _ref;\n  const nativeElTest = (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 || (_globalThis$document$ = _globalThis$document.createElement) === null || _globalThis$document$ === void 0 ? void 0 : _globalThis$document$.call(_globalThis$document, tag, {\n    is\n  });\n  const nativeElProps = nativeElTest ? getNativeElProps(nativeElTest) : [];\n  return _isInit = /*#__PURE__*/new WeakMap(), _nativeEl = /*#__PURE__*/new WeakMap(), _childMap = /*#__PURE__*/new WeakMap(), _childObserver = /*#__PURE__*/new WeakMap(), _CustomMedia_brand = /*#__PURE__*/new WeakSet(), _CustomMedia = class CustomMedia extends superclass {\n    constructor() {\n      super(...arguments);\n      _classPrivateMethodInitSpec(this, _CustomMedia_brand);\n      // Private fields\n      _classPrivateFieldInitSpec(this, _isInit, false);\n      _classPrivateFieldInitSpec(this, _nativeEl, null);\n      _classPrivateFieldInitSpec(this, _childMap, /* @__PURE__ */new Map());\n      _classPrivateFieldInitSpec(this, _childObserver, void 0);\n      _defineProperty(this, \"get\", void 0);\n      _defineProperty(this, \"set\", void 0);\n      _defineProperty(this, \"call\", void 0);\n    }\n    static get observedAttributes() {\n      var _nativeElTest$constru, _nativeElTest$constru2;\n      _assertClassBrand(_CustomMedia, CustomMedia, _define).call(CustomMedia);\n      const natAttrs = (_nativeElTest$constru = nativeElTest === null || nativeElTest === void 0 || (_nativeElTest$constru2 = nativeElTest.constructor) === null || _nativeElTest$constru2 === void 0 ? void 0 : _nativeElTest$constru2.observedAttributes) !== null && _nativeElTest$constru !== void 0 ? _nativeElTest$constru : [];\n      return [...natAttrs, ...Attributes];\n    }\n    // If the custom element is defined before the custom element's HTML is parsed\n    // no attributes will be available in the constructor (construction process).\n    // Wait until initializing in the attributeChangedCallback or\n    // connectedCallback or accessing any properties.\n    get nativeEl() {\n      var _ref2, _ref3, _ref4, _classPrivateFieldGet2, _this$shadowRoot;\n      _assertClassBrand(_CustomMedia_brand, this, _init).call(this);\n      return (_ref2 = (_ref3 = (_ref4 = (_classPrivateFieldGet2 = _classPrivateFieldGet(_nativeEl, this)) !== null && _classPrivateFieldGet2 !== void 0 ? _classPrivateFieldGet2 : this.querySelector(\":scope > [slot=media]\")) !== null && _ref4 !== void 0 ? _ref4 : this.querySelector(tag)) !== null && _ref3 !== void 0 ? _ref3 : (_this$shadowRoot = this.shadowRoot) === null || _this$shadowRoot === void 0 ? void 0 : _this$shadowRoot.querySelector(tag)) !== null && _ref2 !== void 0 ? _ref2 : null;\n    }\n    set nativeEl(val) {\n      _classPrivateFieldSet(_nativeEl, this, val);\n    }\n    get defaultMuted() {\n      return this.hasAttribute(\"muted\");\n    }\n    set defaultMuted(val) {\n      this.toggleAttribute(\"muted\", val);\n    }\n    get src() {\n      return this.getAttribute(\"src\");\n    }\n    set src(val) {\n      this.setAttribute(\"src\", \"\".concat(val));\n    }\n    get preload() {\n      var _this$getAttribute, _this$nativeEl;\n      return (_this$getAttribute = this.getAttribute(\"preload\")) !== null && _this$getAttribute !== void 0 ? _this$getAttribute : (_this$nativeEl = this.nativeEl) === null || _this$nativeEl === void 0 ? void 0 : _this$nativeEl.preload;\n    }\n    set preload(val) {\n      this.setAttribute(\"preload\", \"\".concat(val));\n    }\n    init() {\n      if (!this.shadowRoot) {\n        this.attachShadow({\n          mode: \"open\"\n        });\n        const attrs = namedNodeMapToObject(this.attributes);\n        if (is) attrs.is = is;\n        if (tag) attrs.part = tag;\n        this.shadowRoot.innerHTML = this.constructor.getTemplateHTML(attrs);\n      }\n      this.nativeEl.muted = this.hasAttribute(\"muted\");\n      for (const prop of nativeElProps) {\n        _assertClassBrand(_CustomMedia_brand, this, _upgradeProperty).call(this, prop);\n      }\n      _classPrivateFieldSet(_childObserver, this, new MutationObserver(_assertClassBrand(_CustomMedia_brand, this, _syncMediaChildAttribute).bind(this)));\n      this.shadowRoot.addEventListener(\"slotchange\", () => _assertClassBrand(_CustomMedia_brand, this, _syncMediaChildren).call(this));\n      _assertClassBrand(_CustomMedia_brand, this, _syncMediaChildren).call(this);\n      for (const type of this.constructor.Events) {\n        this.shadowRoot.addEventListener(type, this, true);\n      }\n    }\n    handleEvent(event) {\n      if (event.target === this.nativeEl) {\n        this.dispatchEvent(new CustomEvent(event.type, {\n          detail: event.detail\n        }));\n      }\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      _assertClassBrand(_CustomMedia_brand, this, _init).call(this);\n      _assertClassBrand(_CustomMedia_brand, this, _forwardAttribute).call(this, attrName, oldValue, newValue);\n    }\n    connectedCallback() {\n      _assertClassBrand(_CustomMedia_brand, this, _init).call(this);\n    }\n  }, _defineProperty(_CustomMedia, \"getTemplateHTML\", tag.endsWith(\"audio\") ? getAudioTemplateHTML : getVideoTemplateHTML), _defineProperty(_CustomMedia, \"shadowRootOptions\", {\n    mode: \"open\"\n  }), _defineProperty(_CustomMedia, \"Events\", Events), _isDefined = {\n    _: false\n  }, _CustomMedia;\n  function _define() {\n    if (_assertClassBrand(_CustomMedia, this, _isDefined)._) return;\n    _isDefined._ = _assertClassBrand(_CustomMedia, this, true);\n    const propsToAttrs = new Set(this.observedAttributes);\n    propsToAttrs.delete(\"muted\");\n    for (const prop of nativeElProps) {\n      if (prop in this.prototype) continue;\n      if (typeof nativeElTest[prop] === \"function\") {\n        this.prototype[prop] = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          _assertClassBrand(_CustomMedia_brand, this, _init).call(this);\n          const fn = () => {\n            var _this$nativeEl2;\n            if (this.call) return this.call(prop, ...args);\n            const nativeFn = (_this$nativeEl2 = this.nativeEl) === null || _this$nativeEl2 === void 0 ? void 0 : _this$nativeEl2[prop];\n            return nativeFn === null || nativeFn === void 0 ? void 0 : nativeFn.apply(this.nativeEl, args);\n          };\n          return fn();\n        };\n      } else {\n        const config = {\n          get() {\n            var _this$get, _this$get2, _this$nativeEl3;\n            _assertClassBrand(_CustomMedia_brand, this, _init).call(this);\n            const attr = prop.toLowerCase();\n            if (propsToAttrs.has(attr)) {\n              const val = this.getAttribute(attr);\n              return val === null ? false : val === \"\" ? true : val;\n            }\n            return (_this$get = (_this$get2 = this.get) === null || _this$get2 === void 0 ? void 0 : _this$get2.call(this, prop)) !== null && _this$get !== void 0 ? _this$get : (_this$nativeEl3 = this.nativeEl) === null || _this$nativeEl3 === void 0 ? void 0 : _this$nativeEl3[prop];\n          }\n        };\n        if (prop !== prop.toUpperCase()) {\n          config.set = function (val) {\n            _assertClassBrand(_CustomMedia_brand, this, _init).call(this);\n            const attr = prop.toLowerCase();\n            if (propsToAttrs.has(attr)) {\n              if (val === true || val === false || val == null) {\n                this.toggleAttribute(attr, Boolean(val));\n              } else {\n                this.setAttribute(attr, val);\n              }\n              return;\n            }\n            if (this.set) {\n              this.set(prop, val);\n              return;\n            }\n            if (this.nativeEl) {\n              this.nativeEl[prop] = val;\n            }\n          };\n        }\n        Object.defineProperty(this.prototype, prop, config);\n      }\n    }\n  }\n  function _init() {\n    if (_classPrivateFieldGet(_isInit, this)) return;\n    _classPrivateFieldSet(_isInit, this, true);\n    this.init();\n  }\n  function _syncMediaChildren() {\n    var _this$shadowRoot2;\n    const removeNativeChildren = new Map(_classPrivateFieldGet(_childMap, this));\n    const defaultSlot = (_this$shadowRoot2 = this.shadowRoot) === null || _this$shadowRoot2 === void 0 ? void 0 : _this$shadowRoot2.querySelector(\"slot:not([name])\");\n    const mediaChildren = defaultSlot === null || defaultSlot === void 0 ? void 0 : defaultSlot.assignedElements({\n      flatten: true\n    }).filter(el => [\"track\", \"source\"].includes(el.localName));\n    mediaChildren.forEach(el => {\n      var _this$nativeEl4;\n      removeNativeChildren.delete(el);\n      let clone = _classPrivateFieldGet(_childMap, this).get(el);\n      if (!clone) {\n        var _classPrivateFieldGet3;\n        clone = el.cloneNode();\n        _classPrivateFieldGet(_childMap, this).set(el, clone);\n        (_classPrivateFieldGet3 = _classPrivateFieldGet(_childObserver, this)) === null || _classPrivateFieldGet3 === void 0 || _classPrivateFieldGet3.observe(el, {\n          attributes: true\n        });\n      }\n      (_this$nativeEl4 = this.nativeEl) === null || _this$nativeEl4 === void 0 || _this$nativeEl4.append(clone);\n      _assertClassBrand(_CustomMedia_brand, this, _enableDefaultTrack).call(this, clone);\n    });\n    removeNativeChildren.forEach((clone, el) => {\n      clone.remove();\n      _classPrivateFieldGet(_childMap, this).delete(el);\n    });\n  }\n  function _syncMediaChildAttribute(mutations) {\n    for (const mutation of mutations) {\n      if (mutation.type === \"attributes\") {\n        const {\n          target,\n          attributeName\n        } = mutation;\n        const clone = _classPrivateFieldGet(_childMap, this).get(target);\n        if (clone && attributeName) {\n          var _target$getAttribute;\n          clone.setAttribute(attributeName, (_target$getAttribute = target.getAttribute(attributeName)) !== null && _target$getAttribute !== void 0 ? _target$getAttribute : \"\");\n          _assertClassBrand(_CustomMedia_brand, this, _enableDefaultTrack).call(this, clone);\n        }\n      }\n    }\n  }\n  function _enableDefaultTrack(trackEl) {\n    if (trackEl && trackEl.localName === \"track\" && trackEl.default && (trackEl.kind === \"chapters\" || trackEl.kind === \"metadata\") && trackEl.track.mode === \"disabled\") {\n      trackEl.track.mode = \"hidden\";\n    }\n  }\n  function _upgradeProperty(prop) {\n    if (Object.prototype.hasOwnProperty.call(this, prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n  function _forwardAttribute(attrName, _oldValue, newValue) {\n    var _this$nativeEl6;\n    if ([\"id\", \"class\"].includes(attrName)) return;\n    if (!_CustomMedia.observedAttributes.includes(attrName) && this.constructor.observedAttributes.includes(attrName)) {\n      return;\n    }\n    if (newValue === null) {\n      var _this$nativeEl5;\n      (_this$nativeEl5 = this.nativeEl) === null || _this$nativeEl5 === void 0 || _this$nativeEl5.removeAttribute(attrName);\n    } else if (((_this$nativeEl6 = this.nativeEl) === null || _this$nativeEl6 === void 0 ? void 0 : _this$nativeEl6.getAttribute(attrName)) !== newValue) {\n      var _this$nativeEl7;\n      (_this$nativeEl7 = this.nativeEl) === null || _this$nativeEl7 === void 0 || _this$nativeEl7.setAttribute(attrName, newValue);\n    }\n  }\n}\nfunction getNativeElProps(nativeElTest) {\n  const nativeElProps = [];\n  for (let proto = Object.getPrototypeOf(nativeElTest); proto && proto !== HTMLElement.prototype; proto = Object.getPrototypeOf(proto)) {\n    const props = Object.getOwnPropertyNames(proto);\n    nativeElProps.push(...props);\n  }\n  return nativeElProps;\n}\nfunction serializeAttributes(attrs) {\n  let html = \"\";\n  for (const key in attrs) {\n    if (!Attributes.includes(key)) continue;\n    const value = attrs[key];\n    if (value === \"\") html += \" \".concat(key);else html += \" \".concat(key, \"=\\\"\").concat(value, \"\\\"\");\n  }\n  return html;\n}\nfunction namedNodeMapToObject(namedNodeMap) {\n  const obj = {};\n  for (const attr of namedNodeMap) {\n    obj[attr.name] = attr.value;\n  }\n  return obj;\n}\nconst CustomVideoElement = CustomMediaMixin((_globalThis$HTMLEleme = globalThis.HTMLElement) !== null && _globalThis$HTMLEleme !== void 0 ? _globalThis$HTMLEleme : class {}, {\n  tag: \"video\"\n});\nconst CustomAudioElement = CustomMediaMixin((_globalThis$HTMLEleme2 = globalThis.HTMLElement) !== null && _globalThis$HTMLEleme2 !== void 0 ? _globalThis$HTMLEleme2 : class {}, {\n  tag: \"audio\"\n});\nexport { Attributes, CustomAudioElement, CustomMediaMixin, CustomVideoElement, Events };","map":{"version":3,"names":["Events","Attributes","getAudioTemplateHTML","attrs","concat","serializeAttributes","getVideoTemplateHTML","CustomMediaMixin","superclass","_ref","_globalThis$document","_globalThis$document$","_CustomMedia","_isInit","_nativeEl","_childMap","_childObserver","_CustomMedia_brand","_isDefined","tag","is","nativeElTest","globalThis","document","createElement","call","nativeElProps","getNativeElProps","WeakMap","WeakSet","CustomMedia","constructor","arguments","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","Map","_defineProperty","observedAttributes","_nativeElTest$constru","_nativeElTest$constru2","_assertClassBrand","_define","natAttrs","nativeEl","_ref2","_ref3","_ref4","_classPrivateFieldGet2","_this$shadowRoot","_init","_classPrivateFieldGet","querySelector","shadowRoot","val","_classPrivateFieldSet","defaultMuted","hasAttribute","toggleAttribute","src","getAttribute","setAttribute","preload","_this$getAttribute","_this$nativeEl","init","attachShadow","mode","namedNodeMapToObject","attributes","part","innerHTML","getTemplateHTML","muted","prop","_upgradeProperty","MutationObserver","_syncMediaChildAttribute","bind","addEventListener","_syncMediaChildren","type","handleEvent","event","target","dispatchEvent","CustomEvent","detail","attributeChangedCallback","attrName","oldValue","newValue","_forwardAttribute","connectedCallback","endsWith","_","propsToAttrs","Set","delete","prototype","_len","length","args","Array","_key","fn","_this$nativeEl2","nativeFn","apply","config","get","_this$get","_this$get2","_this$nativeEl3","attr","toLowerCase","has","toUpperCase","set","Boolean","Object","defineProperty","_this$shadowRoot2","removeNativeChildren","defaultSlot","mediaChildren","assignedElements","flatten","filter","el","includes","localName","forEach","_this$nativeEl4","clone","_classPrivateFieldGet3","cloneNode","observe","append","_enableDefaultTrack","remove","mutations","mutation","attributeName","_target$getAttribute","trackEl","default","kind","track","hasOwnProperty","value","_oldValue","_this$nativeEl6","_this$nativeEl5","removeAttribute","_this$nativeEl7","proto","getPrototypeOf","HTMLElement","props","getOwnPropertyNames","push","html","key","namedNodeMap","obj","name","CustomVideoElement","_globalThis$HTMLEleme","CustomAudioElement","_globalThis$HTMLEleme2"],"sources":["d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/custom-media-element/dist/custom-media-element.js"],"sourcesContent":["const Events = [\n  \"abort\",\n  \"canplay\",\n  \"canplaythrough\",\n  \"durationchange\",\n  \"emptied\",\n  \"encrypted\",\n  \"ended\",\n  \"error\",\n  \"loadeddata\",\n  \"loadedmetadata\",\n  \"loadstart\",\n  \"pause\",\n  \"play\",\n  \"playing\",\n  \"progress\",\n  \"ratechange\",\n  \"seeked\",\n  \"seeking\",\n  \"stalled\",\n  \"suspend\",\n  \"timeupdate\",\n  \"volumechange\",\n  \"waiting\",\n  \"waitingforkey\",\n  \"resize\",\n  \"enterpictureinpicture\",\n  \"leavepictureinpicture\",\n  \"webkitbeginfullscreen\",\n  \"webkitendfullscreen\",\n  \"webkitpresentationmodechanged\"\n];\nconst Attributes = [\n  \"autopictureinpicture\",\n  \"disablepictureinpicture\",\n  \"disableremoteplayback\",\n  \"autoplay\",\n  \"controls\",\n  \"controlslist\",\n  \"crossorigin\",\n  \"loop\",\n  \"muted\",\n  \"playsinline\",\n  \"poster\",\n  \"preload\",\n  \"src\"\n];\nfunction getAudioTemplateHTML(attrs) {\n  return (\n    /*html*/\n    `\n    <style>\n      :host {\n        display: inline-flex;\n        line-height: 0;\n        flex-direction: column;\n        justify-content: end;\n      }\n\n      audio {\n        width: 100%;\n      }\n    </style>\n    <slot name=\"media\">\n      <audio${serializeAttributes(attrs)}></audio>\n    </slot>\n    <slot></slot>\n  `\n  );\n}\nfunction getVideoTemplateHTML(attrs) {\n  return (\n    /*html*/\n    `\n    <style>\n      :host {\n        display: inline-block;\n        line-height: 0;\n      }\n\n      video {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n        object-fit: var(--media-object-fit, contain);\n        object-position: var(--media-object-position, 50% 50%);\n      }\n\n      video::-webkit-media-text-track-container {\n        transform: var(--media-webkit-text-track-transform);\n        transition: var(--media-webkit-text-track-transition);\n      }\n    </style>\n    <slot name=\"media\">\n      <video${serializeAttributes(attrs)}></video>\n    </slot>\n    <slot></slot>\n  `\n  );\n}\nfunction CustomMediaMixin(superclass, { tag, is }) {\n  const nativeElTest = globalThis.document?.createElement?.(tag, { is });\n  const nativeElProps = nativeElTest ? getNativeElProps(nativeElTest) : [];\n  return class CustomMedia extends superclass {\n    static getTemplateHTML = tag.endsWith(\"audio\") ? getAudioTemplateHTML : getVideoTemplateHTML;\n    static shadowRootOptions = { mode: \"open\" };\n    static Events = Events;\n    static #isDefined = false;\n    static get observedAttributes() {\n      CustomMedia.#define();\n      const natAttrs = nativeElTest?.constructor?.observedAttributes ?? [];\n      return [\n        ...natAttrs,\n        ...Attributes\n      ];\n    }\n    static #define() {\n      if (this.#isDefined) return;\n      this.#isDefined = true;\n      const propsToAttrs = new Set(this.observedAttributes);\n      propsToAttrs.delete(\"muted\");\n      for (const prop of nativeElProps) {\n        if (prop in this.prototype) continue;\n        if (typeof nativeElTest[prop] === \"function\") {\n          this.prototype[prop] = function(...args) {\n            this.#init();\n            const fn = () => {\n              if (this.call) return this.call(prop, ...args);\n              const nativeFn = this.nativeEl?.[prop];\n              return nativeFn?.apply(this.nativeEl, args);\n            };\n            return fn();\n          };\n        } else {\n          const config = {\n            get() {\n              this.#init();\n              const attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                const val = this.getAttribute(attr);\n                return val === null ? false : val === \"\" ? true : val;\n              }\n              return this.get?.(prop) ?? this.nativeEl?.[prop];\n            }\n          };\n          if (prop !== prop.toUpperCase()) {\n            config.set = function(val) {\n              this.#init();\n              const attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                if (val === true || val === false || val == null) {\n                  this.toggleAttribute(attr, Boolean(val));\n                } else {\n                  this.setAttribute(attr, val);\n                }\n                return;\n              }\n              if (this.set) {\n                this.set(prop, val);\n                return;\n              }\n              if (this.nativeEl) {\n                this.nativeEl[prop] = val;\n              }\n            };\n          }\n          Object.defineProperty(this.prototype, prop, config);\n        }\n      }\n    }\n    // Private fields\n    #isInit = false;\n    #nativeEl = null;\n    #childMap = /* @__PURE__ */ new Map();\n    #childObserver;\n    get;\n    set;\n    call;\n    // If the custom element is defined before the custom element's HTML is parsed\n    // no attributes will be available in the constructor (construction process).\n    // Wait until initializing in the attributeChangedCallback or\n    // connectedCallback or accessing any properties.\n    get nativeEl() {\n      this.#init();\n      return this.#nativeEl ?? this.querySelector(\":scope > [slot=media]\") ?? this.querySelector(tag) ?? this.shadowRoot?.querySelector(tag) ?? null;\n    }\n    set nativeEl(val) {\n      this.#nativeEl = val;\n    }\n    get defaultMuted() {\n      return this.hasAttribute(\"muted\");\n    }\n    set defaultMuted(val) {\n      this.toggleAttribute(\"muted\", val);\n    }\n    get src() {\n      return this.getAttribute(\"src\");\n    }\n    set src(val) {\n      this.setAttribute(\"src\", `${val}`);\n    }\n    get preload() {\n      return this.getAttribute(\"preload\") ?? this.nativeEl?.preload;\n    }\n    set preload(val) {\n      this.setAttribute(\"preload\", `${val}`);\n    }\n    #init() {\n      if (this.#isInit) return;\n      this.#isInit = true;\n      this.init();\n    }\n    init() {\n      if (!this.shadowRoot) {\n        this.attachShadow({ mode: \"open\" });\n        const attrs = namedNodeMapToObject(this.attributes);\n        if (is) attrs.is = is;\n        if (tag) attrs.part = tag;\n        this.shadowRoot.innerHTML = this.constructor.getTemplateHTML(attrs);\n      }\n      this.nativeEl.muted = this.hasAttribute(\"muted\");\n      for (const prop of nativeElProps) {\n        this.#upgradeProperty(prop);\n      }\n      this.#childObserver = new MutationObserver(this.#syncMediaChildAttribute.bind(this));\n      this.shadowRoot.addEventListener(\"slotchange\", () => this.#syncMediaChildren());\n      this.#syncMediaChildren();\n      for (const type of this.constructor.Events) {\n        this.shadowRoot.addEventListener(type, this, true);\n      }\n    }\n    handleEvent(event) {\n      if (event.target === this.nativeEl) {\n        this.dispatchEvent(new CustomEvent(event.type, { detail: event.detail }));\n      }\n    }\n    #syncMediaChildren() {\n      const removeNativeChildren = new Map(this.#childMap);\n      const defaultSlot = this.shadowRoot?.querySelector(\"slot:not([name])\");\n      const mediaChildren = defaultSlot?.assignedElements({ flatten: true }).filter((el) => [\"track\", \"source\"].includes(el.localName));\n      mediaChildren.forEach((el) => {\n        removeNativeChildren.delete(el);\n        let clone = this.#childMap.get(el);\n        if (!clone) {\n          clone = el.cloneNode();\n          this.#childMap.set(el, clone);\n          this.#childObserver?.observe(el, { attributes: true });\n        }\n        this.nativeEl?.append(clone);\n        this.#enableDefaultTrack(clone);\n      });\n      removeNativeChildren.forEach((clone, el) => {\n        clone.remove();\n        this.#childMap.delete(el);\n      });\n    }\n    #syncMediaChildAttribute(mutations) {\n      for (const mutation of mutations) {\n        if (mutation.type === \"attributes\") {\n          const { target, attributeName } = mutation;\n          const clone = this.#childMap.get(target);\n          if (clone && attributeName) {\n            clone.setAttribute(attributeName, target.getAttribute(attributeName) ?? \"\");\n            this.#enableDefaultTrack(clone);\n          }\n        }\n      }\n    }\n    #enableDefaultTrack(trackEl) {\n      if (trackEl && trackEl.localName === \"track\" && trackEl.default && (trackEl.kind === \"chapters\" || trackEl.kind === \"metadata\") && trackEl.track.mode === \"disabled\") {\n        trackEl.track.mode = \"hidden\";\n      }\n    }\n    #upgradeProperty(prop) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        delete this[prop];\n        this[prop] = value;\n      }\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      this.#init();\n      this.#forwardAttribute(attrName, oldValue, newValue);\n    }\n    #forwardAttribute(attrName, _oldValue, newValue) {\n      if ([\"id\", \"class\"].includes(attrName)) return;\n      if (!CustomMedia.observedAttributes.includes(attrName) && this.constructor.observedAttributes.includes(attrName)) {\n        return;\n      }\n      if (newValue === null) {\n        this.nativeEl?.removeAttribute(attrName);\n      } else if (this.nativeEl?.getAttribute(attrName) !== newValue) {\n        this.nativeEl?.setAttribute(attrName, newValue);\n      }\n    }\n    connectedCallback() {\n      this.#init();\n    }\n  };\n}\nfunction getNativeElProps(nativeElTest) {\n  const nativeElProps = [];\n  for (let proto = Object.getPrototypeOf(nativeElTest); proto && proto !== HTMLElement.prototype; proto = Object.getPrototypeOf(proto)) {\n    const props = Object.getOwnPropertyNames(proto);\n    nativeElProps.push(...props);\n  }\n  return nativeElProps;\n}\nfunction serializeAttributes(attrs) {\n  let html = \"\";\n  for (const key in attrs) {\n    if (!Attributes.includes(key)) continue;\n    const value = attrs[key];\n    if (value === \"\") html += ` ${key}`;\n    else html += ` ${key}=\"${value}\"`;\n  }\n  return html;\n}\nfunction namedNodeMapToObject(namedNodeMap) {\n  const obj = {};\n  for (const attr of namedNodeMap) {\n    obj[attr.name] = attr.value;\n  }\n  return obj;\n}\nconst CustomVideoElement = CustomMediaMixin(globalThis.HTMLElement ?? class {\n}, {\n  tag: \"video\"\n});\nconst CustomAudioElement = CustomMediaMixin(globalThis.HTMLElement ?? class {\n}, {\n  tag: \"audio\"\n});\nexport {\n  Attributes,\n  CustomAudioElement,\n  CustomMediaMixin,\n  CustomVideoElement,\n  Events\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}