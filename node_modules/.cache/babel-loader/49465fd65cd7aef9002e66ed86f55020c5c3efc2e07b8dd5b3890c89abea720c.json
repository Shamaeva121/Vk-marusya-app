{"ast":null,"code":"import React,{useState,useEffect}from'react';import BlockMovies from'../BlockMovies/BlockMovies';import{getFavoriteMovies,addToFavorites,removeFromFavorites}from'../../api/apiClient';import'./AccountPage.scss';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HeartIcon=()=>/*#__PURE__*/_jsx(\"img\",{src:\"/icons/icon-favourites.svg\",alt:\"\\u0418\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0444\\u0438\\u043B\\u044C\\u043C\\u044B\"});const SettingsIcon=()=>/*#__PURE__*/_jsx(\"img\",{src:\"/icons/icon-people-account.svg\",alt:\"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\"});const MailIcon=()=>/*#__PURE__*/_jsx(\"img\",{src:\"/icons/icon-mail-account.svg\",alt:\"\\u041F\\u043E\\u0447\\u0442\\u0430\",className:\"user-info__icon-mail\"});const AccountPage=_ref=>{let{user,onLogout,onRemove,onOpenTrailer,onOpenMoviePage}=_ref;const[activeTab,setActiveTab]=useState(\"favorites\");const[movies,setMovies]=useState([]);const[favoriteIds,setFavoriteIds]=useState([]);const tabs=[{id:\"favorites\",label:\"Избранное\",icon:/*#__PURE__*/_jsx(HeartIcon,{}),shortLabel:\"Избранные фильмы\"},{id:\"settings\",label:\"Настройки\",icon:/*#__PURE__*/_jsx(SettingsIcon,{}),shortLabel:\"Настройка аккаунта\"}];const handleTabClick=tabId=>{setActiveTab(tabId);};const loadFavorites=async()=>{console.log('Вызов функции loadFavorites');try{const data=await getFavoriteMovies();console.log('Данные из API:',data);if(data&&Array.isArray(data)){console.log('Массив favorites:',data);setMovies(data);setFavoriteIds(data.map(movie=>String(movie.id)));}else{console.warn('Структура данных некорректна или favorites отсутствует:',data);setMovies([]);setFavoriteIds([]);}}catch(err){console.error('Ошибка загрузки избранных:',err);}};useEffect(()=>{if(activeTab==='favorites'){loadFavorites();}},[activeTab]);const handleRemoveFavorite=async movieId=>{await removeFromFavorites(movieId);await loadFavorites();};const handleFavoriteToggle=async movieId=>{const isFav=favoriteIds.includes(movieId);if(isFav){await removeFromFavorites(movieId);}else{await addToFavorites(movieId);}const data=await getFavoriteMovies();if(Array.isArray(data)){setFavoriteIds(data.map(movie=>String(movie.id)));}else{setFavoriteIds([]);}};const renderTabContent=()=>{console.log('Рендеринг контента, movies:',movies);switch(activeTab){case\"favorites\":return/*#__PURE__*/_jsx(\"div\",{className:\"account-page__favorites\",children:movies&&movies.length>0?/*#__PURE__*/_jsx(BlockMovies,{movies:movies,onRemove:handleRemoveFavorite,onOpenTrailer:onOpenTrailer,onOpenMoviePage:onOpenMoviePage,isFavoritesList:true,favoriteMovieIds:favoriteIds,onFavoriteToggle:handleFavoriteToggle}):null});case\"settings\":return/*#__PURE__*/_jsxs(\"div\",{className:\"account-page__settings\",children:[user&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-info__wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-info__initials\",children:user.name&&user.surname?user.name.charAt(0)+user.surname.charAt(0):\"\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-info__name-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-info__name-title\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\u0418\\u043C\\u044F \\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-info__name\",children:[user.name,\" \",user.surname]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-info__email-container\",children:[/*#__PURE__*/_jsx(MailIcon,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-info__email-title\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\"}),/*#__PURE__*/_jsx(\"div\",{className:\"user-info__email\",children:user.email})]})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"header__logout-button\",onClick:onLogout,children:\"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\"})]});default:return null;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"account-page\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"account-page__header\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"account-page__title\",children:\"\\u041C\\u043E\\u0439 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"account-page__tabs\",children:tabs.map(tab=>/*#__PURE__*/_jsxs(\"button\",{className:\"account-page__tab \".concat(activeTab===tab.id?\"active\":\"\"),onClick:()=>handleTabClick(tab.id),children:[/*#__PURE__*/_jsx(\"span\",{className:\"account-page__tab-icon\",children:tab.icon}),/*#__PURE__*/_jsx(\"span\",{className:\"account-page__tab-label\",children:tab.shortLabel})]},tab.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"account-page__content\",children:renderTabContent()})]});};export default AccountPage;","map":{"version":3,"names":["React","useState","useEffect","BlockMovies","getFavoriteMovies","addToFavorites","removeFromFavorites","jsx","_jsx","jsxs","_jsxs","HeartIcon","src","alt","SettingsIcon","MailIcon","className","AccountPage","_ref","user","onLogout","onRemove","onOpenTrailer","onOpenMoviePage","activeTab","setActiveTab","movies","setMovies","favoriteIds","setFavoriteIds","tabs","id","label","icon","shortLabel","handleTabClick","tabId","loadFavorites","console","log","data","Array","isArray","map","movie","String","warn","err","error","handleRemoveFavorite","movieId","handleFavoriteToggle","isFav","includes","renderTabContent","children","length","isFavoritesList","favoriteMovieIds","onFavoriteToggle","name","surname","charAt","email","onClick","tab","concat"],"sources":["d:/Users/User55/Documents/GitHub/Vk-marusya-app/src/components/Account/AccountPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BlockMovies from '../BlockMovies/BlockMovies';\nimport { User, AccountPageProps, Movie, Tab } from \"../../types/types\";\nimport { getFavoriteMovies, addToFavorites, removeFromFavorites } from '../../api/apiClient';\nimport './AccountPage.scss';\n\nconst HeartIcon = () => (\n  <img src=\"/icons/icon-favourites.svg\" alt=\"Избранные фильмы\" />\n);\n\nconst SettingsIcon = () => (\n  <img src=\"/icons/icon-people-account.svg\" alt=\"Настройки\" />\n);\n\nconst MailIcon = () => (\n  <img src=\"/icons/icon-mail-account.svg\" alt=\"Почта\" className=\"user-info__icon-mail\" />\n);\n\nconst AccountPage: React.FC<AccountPageProps> = ({ user, onLogout, onRemove, onOpenTrailer, onOpenMoviePage }) => {\n  const [activeTab, setActiveTab] = useState<string>(\"favorites\");\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [favoriteIds, setFavoriteIds] = useState<string[]>([]); \n\n  const tabs: Tab[] = [\n    { id: \"favorites\", label: \"Избранное\", icon: <HeartIcon />, shortLabel: \"Избранные фильмы\" },\n    { id: \"settings\", label: \"Настройки\", icon: <SettingsIcon />, shortLabel: \"Настройка аккаунта\" },\n  ];\n\n  const handleTabClick = (tabId: string) => {\n    setActiveTab(tabId);\n  };\n\n  const loadFavorites = async () => {\n    console.log('Вызов функции loadFavorites');\n    try {\n      const data = await getFavoriteMovies();\n      console.log('Данные из API:', data);\n      if (data && Array.isArray(data)) {\n        console.log('Массив favorites:', data);\n        setMovies(data);\n        setFavoriteIds(data.map(movie => String(movie.id))); \n      } else {\n        console.warn('Структура данных некорректна или favorites отсутствует:', data);\n        setMovies([]);\n        setFavoriteIds([]);\n      }\n    } catch (err) {\n      console.error('Ошибка загрузки избранных:', err);\n    }\n  };\n\n  useEffect(() => {\n    if (activeTab === 'favorites') {\n      loadFavorites();\n    }\n  }, [activeTab]);\n\n  const handleRemoveFavorite = async (movieId: string) => {\n    await removeFromFavorites(movieId);\n    await loadFavorites();\n  };\n\n  const handleFavoriteToggle = async (movieId: string) => {\n    const isFav = favoriteIds.includes(movieId);\n    if (isFav) {\n      await removeFromFavorites(movieId);\n    } else {\n      await addToFavorites(movieId);\n    }\n    const data = await getFavoriteMovies();\n    if (Array.isArray(data)) {\n      setFavoriteIds(data.map(movie => String(movie.id)));\n    } else {\n      setFavoriteIds([]);\n    }\n  };\n\n  const renderTabContent = () => {\n    console.log('Рендеринг контента, movies:', movies);\n    switch (activeTab) {\n      case \"favorites\":\n        return (\n          <div className=\"account-page__favorites\">\n            {movies && movies.length > 0 ? (\n              <BlockMovies\n                movies={movies}\n                onRemove={handleRemoveFavorite}\n                onOpenTrailer={onOpenTrailer}\n                onOpenMoviePage={onOpenMoviePage}\n                isFavoritesList={true}\n                favoriteMovieIds={favoriteIds}\n                onFavoriteToggle={handleFavoriteToggle}\n              />\n            ) : (\n              null\n            )}\n          </div>\n        );\n      case \"settings\":\n        return (\n          <div className=\"account-page__settings\">\n            {user && (\n              <div className=\"user-info\">\n                <div className=\"user-info__wrapper\">\n                  <div className=\"user-info__initials\">\n                    {user.name && user.surname ? user.name.charAt(0) + user.surname.charAt(0) : \"\"}\n                  </div>\n                  <div className=\"user-info__name-container\">\n                    <div className=\"user-info__name-title\">\n                      <span>Имя Фамилия</span>\n                    </div>\n                    <div className=\"user-info__name\">{user.name} {user.surname}</div>\n                  </div>\n                </div>\n                <div className=\"user-info__email-container\">\n                  <MailIcon />\n                  <div className=\"user-info__email-title\">\n                    <span>Электронная почта</span>\n                    <div className=\"user-info__email\">{user.email}</div>\n                  </div>\n                </div>\n              </div>\n            )}\n            <button className=\"header__logout-button\" onClick={onLogout}>Выйти из аккаунта</button>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  \n    return (\n    <div className=\"account-page\">\n      <div className=\"account-page__header\">\n        <h1 className=\"account-page__title\">Мой аккаунт</h1>\n      </div>\n      <div className=\"account-page__tabs\">\n        {tabs.map((tab) => (\n          <button\n            key={tab.id}\n            className={`account-page__tab ${activeTab === tab.id ? \"active\" : \"\"}`}\n            onClick={() => handleTabClick(tab.id)}\n          >\n            <span className=\"account-page__tab-icon\">{tab.icon}</span>\n            <span className=\"account-page__tab-label\">{tab.shortLabel}</span>\n          </button>\n        ))}\n      </div>\n      <div className=\"account-page__content\">{renderTabContent()}</div>\n    </div>\n  );\n};\n\nexport default AccountPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,WAAW,KAAM,4BAA4B,CAEpD,OAASC,iBAAiB,CAAEC,cAAc,CAAEC,mBAAmB,KAAQ,qBAAqB,CAC5F,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5B,KAAM,CAAAC,SAAS,CAAGA,CAAA,gBAChBH,IAAA,QAAKI,GAAG,CAAC,4BAA4B,CAACC,GAAG,CAAC,6FAAkB,CAAE,CAC/D,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,gBACnBN,IAAA,QAAKI,GAAG,CAAC,gCAAgC,CAACC,GAAG,CAAC,wDAAW,CAAE,CAC5D,CAED,KAAM,CAAAE,QAAQ,CAAGA,CAAA,gBACfP,IAAA,QAAKI,GAAG,CAAC,8BAA8B,CAACC,GAAG,CAAC,gCAAO,CAACG,SAAS,CAAC,sBAAsB,CAAE,CACvF,CAED,KAAM,CAAAC,WAAuC,CAAGC,IAAA,EAAkE,IAAjE,CAAEC,IAAI,CAAEC,QAAQ,CAAEC,QAAQ,CAAEC,aAAa,CAAEC,eAAgB,CAAC,CAAAL,IAAA,CAC3G,KAAM,CAACM,SAAS,CAAEC,YAAY,CAAC,CAAGxB,QAAQ,CAAS,WAAW,CAAC,CAC/D,KAAM,CAACyB,MAAM,CAAEC,SAAS,CAAC,CAAG1B,QAAQ,CAAU,EAAE,CAAC,CACjD,KAAM,CAAC2B,WAAW,CAAEC,cAAc,CAAC,CAAG5B,QAAQ,CAAW,EAAE,CAAC,CAE5D,KAAM,CAAA6B,IAAW,CAAG,CAClB,CAAEC,EAAE,CAAE,WAAW,CAAEC,KAAK,CAAE,WAAW,CAAEC,IAAI,cAAEzB,IAAA,CAACG,SAAS,GAAE,CAAC,CAAEuB,UAAU,CAAE,kBAAmB,CAAC,CAC5F,CAAEH,EAAE,CAAE,UAAU,CAAEC,KAAK,CAAE,WAAW,CAAEC,IAAI,cAAEzB,IAAA,CAACM,YAAY,GAAE,CAAC,CAAEoB,UAAU,CAAE,oBAAqB,CAAC,CACjG,CAED,KAAM,CAAAC,cAAc,CAAIC,KAAa,EAAK,CACxCX,YAAY,CAACW,KAAK,CAAC,CACrB,CAAC,CAED,KAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC1C,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAApC,iBAAiB,CAAC,CAAC,CACtCkC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEC,IAAI,CAAC,CACnC,GAAIA,IAAI,EAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,CAAE,CAC/BF,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEC,IAAI,CAAC,CACtCb,SAAS,CAACa,IAAI,CAAC,CACfX,cAAc,CAACW,IAAI,CAACG,GAAG,CAACC,KAAK,EAAIC,MAAM,CAACD,KAAK,CAACb,EAAE,CAAC,CAAC,CAAC,CACrD,CAAC,IAAM,CACLO,OAAO,CAACQ,IAAI,CAAC,yDAAyD,CAAEN,IAAI,CAAC,CAC7Eb,SAAS,CAAC,EAAE,CAAC,CACbE,cAAc,CAAC,EAAE,CAAC,CACpB,CACF,CAAE,MAAOkB,GAAG,CAAE,CACZT,OAAO,CAACU,KAAK,CAAC,4BAA4B,CAAED,GAAG,CAAC,CAClD,CACF,CAAC,CAED7C,SAAS,CAAC,IAAM,CACd,GAAIsB,SAAS,GAAK,WAAW,CAAE,CAC7Ba,aAAa,CAAC,CAAC,CACjB,CACF,CAAC,CAAE,CAACb,SAAS,CAAC,CAAC,CAEf,KAAM,CAAAyB,oBAAoB,CAAG,KAAO,CAAAC,OAAe,EAAK,CACtD,KAAM,CAAA5C,mBAAmB,CAAC4C,OAAO,CAAC,CAClC,KAAM,CAAAb,aAAa,CAAC,CAAC,CACvB,CAAC,CAED,KAAM,CAAAc,oBAAoB,CAAG,KAAO,CAAAD,OAAe,EAAK,CACtD,KAAM,CAAAE,KAAK,CAAGxB,WAAW,CAACyB,QAAQ,CAACH,OAAO,CAAC,CAC3C,GAAIE,KAAK,CAAE,CACT,KAAM,CAAA9C,mBAAmB,CAAC4C,OAAO,CAAC,CACpC,CAAC,IAAM,CACL,KAAM,CAAA7C,cAAc,CAAC6C,OAAO,CAAC,CAC/B,CACA,KAAM,CAAAV,IAAI,CAAG,KAAM,CAAApC,iBAAiB,CAAC,CAAC,CACtC,GAAIqC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,CAAE,CACvBX,cAAc,CAACW,IAAI,CAACG,GAAG,CAACC,KAAK,EAAIC,MAAM,CAACD,KAAK,CAACb,EAAE,CAAC,CAAC,CAAC,CACrD,CAAC,IAAM,CACLF,cAAc,CAAC,EAAE,CAAC,CACpB,CACF,CAAC,CAED,KAAM,CAAAyB,gBAAgB,CAAGA,CAAA,GAAM,CAC7BhB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEb,MAAM,CAAC,CAClD,OAAQF,SAAS,EACf,IAAK,WAAW,CACd,mBACEhB,IAAA,QAAKQ,SAAS,CAAC,yBAAyB,CAAAuC,QAAA,CACrC7B,MAAM,EAAIA,MAAM,CAAC8B,MAAM,CAAG,CAAC,cAC1BhD,IAAA,CAACL,WAAW,EACVuB,MAAM,CAAEA,MAAO,CACfL,QAAQ,CAAE4B,oBAAqB,CAC/B3B,aAAa,CAAEA,aAAc,CAC7BC,eAAe,CAAEA,eAAgB,CACjCkC,eAAe,CAAE,IAAK,CACtBC,gBAAgB,CAAE9B,WAAY,CAC9B+B,gBAAgB,CAAER,oBAAqB,CACxC,CAAC,CAEF,IACD,CACE,CAAC,CAEV,IAAK,UAAU,CACb,mBACEzC,KAAA,QAAKM,SAAS,CAAC,wBAAwB,CAAAuC,QAAA,EACpCpC,IAAI,eACHT,KAAA,QAAKM,SAAS,CAAC,WAAW,CAAAuC,QAAA,eACxB7C,KAAA,QAAKM,SAAS,CAAC,oBAAoB,CAAAuC,QAAA,eACjC/C,IAAA,QAAKQ,SAAS,CAAC,qBAAqB,CAAAuC,QAAA,CACjCpC,IAAI,CAACyC,IAAI,EAAIzC,IAAI,CAAC0C,OAAO,CAAG1C,IAAI,CAACyC,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAAG3C,IAAI,CAAC0C,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC,CAAG,EAAE,CAC3E,CAAC,cACNpD,KAAA,QAAKM,SAAS,CAAC,2BAA2B,CAAAuC,QAAA,eACxC/C,IAAA,QAAKQ,SAAS,CAAC,uBAAuB,CAAAuC,QAAA,cACpC/C,IAAA,SAAA+C,QAAA,CAAM,+DAAW,CAAM,CAAC,CACrB,CAAC,cACN7C,KAAA,QAAKM,SAAS,CAAC,iBAAiB,CAAAuC,QAAA,EAAEpC,IAAI,CAACyC,IAAI,CAAC,GAAC,CAACzC,IAAI,CAAC0C,OAAO,EAAM,CAAC,EAC9D,CAAC,EACH,CAAC,cACNnD,KAAA,QAAKM,SAAS,CAAC,4BAA4B,CAAAuC,QAAA,eACzC/C,IAAA,CAACO,QAAQ,GAAE,CAAC,cACZL,KAAA,QAAKM,SAAS,CAAC,wBAAwB,CAAAuC,QAAA,eACrC/C,IAAA,SAAA+C,QAAA,CAAM,mGAAiB,CAAM,CAAC,cAC9B/C,IAAA,QAAKQ,SAAS,CAAC,kBAAkB,CAAAuC,QAAA,CAAEpC,IAAI,CAAC4C,KAAK,CAAM,CAAC,EACjD,CAAC,EACH,CAAC,EACH,CACN,cACDvD,IAAA,WAAQQ,SAAS,CAAC,uBAAuB,CAACgD,OAAO,CAAE5C,QAAS,CAAAmC,QAAA,CAAC,8FAAiB,CAAQ,CAAC,EACpF,CAAC,CAEV,QACE,MAAO,KAAI,CACf,CACF,CAAC,CAGC,mBACA7C,KAAA,QAAKM,SAAS,CAAC,cAAc,CAAAuC,QAAA,eAC3B/C,IAAA,QAAKQ,SAAS,CAAC,sBAAsB,CAAAuC,QAAA,cACnC/C,IAAA,OAAIQ,SAAS,CAAC,qBAAqB,CAAAuC,QAAA,CAAC,+DAAW,CAAI,CAAC,CACjD,CAAC,cACN/C,IAAA,QAAKQ,SAAS,CAAC,oBAAoB,CAAAuC,QAAA,CAChCzB,IAAI,CAACa,GAAG,CAAEsB,GAAG,eACZvD,KAAA,WAEEM,SAAS,sBAAAkD,MAAA,CAAuB1C,SAAS,GAAKyC,GAAG,CAAClC,EAAE,CAAG,QAAQ,CAAG,EAAE,CAAG,CACvEiC,OAAO,CAAEA,CAAA,GAAM7B,cAAc,CAAC8B,GAAG,CAAClC,EAAE,CAAE,CAAAwB,QAAA,eAEtC/C,IAAA,SAAMQ,SAAS,CAAC,wBAAwB,CAAAuC,QAAA,CAAEU,GAAG,CAAChC,IAAI,CAAO,CAAC,cAC1DzB,IAAA,SAAMQ,SAAS,CAAC,yBAAyB,CAAAuC,QAAA,CAAEU,GAAG,CAAC/B,UAAU,CAAO,CAAC,GAL5D+B,GAAG,CAAClC,EAMH,CACT,CAAC,CACC,CAAC,cACNvB,IAAA,QAAKQ,SAAS,CAAC,uBAAuB,CAAAuC,QAAA,CAAED,gBAAgB,CAAC,CAAC,CAAM,CAAC,EAC9D,CAAC,CAEV,CAAC,CAED,cAAe,CAAArC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}