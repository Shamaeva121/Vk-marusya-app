{"ast":null,"code":"import _classPrivateMethodInitSpec from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _defineProperty from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldSet from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport _classPrivateFieldGet from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _assertClassBrand from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nimport _objectSpread from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _globalThis$HTMLEleme;\nconst EMBED_BASE = \"https://player.twitch.tv\";\nconst MATCH_VIDEO = /(?:www\\.|go\\.)?twitch\\.tv\\/(?:videos?\\/|\\?video=)(\\d+)($|\\?)/;\nconst MATCH_CHANNEL = /(?:www\\.|go\\.)?twitch\\.tv\\/([a-zA-Z0-9_]+)($|\\?)/;\nconst PlaybackState = {\n  IDLE: \"Idle\",\n  READY: \"Ready\",\n  BUFFERING: \"Buffering\",\n  PLAYING: \"Playing\",\n  ENDED: \"Ended\"\n};\nconst PlayerCommands = {\n  DISABLE_CAPTIONS: 0,\n  ENABLE_CAPTIONS: 1,\n  PAUSE: 2,\n  PLAY: 3,\n  SEEK: 4,\n  SET_CHANNEL: 5,\n  SET_CHANNEL_ID: 6,\n  SET_COLLECTION: 7,\n  SET_QUALITY: 8,\n  SET_VIDEO: 9,\n  SET_MUTED: 10,\n  SET_VOLUME: 11\n};\nfunction getTemplateHTML(attrs) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const iframeAttrs = {\n    src: serializeIframeUrl(attrs, props),\n    frameborder: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    allow: \"accelerometer; fullscreen; autoplay; encrypted-media; picture-in-picture;\",\n    sandbox: \"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox\",\n    scrolling: \"no\"\n  };\n  if (props.config) {\n    iframeAttrs[\"data-config\"] = JSON.stringify(props.config);\n  }\n  return /*html*/\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n        min-width: 300px;\\n        min-height: 150px;\\n        position: relative;\\n      }\\n      iframe {\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n      }\\n      :host(:not([controls])) {\\n        pointer-events: none;\\n      }\\n    </style>\\n    <iframe\".concat(serializeAttributes(iframeAttrs), \"></iframe>\\n  \");\n}\nfunction serializeIframeUrl(attrs, props) {\n  var _a;\n  if (!attrs.src) return;\n  const videoMatch = attrs.src.match(MATCH_VIDEO);\n  const channelMatch = attrs.src.match(MATCH_CHANNEL);\n  const params = _objectSpread({\n    parent: (_a = globalThis.location) == null ? void 0 : _a.hostname,\n    // ?controls=true is enabled by default in the iframe\n    controls: attrs.controls === \"\" ? null : false,\n    autoplay: attrs.autoplay === \"\" ? null : false,\n    muted: attrs.muted,\n    preload: attrs.preload\n  }, props.config);\n  if (videoMatch) {\n    const videoId = videoMatch[1];\n    return \"\".concat(EMBED_BASE, \"/?video=v\").concat(videoId, \"&\").concat(serialize(params));\n  } else if (channelMatch) {\n    const channel = channelMatch[1];\n    return \"\".concat(EMBED_BASE, \"/?channel=\").concat(channel, \"&\").concat(serialize(params));\n  }\n  return \"\";\n}\nvar _loadRequested = /*#__PURE__*/new WeakMap();\nvar _hasLoaded = /*#__PURE__*/new WeakMap();\nvar _iframe = /*#__PURE__*/new WeakMap();\nvar _playerState = /*#__PURE__*/new WeakMap();\nvar _currentTime = /*#__PURE__*/new WeakMap();\nvar _muted = /*#__PURE__*/new WeakMap();\nvar _volume = /*#__PURE__*/new WeakMap();\nvar _paused = /*#__PURE__*/new WeakMap();\nvar _seeking = /*#__PURE__*/new WeakMap();\nvar _readyState = /*#__PURE__*/new WeakMap();\nvar _config = /*#__PURE__*/new WeakMap();\nvar _onMessage = /*#__PURE__*/new WeakMap();\nvar _TwitchVideoElement_brand = /*#__PURE__*/new WeakSet();\nclass TwitchVideoElement extends ((_globalThis$HTMLEleme = globalThis.HTMLElement) !== null && _globalThis$HTMLEleme !== void 0 ? _globalThis$HTMLEleme : class {}) {\n  constructor() {\n    super();\n    _classPrivateMethodInitSpec(this, _TwitchVideoElement_brand);\n    _defineProperty(this, \"loadComplete\", new PublicPromise());\n    _classPrivateFieldInitSpec(this, _loadRequested, void 0);\n    _classPrivateFieldInitSpec(this, _hasLoaded, void 0);\n    _classPrivateFieldInitSpec(this, _iframe, void 0);\n    _classPrivateFieldInitSpec(this, _playerState, {});\n    _classPrivateFieldInitSpec(this, _currentTime, 0);\n    _classPrivateFieldInitSpec(this, _muted, false);\n    _classPrivateFieldInitSpec(this, _volume, 1);\n    _classPrivateFieldInitSpec(this, _paused, !this.autoplay);\n    _classPrivateFieldInitSpec(this, _seeking, false);\n    _classPrivateFieldInitSpec(this, _readyState, 0);\n    _classPrivateFieldInitSpec(this, _config, null);\n    _classPrivateFieldInitSpec(this, _onMessage, async event => {\n      var _a, _b, _c, _d;\n      if (!_classPrivateFieldGet(_iframe, this).contentWindow) return;\n      const {\n        data,\n        source\n      } = event;\n      const isFromEmbedWindow = source === _classPrivateFieldGet(_iframe, this).contentWindow;\n      if (!isFromEmbedWindow) return;\n      if (data.namespace === \"twitch-embed\") {\n        await new Promise(resolve => setTimeout(resolve, 10));\n        if (data.eventName === \"ready\") {\n          this.dispatchEvent(new Event(\"loadcomplete\"));\n          this.loadComplete.resolve();\n          _classPrivateFieldSet(_readyState, this, 1);\n          this.dispatchEvent(new Event(\"loadedmetadata\"));\n        } else if (data.eventName === \"seek\") {\n          _classPrivateFieldSet(_seeking, this, true);\n          this.dispatchEvent(new Event(\"seeking\"));\n        } else if (data.eventName === \"playing\") {\n          if (_classPrivateFieldGet(_seeking, this)) {\n            _classPrivateFieldSet(_seeking, this, false);\n            this.dispatchEvent(new Event(\"seeked\"));\n          }\n          _classPrivateFieldSet(_readyState, this, 3);\n          this.dispatchEvent(new Event(\"playing\"));\n        } else {\n          this.dispatchEvent(new Event(data.eventName));\n        }\n      } else if (data.namespace === \"twitch-embed-player-proxy\" && data.eventName === \"UPDATE_STATE\") {\n        const oldDuration = _classPrivateFieldGet(_playerState, this).duration;\n        const oldCurrentTime = _classPrivateFieldGet(_playerState, this).currentTime;\n        const oldVolume = _classPrivateFieldGet(_playerState, this).volume;\n        const oldMuted = _classPrivateFieldGet(_playerState, this).muted;\n        const oldBuffered = (_b = (_a = _classPrivateFieldGet(_playerState, this).stats) == null ? void 0 : _a.videoStats) == null ? void 0 : _b.bufferSize;\n        _classPrivateFieldSet(_playerState, this, _objectSpread(_objectSpread({}, _classPrivateFieldGet(_playerState, this)), data.params));\n        if (oldDuration !== _classPrivateFieldGet(_playerState, this).duration) {\n          this.dispatchEvent(new Event(\"durationchange\"));\n        }\n        if (oldCurrentTime !== _classPrivateFieldGet(_playerState, this).currentTime) {\n          this.dispatchEvent(new Event(\"timeupdate\"));\n        }\n        if (oldVolume !== _classPrivateFieldGet(_playerState, this).volume || oldMuted !== _classPrivateFieldGet(_playerState, this).muted) {\n          this.dispatchEvent(new Event(\"volumechange\"));\n        }\n        if (oldBuffered !== ((_d = (_c = _classPrivateFieldGet(_playerState, this).stats) == null ? void 0 : _c.videoStats) == null ? void 0 : _d.bufferSize)) {\n          this.dispatchEvent(new Event(\"progress\"));\n        }\n      }\n    });\n    _assertClassBrand(_TwitchVideoElement_brand, this, _upgradeProperty).call(this, \"config\");\n  }\n  get config() {\n    return _classPrivateFieldGet(_config, this);\n  }\n  set config(value) {\n    _classPrivateFieldSet(_config, this, value);\n  }\n  async load() {\n    if (_classPrivateFieldGet(_loadRequested, this)) return;\n    if (!this.shadowRoot) {\n      this.attachShadow({\n        mode: \"open\"\n      });\n    }\n    const isFirstLoad = !_classPrivateFieldGet(_hasLoaded, this);\n    if (_classPrivateFieldGet(_hasLoaded, this)) {\n      this.loadComplete = new PublicPromise();\n    }\n    _classPrivateFieldSet(_hasLoaded, this, true);\n    await _classPrivateFieldSet(_loadRequested, this, Promise.resolve());\n    _classPrivateFieldSet(_loadRequested, this, null);\n    _classPrivateFieldSet(_readyState, this, 0);\n    this.dispatchEvent(new Event(\"emptied\"));\n    if (!this.src) {\n      this.shadowRoot.innerHTML = \"\";\n      globalThis.removeEventListener(\"message\", _classPrivateFieldGet(_onMessage, this));\n      return;\n    }\n    this.dispatchEvent(new Event(\"loadstart\"));\n    let iframe = this.shadowRoot.querySelector(\"iframe\");\n    const attrs = namedNodeMapToObject(this.attributes);\n    if (isFirstLoad && iframe) {\n      _classPrivateFieldSet(_config, this, JSON.parse(iframe.getAttribute(\"data-config\") || \"{}\"));\n    }\n    if (!(iframe == null ? void 0 : iframe.src) || iframe.src !== serializeIframeUrl(attrs, this)) {\n      this.shadowRoot.innerHTML = getTemplateHTML(attrs, this);\n      iframe = this.shadowRoot.querySelector(\"iframe\");\n    }\n    _classPrivateFieldSet(_iframe, this, iframe);\n    globalThis.addEventListener(\"message\", _classPrivateFieldGet(_onMessage, this));\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    switch (attrName) {\n      case \"src\":\n      case \"controls\":\n        {\n          this.load();\n          break;\n        }\n    }\n  }\n  get src() {\n    return this.getAttribute(\"src\");\n  }\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n  get readyState() {\n    return _classPrivateFieldGet(_readyState, this);\n  }\n  get seeking() {\n    return _classPrivateFieldGet(_seeking, this);\n  }\n  get buffered() {\n    var _ref;\n    var _a, _b;\n    return createTimeRanges(0, (_ref = (_b = (_a = _classPrivateFieldGet(_playerState, this).stats) == null ? void 0 : _a.videoStats) == null ? void 0 : _b.bufferSize) !== null && _ref !== void 0 ? _ref : 0);\n  }\n  get paused() {\n    if (!_classPrivateFieldGet(_playerState, this).playback) return _classPrivateFieldGet(_paused, this);\n    return _classPrivateFieldGet(_playerState, this).playback === PlaybackState.IDLE;\n  }\n  get ended() {\n    if (!_classPrivateFieldGet(_playerState, this).playback) return false;\n    return _classPrivateFieldGet(_playerState, this).playback === PlaybackState.ENDED;\n  }\n  get duration() {\n    var _classPrivateFieldGet2;\n    return (_classPrivateFieldGet2 = _classPrivateFieldGet(_playerState, this).duration) !== null && _classPrivateFieldGet2 !== void 0 ? _classPrivateFieldGet2 : NaN;\n  }\n  get autoplay() {\n    return this.hasAttribute(\"autoplay\");\n  }\n  set autoplay(val) {\n    if (this.autoplay == val) return;\n    this.toggleAttribute(\"autoplay\", Boolean(val));\n  }\n  get controls() {\n    return this.hasAttribute(\"controls\");\n  }\n  set controls(val) {\n    if (this.controls == val) return;\n    this.toggleAttribute(\"controls\", Boolean(val));\n  }\n  get currentTime() {\n    if (!_classPrivateFieldGet(_playerState, this).currentTime) return _classPrivateFieldGet(_currentTime, this);\n    return _classPrivateFieldGet(_playerState, this).currentTime;\n  }\n  set currentTime(val) {\n    _classPrivateFieldSet(_currentTime, this, val);\n    this.loadComplete.then(() => {\n      _assertClassBrand(_TwitchVideoElement_brand, this, _sendCommand).call(this, PlayerCommands.SEEK, val);\n    });\n  }\n  get defaultMuted() {\n    return this.hasAttribute(\"muted\");\n  }\n  set defaultMuted(val) {\n    this.toggleAttribute(\"muted\", Boolean(val));\n  }\n  get loop() {\n    return this.hasAttribute(\"loop\");\n  }\n  set loop(val) {\n    this.toggleAttribute(\"loop\", Boolean(val));\n  }\n  get muted() {\n    return _classPrivateFieldGet(_muted, this);\n  }\n  set muted(val) {\n    _classPrivateFieldSet(_muted, this, val);\n    this.loadComplete.then(() => {\n      _assertClassBrand(_TwitchVideoElement_brand, this, _sendCommand).call(this, PlayerCommands.SET_MUTED, val);\n    });\n  }\n  get volume() {\n    return _classPrivateFieldGet(_volume, this);\n  }\n  set volume(val) {\n    _classPrivateFieldSet(_volume, this, val);\n    this.loadComplete.then(() => {\n      _assertClassBrand(_TwitchVideoElement_brand, this, _sendCommand).call(this, PlayerCommands.SET_VOLUME, val);\n    });\n  }\n  get playsInline() {\n    return this.hasAttribute(\"playsinline\");\n  }\n  set playsInline(val) {\n    this.toggleAttribute(\"playsinline\", Boolean(val));\n  }\n  play() {\n    _classPrivateFieldSet(_paused, this, false);\n    _assertClassBrand(_TwitchVideoElement_brand, this, _sendCommand).call(this, PlayerCommands.PLAY);\n  }\n  pause() {\n    _classPrivateFieldSet(_paused, this, true);\n    _assertClassBrand(_TwitchVideoElement_brand, this, _sendCommand).call(this, PlayerCommands.PAUSE);\n  }\n}\nfunction _sendCommand(command, params) {\n  if (!_classPrivateFieldGet(_iframe, this).contentWindow) return;\n  const message = {\n    eventName: command,\n    params,\n    namespace: \"twitch-embed-player-proxy\"\n  };\n  _classPrivateFieldGet(_iframe, this).contentWindow.postMessage(message, EMBED_BASE);\n}\n// This is a pattern to update property values that are set before\n// the custom element is upgraded.\n// https://web.dev/custom-elements-best-practices/#make-properties-lazy\nfunction _upgradeProperty(prop) {\n  if (Object.prototype.hasOwnProperty.call(this, prop)) {\n    const value = this[prop];\n    delete this[prop];\n    this[prop] = value;\n  }\n}\n_defineProperty(TwitchVideoElement, \"getTemplateHTML\", getTemplateHTML);\n_defineProperty(TwitchVideoElement, \"shadowRootOptions\", {\n  mode: \"open\"\n});\n_defineProperty(TwitchVideoElement, \"observedAttributes\", [\"autoplay\", \"controls\", \"loop\", \"muted\", \"playsinline\", \"preload\", \"src\"]);\nfunction namedNodeMapToObject(namedNodeMap) {\n  let obj = {};\n  for (let attr of namedNodeMap) {\n    obj[attr.name] = attr.value;\n  }\n  return obj;\n}\nfunction serializeAttributes(attrs) {\n  let html = \"\";\n  for (const key in attrs) {\n    const value = attrs[key];\n    if (value === \"\") html += \" \".concat(escapeHtml(key));else html += \" \".concat(escapeHtml(key), \"=\\\"\").concat(escapeHtml(\"\".concat(value)), \"\\\"\");\n  }\n  return html;\n}\nfunction escapeHtml(str) {\n  return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\").replace(/`/g, \"&#x60;\");\n}\nfunction serialize(props) {\n  return String(new URLSearchParams(filterParams(props)));\n}\nfunction filterParams(props) {\n  let p = {};\n  for (let key in props) {\n    let val = props[key];\n    if (val === true || val === \"\") p[key] = true;else if (val === false) p[key] = false;else if (val != null) p[key] = val;\n  }\n  return p;\n}\nclass PublicPromise extends Promise {\n  constructor() {\n    let executor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : () => {};\n    let res, rej;\n    super((resolve, reject) => {\n      executor(resolve, reject);\n      res = resolve;\n      rej = reject;\n    });\n    this.resolve = res;\n    this.reject = rej;\n  }\n}\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start == null || end == null || start === 0 && end === 0) {\n    return createTimeRangesObj([[0, 0]]);\n  }\n  return createTimeRangesObj([[start, end]]);\n}\nfunction createTimeRangesObj(ranges) {\n  Object.defineProperties(ranges, {\n    start: {\n      value: i => ranges[i][0]\n    },\n    end: {\n      value: i => ranges[i][1]\n    }\n  });\n  return ranges;\n}\nif (globalThis.customElements && !globalThis.customElements.get(\"twitch-video\")) {\n  globalThis.customElements.define(\"twitch-video\", TwitchVideoElement);\n}\nvar twitch_video_element_default = TwitchVideoElement;\nexport { twitch_video_element_default as default };","map":{"version":3,"names":["EMBED_BASE","MATCH_VIDEO","MATCH_CHANNEL","PlaybackState","IDLE","READY","BUFFERING","PLAYING","ENDED","PlayerCommands","DISABLE_CAPTIONS","ENABLE_CAPTIONS","PAUSE","PLAY","SEEK","SET_CHANNEL","SET_CHANNEL_ID","SET_COLLECTION","SET_QUALITY","SET_VIDEO","SET_MUTED","SET_VOLUME","getTemplateHTML","attrs","props","arguments","length","undefined","iframeAttrs","src","serializeIframeUrl","frameborder","width","height","allow","sandbox","scrolling","config","JSON","stringify","concat","serializeAttributes","_a","videoMatch","match","channelMatch","params","_objectSpread","parent","globalThis","location","hostname","controls","autoplay","muted","preload","videoId","serialize","channel","_loadRequested","WeakMap","_hasLoaded","_iframe","_playerState","_currentTime","_muted","_volume","_paused","_seeking","_readyState","_config","_onMessage","_TwitchVideoElement_brand","WeakSet","TwitchVideoElement","_globalThis$HTMLEleme","HTMLElement","constructor","_classPrivateMethodInitSpec","_defineProperty","PublicPromise","_classPrivateFieldInitSpec","event","_b","_c","_d","_classPrivateFieldGet","contentWindow","data","source","isFromEmbedWindow","namespace","Promise","resolve","setTimeout","eventName","dispatchEvent","Event","loadComplete","_classPrivateFieldSet","oldDuration","duration","oldCurrentTime","currentTime","oldVolume","volume","oldMuted","oldBuffered","stats","videoStats","bufferSize","_assertClassBrand","_upgradeProperty","call","value","load","shadowRoot","attachShadow","mode","isFirstLoad","innerHTML","removeEventListener","iframe","querySelector","namedNodeMapToObject","attributes","parse","getAttribute","addEventListener","attributeChangedCallback","attrName","oldValue","newValue","setAttribute","readyState","seeking","buffered","_ref","createTimeRanges","paused","playback","ended","_classPrivateFieldGet2","NaN","hasAttribute","val","toggleAttribute","Boolean","then","_sendCommand","defaultMuted","loop","playsInline","play","pause","command","message","postMessage","prop","Object","prototype","hasOwnProperty","namedNodeMap","obj","attr","name","html","key","escapeHtml","str","replace","String","URLSearchParams","filterParams","p","executor","res","rej","reject","start","end","Array","isArray","createTimeRangesObj","ranges","defineProperties","i","customElements","get","define","twitch_video_element_default","default"],"sources":["d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/twitch-video-element/dist/twitch-video-element.js"],"sourcesContent":["const EMBED_BASE = \"https://player.twitch.tv\";\nconst MATCH_VIDEO = /(?:www\\.|go\\.)?twitch\\.tv\\/(?:videos?\\/|\\?video=)(\\d+)($|\\?)/;\nconst MATCH_CHANNEL = /(?:www\\.|go\\.)?twitch\\.tv\\/([a-zA-Z0-9_]+)($|\\?)/;\nconst PlaybackState = {\n  IDLE: \"Idle\",\n  READY: \"Ready\",\n  BUFFERING: \"Buffering\",\n  PLAYING: \"Playing\",\n  ENDED: \"Ended\"\n};\nconst PlayerCommands = {\n  DISABLE_CAPTIONS: 0,\n  ENABLE_CAPTIONS: 1,\n  PAUSE: 2,\n  PLAY: 3,\n  SEEK: 4,\n  SET_CHANNEL: 5,\n  SET_CHANNEL_ID: 6,\n  SET_COLLECTION: 7,\n  SET_QUALITY: 8,\n  SET_VIDEO: 9,\n  SET_MUTED: 10,\n  SET_VOLUME: 11\n};\nfunction getTemplateHTML(attrs, props = {}) {\n  const iframeAttrs = {\n    src: serializeIframeUrl(attrs, props),\n    frameborder: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    allow: \"accelerometer; fullscreen; autoplay; encrypted-media; picture-in-picture;\",\n    sandbox: \"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox\",\n    scrolling: \"no\"\n  };\n  if (props.config) {\n    iframeAttrs[\"data-config\"] = JSON.stringify(props.config);\n  }\n  return (\n    /*html*/\n    `\n    <style>\n      :host {\n        display: inline-block;\n        min-width: 300px;\n        min-height: 150px;\n        position: relative;\n      }\n      iframe {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n      :host(:not([controls])) {\n        pointer-events: none;\n      }\n    </style>\n    <iframe${serializeAttributes(iframeAttrs)}></iframe>\n  `\n  );\n}\nfunction serializeIframeUrl(attrs, props) {\n  var _a;\n  if (!attrs.src) return;\n  const videoMatch = attrs.src.match(MATCH_VIDEO);\n  const channelMatch = attrs.src.match(MATCH_CHANNEL);\n  const params = {\n    parent: (_a = globalThis.location) == null ? void 0 : _a.hostname,\n    // ?controls=true is enabled by default in the iframe\n    controls: attrs.controls === \"\" ? null : false,\n    autoplay: attrs.autoplay === \"\" ? null : false,\n    muted: attrs.muted,\n    preload: attrs.preload,\n    ...props.config\n  };\n  if (videoMatch) {\n    const videoId = videoMatch[1];\n    return `${EMBED_BASE}/?video=v${videoId}&${serialize(params)}`;\n  } else if (channelMatch) {\n    const channel = channelMatch[1];\n    return `${EMBED_BASE}/?channel=${channel}&${serialize(params)}`;\n  }\n  return \"\";\n}\nclass TwitchVideoElement extends (globalThis.HTMLElement ?? class {\n}) {\n  static getTemplateHTML = getTemplateHTML;\n  static shadowRootOptions = { mode: \"open\" };\n  static observedAttributes = [\"autoplay\", \"controls\", \"loop\", \"muted\", \"playsinline\", \"preload\", \"src\"];\n  loadComplete = new PublicPromise();\n  #loadRequested;\n  #hasLoaded;\n  #iframe;\n  #playerState = {};\n  #currentTime = 0;\n  #muted = false;\n  #volume = 1;\n  #paused = !this.autoplay;\n  #seeking = false;\n  #readyState = 0;\n  #config = null;\n  constructor() {\n    super();\n    this.#upgradeProperty(\"config\");\n  }\n  get config() {\n    return this.#config;\n  }\n  set config(value) {\n    this.#config = value;\n  }\n  async load() {\n    if (this.#loadRequested) return;\n    if (!this.shadowRoot) {\n      this.attachShadow({ mode: \"open\" });\n    }\n    const isFirstLoad = !this.#hasLoaded;\n    if (this.#hasLoaded) {\n      this.loadComplete = new PublicPromise();\n    }\n    this.#hasLoaded = true;\n    await (this.#loadRequested = Promise.resolve());\n    this.#loadRequested = null;\n    this.#readyState = 0;\n    this.dispatchEvent(new Event(\"emptied\"));\n    if (!this.src) {\n      this.shadowRoot.innerHTML = \"\";\n      globalThis.removeEventListener(\"message\", this.#onMessage);\n      return;\n    }\n    this.dispatchEvent(new Event(\"loadstart\"));\n    let iframe = this.shadowRoot.querySelector(\"iframe\");\n    const attrs = namedNodeMapToObject(this.attributes);\n    if (isFirstLoad && iframe) {\n      this.#config = JSON.parse(iframe.getAttribute(\"data-config\") || \"{}\");\n    }\n    if (!(iframe == null ? void 0 : iframe.src) || iframe.src !== serializeIframeUrl(attrs, this)) {\n      this.shadowRoot.innerHTML = getTemplateHTML(attrs, this);\n      iframe = this.shadowRoot.querySelector(\"iframe\");\n    }\n    this.#iframe = iframe;\n    globalThis.addEventListener(\"message\", this.#onMessage);\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    switch (attrName) {\n      case \"src\":\n      case \"controls\": {\n        this.load();\n        break;\n      }\n    }\n  }\n  get src() {\n    return this.getAttribute(\"src\");\n  }\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n  get readyState() {\n    return this.#readyState;\n  }\n  get seeking() {\n    return this.#seeking;\n  }\n  get buffered() {\n    var _a, _b;\n    return createTimeRanges(0, ((_b = (_a = this.#playerState.stats) == null ? void 0 : _a.videoStats) == null ? void 0 : _b.bufferSize) ?? 0);\n  }\n  get paused() {\n    if (!this.#playerState.playback) return this.#paused;\n    return this.#playerState.playback === PlaybackState.IDLE;\n  }\n  get ended() {\n    if (!this.#playerState.playback) return false;\n    return this.#playerState.playback === PlaybackState.ENDED;\n  }\n  get duration() {\n    return this.#playerState.duration ?? NaN;\n  }\n  get autoplay() {\n    return this.hasAttribute(\"autoplay\");\n  }\n  set autoplay(val) {\n    if (this.autoplay == val) return;\n    this.toggleAttribute(\"autoplay\", Boolean(val));\n  }\n  get controls() {\n    return this.hasAttribute(\"controls\");\n  }\n  set controls(val) {\n    if (this.controls == val) return;\n    this.toggleAttribute(\"controls\", Boolean(val));\n  }\n  get currentTime() {\n    if (!this.#playerState.currentTime) return this.#currentTime;\n    return this.#playerState.currentTime;\n  }\n  set currentTime(val) {\n    this.#currentTime = val;\n    this.loadComplete.then(() => {\n      this.#sendCommand(PlayerCommands.SEEK, val);\n    });\n  }\n  get defaultMuted() {\n    return this.hasAttribute(\"muted\");\n  }\n  set defaultMuted(val) {\n    this.toggleAttribute(\"muted\", Boolean(val));\n  }\n  get loop() {\n    return this.hasAttribute(\"loop\");\n  }\n  set loop(val) {\n    this.toggleAttribute(\"loop\", Boolean(val));\n  }\n  get muted() {\n    return this.#muted;\n  }\n  set muted(val) {\n    this.#muted = val;\n    this.loadComplete.then(() => {\n      this.#sendCommand(PlayerCommands.SET_MUTED, val);\n    });\n  }\n  get volume() {\n    return this.#volume;\n  }\n  set volume(val) {\n    this.#volume = val;\n    this.loadComplete.then(() => {\n      this.#sendCommand(PlayerCommands.SET_VOLUME, val);\n    });\n  }\n  get playsInline() {\n    return this.hasAttribute(\"playsinline\");\n  }\n  set playsInline(val) {\n    this.toggleAttribute(\"playsinline\", Boolean(val));\n  }\n  play() {\n    this.#paused = false;\n    this.#sendCommand(PlayerCommands.PLAY);\n  }\n  pause() {\n    this.#paused = true;\n    this.#sendCommand(PlayerCommands.PAUSE);\n  }\n  #onMessage = async (event) => {\n    var _a, _b, _c, _d;\n    if (!this.#iframe.contentWindow) return;\n    const { data, source } = event;\n    const isFromEmbedWindow = source === this.#iframe.contentWindow;\n    if (!isFromEmbedWindow) return;\n    if (data.namespace === \"twitch-embed\") {\n      await new Promise((resolve) => setTimeout(resolve, 10));\n      if (data.eventName === \"ready\") {\n        this.dispatchEvent(new Event(\"loadcomplete\"));\n        this.loadComplete.resolve();\n        this.#readyState = 1;\n        this.dispatchEvent(new Event(\"loadedmetadata\"));\n      } else if (data.eventName === \"seek\") {\n        this.#seeking = true;\n        this.dispatchEvent(new Event(\"seeking\"));\n      } else if (data.eventName === \"playing\") {\n        if (this.#seeking) {\n          this.#seeking = false;\n          this.dispatchEvent(new Event(\"seeked\"));\n        }\n        this.#readyState = 3;\n        this.dispatchEvent(new Event(\"playing\"));\n      } else {\n        this.dispatchEvent(new Event(data.eventName));\n      }\n    } else if (data.namespace === \"twitch-embed-player-proxy\" && data.eventName === \"UPDATE_STATE\") {\n      const oldDuration = this.#playerState.duration;\n      const oldCurrentTime = this.#playerState.currentTime;\n      const oldVolume = this.#playerState.volume;\n      const oldMuted = this.#playerState.muted;\n      const oldBuffered = (_b = (_a = this.#playerState.stats) == null ? void 0 : _a.videoStats) == null ? void 0 : _b.bufferSize;\n      this.#playerState = { ...this.#playerState, ...data.params };\n      if (oldDuration !== this.#playerState.duration) {\n        this.dispatchEvent(new Event(\"durationchange\"));\n      }\n      if (oldCurrentTime !== this.#playerState.currentTime) {\n        this.dispatchEvent(new Event(\"timeupdate\"));\n      }\n      if (oldVolume !== this.#playerState.volume || oldMuted !== this.#playerState.muted) {\n        this.dispatchEvent(new Event(\"volumechange\"));\n      }\n      if (oldBuffered !== ((_d = (_c = this.#playerState.stats) == null ? void 0 : _c.videoStats) == null ? void 0 : _d.bufferSize)) {\n        this.dispatchEvent(new Event(\"progress\"));\n      }\n    }\n  };\n  #sendCommand(command, params) {\n    if (!this.#iframe.contentWindow) return;\n    const message = {\n      eventName: command,\n      params,\n      namespace: \"twitch-embed-player-proxy\"\n    };\n    this.#iframe.contentWindow.postMessage(message, EMBED_BASE);\n  }\n  // This is a pattern to update property values that are set before\n  // the custom element is upgraded.\n  // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n  #upgradeProperty(prop) {\n    if (Object.prototype.hasOwnProperty.call(this, prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n}\nfunction namedNodeMapToObject(namedNodeMap) {\n  let obj = {};\n  for (let attr of namedNodeMap) {\n    obj[attr.name] = attr.value;\n  }\n  return obj;\n}\nfunction serializeAttributes(attrs) {\n  let html = \"\";\n  for (const key in attrs) {\n    const value = attrs[key];\n    if (value === \"\") html += ` ${escapeHtml(key)}`;\n    else html += ` ${escapeHtml(key)}=\"${escapeHtml(`${value}`)}\"`;\n  }\n  return html;\n}\nfunction escapeHtml(str) {\n  return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\").replace(/`/g, \"&#x60;\");\n}\nfunction serialize(props) {\n  return String(new URLSearchParams(filterParams(props)));\n}\nfunction filterParams(props) {\n  let p = {};\n  for (let key in props) {\n    let val = props[key];\n    if (val === true || val === \"\") p[key] = true;\n    else if (val === false) p[key] = false;\n    else if (val != null) p[key] = val;\n  }\n  return p;\n}\nclass PublicPromise extends Promise {\n  constructor(executor = () => {\n  }) {\n    let res, rej;\n    super((resolve, reject) => {\n      executor(resolve, reject);\n      res = resolve;\n      rej = reject;\n    });\n    this.resolve = res;\n    this.reject = rej;\n  }\n}\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start == null || end == null || start === 0 && end === 0) {\n    return createTimeRangesObj([[0, 0]]);\n  }\n  return createTimeRangesObj([[start, end]]);\n}\nfunction createTimeRangesObj(ranges) {\n  Object.defineProperties(ranges, {\n    start: {\n      value: (i) => ranges[i][0]\n    },\n    end: {\n      value: (i) => ranges[i][1]\n    }\n  });\n  return ranges;\n}\nif (globalThis.customElements && !globalThis.customElements.get(\"twitch-video\")) {\n  globalThis.customElements.define(\"twitch-video\", TwitchVideoElement);\n}\nvar twitch_video_element_default = TwitchVideoElement;\nexport {\n  twitch_video_element_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}