{"ast":null,"code":"import { MediaChromeButton } from \"./media-chrome-button.js\";\nimport { globalThis } from \"./utils/server-safe-globals.js\";\nimport { MediaUIEvents, MediaUIAttributes } from \"./constants.js\";\nimport { t } from \"./utils/i18n.js\";\nimport { getBooleanAttr, setBooleanAttr, getStringAttr, setStringAttr } from \"./utils/element-utils.js\";\nconst enterIcon = \"<svg aria-hidden=\\\"true\\\" viewBox=\\\"0 0 24 24\\\"><g><path class=\\\"cast_caf_icon_arch0\\\" d=\\\"M1,18 L1,21 L4,21 C4,19.3 2.66,18 1,18 L1,18 Z\\\"/><path class=\\\"cast_caf_icon_arch1\\\" d=\\\"M1,14 L1,16 C3.76,16 6,18.2 6,21 L8,21 C8,17.13 4.87,14 1,14 L1,14 Z\\\"/><path class=\\\"cast_caf_icon_arch2\\\" d=\\\"M1,10 L1,12 C5.97,12 10,16.0 10,21 L12,21 C12,14.92 7.07,10 1,10 L1,10 Z\\\"/><path class=\\\"cast_caf_icon_box\\\" d=\\\"M21,3 L3,3 C1.9,3 1,3.9 1,5 L1,8 L3,8 L3,5 L21,5 L21,19 L14,19 L14,21 L21,21 C22.1,21 23,20.1 23,19 L23,5 C23,3.9 22.1,3 21,3 L21,3 Z\\\"/></g></svg>\";\nconst exitIcon = \"<svg aria-hidden=\\\"true\\\" viewBox=\\\"0 0 24 24\\\"><g><path class=\\\"cast_caf_icon_arch0\\\" d=\\\"M1,18 L1,21 L4,21 C4,19.3 2.66,18 1,18 L1,18 Z\\\"/><path class=\\\"cast_caf_icon_arch1\\\" d=\\\"M1,14 L1,16 C3.76,16 6,18.2 6,21 L8,21 C8,17.13 4.87,14 1,14 L1,14 Z\\\"/><path class=\\\"cast_caf_icon_arch2\\\" d=\\\"M1,10 L1,12 C5.97,12 10,16.0 10,21 L12,21 C12,14.92 7.07,10 1,10 L1,10 Z\\\"/><path class=\\\"cast_caf_icon_box\\\" d=\\\"M21,3 L3,3 C1.9,3 1,3.9 1,5 L1,8 L3,8 L3,5 L21,5 L21,19 L14,19 L14,21 L21,21 C22.1,21 23,20.1 23,19 L23,5 C23,3.9 22.1,3 21,3 L21,3 Z\\\"/><path class=\\\"cast_caf_icon_boxfill\\\" d=\\\"M5,7 L5,8.63 C8,8.6 13.37,14 13.37,17 L19,17 L19,7 Z\\\"/></g></svg>\";\nfunction getSlotTemplateHTML(_attrs) {\n  return /*html*/\"\\n    <style>\\n      :host([\".concat(MediaUIAttributes.MEDIA_IS_CASTING, \"]) slot[name=icon] slot:not([name=exit]) {\\n        display: none !important;\\n      }\\n\\n      \", \"\\n      :host(:not([\").concat(MediaUIAttributes.MEDIA_IS_CASTING, \"])) slot[name=icon] slot:not([name=enter]) {\\n        display: none !important;\\n      }\\n\\n      :host([\").concat(MediaUIAttributes.MEDIA_IS_CASTING, \"]) slot[name=tooltip-enter],\\n      :host(:not([\").concat(MediaUIAttributes.MEDIA_IS_CASTING, \"])) slot[name=tooltip-exit] {\\n        display: none;\\n      }\\n    </style>\\n\\n    <slot name=\\\"icon\\\">\\n      <slot name=\\\"enter\\\">\").concat(enterIcon, \"</slot>\\n      <slot name=\\\"exit\\\">\").concat(exitIcon, \"</slot>\\n    </slot>\\n  \");\n}\nfunction getTooltipContentHTML() {\n  return /*html*/\"\\n    <slot name=\\\"tooltip-enter\\\">\".concat(t(\"Start casting\"), \"</slot>\\n    <slot name=\\\"tooltip-exit\\\">\").concat(t(\"Stop casting\"), \"</slot>\\n  \");\n}\nconst updateAriaLabel = el => {\n  const label = el.mediaIsCasting ? t(\"stop casting\") : t(\"start casting\");\n  el.setAttribute(\"aria-label\", label);\n};\nclass MediaCastButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_IS_CASTING, MediaUIAttributes.MEDIA_CAST_UNAVAILABLE];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    updateAriaLabel(this);\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n    if (attrName === MediaUIAttributes.MEDIA_IS_CASTING) {\n      updateAriaLabel(this);\n    }\n  }\n  /**\n   * @type {boolean} Are we currently casting\n   */\n  get mediaIsCasting() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_CASTING);\n  }\n  set mediaIsCasting(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_CASTING, value);\n  }\n  /**\n   * @type {string | undefined} Cast unavailability state\n   */\n  get mediaCastUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_CAST_UNAVAILABLE);\n  }\n  set mediaCastUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_CAST_UNAVAILABLE, value);\n  }\n  handleClick() {\n    const eventName = this.mediaIsCasting ? MediaUIEvents.MEDIA_EXIT_CAST_REQUEST : MediaUIEvents.MEDIA_ENTER_CAST_REQUEST;\n    this.dispatchEvent(new globalThis.CustomEvent(eventName, {\n      composed: true,\n      bubbles: true\n    }));\n  }\n}\nMediaCastButton.getSlotTemplateHTML = getSlotTemplateHTML;\nMediaCastButton.getTooltipContentHTML = getTooltipContentHTML;\nif (!globalThis.customElements.get(\"media-cast-button\")) {\n  globalThis.customElements.define(\"media-cast-button\", MediaCastButton);\n}\nvar media_cast_button_default = MediaCastButton;\nexport { media_cast_button_default as default };","map":{"version":3,"names":["MediaChromeButton","globalThis","MediaUIEvents","MediaUIAttributes","t","getBooleanAttr","setBooleanAttr","getStringAttr","setStringAttr","enterIcon","exitIcon","getSlotTemplateHTML","_attrs","concat","MEDIA_IS_CASTING","getTooltipContentHTML","updateAriaLabel","el","label","mediaIsCasting","setAttribute","MediaCastButton","observedAttributes","MEDIA_CAST_UNAVAILABLE","connectedCallback","attributeChangedCallback","attrName","oldValue","newValue","value","mediaCastUnavailable","handleClick","eventName","MEDIA_EXIT_CAST_REQUEST","MEDIA_ENTER_CAST_REQUEST","dispatchEvent","CustomEvent","composed","bubbles","customElements","get","define","media_cast_button_default","default"],"sources":["d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/media-chrome/dist/media-cast-button.js"],"sourcesContent":["import { MediaChromeButton } from \"./media-chrome-button.js\";\nimport { globalThis } from \"./utils/server-safe-globals.js\";\nimport { MediaUIEvents, MediaUIAttributes } from \"./constants.js\";\nimport { t } from \"./utils/i18n.js\";\nimport {\n  getBooleanAttr,\n  setBooleanAttr,\n  getStringAttr,\n  setStringAttr\n} from \"./utils/element-utils.js\";\nconst enterIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\"><g><path class=\"cast_caf_icon_arch0\" d=\"M1,18 L1,21 L4,21 C4,19.3 2.66,18 1,18 L1,18 Z\"/><path class=\"cast_caf_icon_arch1\" d=\"M1,14 L1,16 C3.76,16 6,18.2 6,21 L8,21 C8,17.13 4.87,14 1,14 L1,14 Z\"/><path class=\"cast_caf_icon_arch2\" d=\"M1,10 L1,12 C5.97,12 10,16.0 10,21 L12,21 C12,14.92 7.07,10 1,10 L1,10 Z\"/><path class=\"cast_caf_icon_box\" d=\"M21,3 L3,3 C1.9,3 1,3.9 1,5 L1,8 L3,8 L3,5 L21,5 L21,19 L14,19 L14,21 L21,21 C22.1,21 23,20.1 23,19 L23,5 C23,3.9 22.1,3 21,3 L21,3 Z\"/></g></svg>`;\nconst exitIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\"><g><path class=\"cast_caf_icon_arch0\" d=\"M1,18 L1,21 L4,21 C4,19.3 2.66,18 1,18 L1,18 Z\"/><path class=\"cast_caf_icon_arch1\" d=\"M1,14 L1,16 C3.76,16 6,18.2 6,21 L8,21 C8,17.13 4.87,14 1,14 L1,14 Z\"/><path class=\"cast_caf_icon_arch2\" d=\"M1,10 L1,12 C5.97,12 10,16.0 10,21 L12,21 C12,14.92 7.07,10 1,10 L1,10 Z\"/><path class=\"cast_caf_icon_box\" d=\"M21,3 L3,3 C1.9,3 1,3.9 1,5 L1,8 L3,8 L3,5 L21,5 L21,19 L14,19 L14,21 L21,21 C22.1,21 23,20.1 23,19 L23,5 C23,3.9 22.1,3 21,3 L21,3 Z\"/><path class=\"cast_caf_icon_boxfill\" d=\"M5,7 L5,8.63 C8,8.6 13.37,14 13.37,17 L19,17 L19,7 Z\"/></g></svg>`;\nfunction getSlotTemplateHTML(_attrs) {\n  return (\n    /*html*/\n    `\n    <style>\n      :host([${MediaUIAttributes.MEDIA_IS_CASTING}]) slot[name=icon] slot:not([name=exit]) {\n        display: none !important;\n      }\n\n      ${/* Double negative, but safer if display doesn't equal 'block' */\n    \"\"}\n      :host(:not([${MediaUIAttributes.MEDIA_IS_CASTING}])) slot[name=icon] slot:not([name=enter]) {\n        display: none !important;\n      }\n\n      :host([${MediaUIAttributes.MEDIA_IS_CASTING}]) slot[name=tooltip-enter],\n      :host(:not([${MediaUIAttributes.MEDIA_IS_CASTING}])) slot[name=tooltip-exit] {\n        display: none;\n      }\n    </style>\n\n    <slot name=\"icon\">\n      <slot name=\"enter\">${enterIcon}</slot>\n      <slot name=\"exit\">${exitIcon}</slot>\n    </slot>\n  `\n  );\n}\nfunction getTooltipContentHTML() {\n  return (\n    /*html*/\n    `\n    <slot name=\"tooltip-enter\">${t(\"Start casting\")}</slot>\n    <slot name=\"tooltip-exit\">${t(\"Stop casting\")}</slot>\n  `\n  );\n}\nconst updateAriaLabel = (el) => {\n  const label = el.mediaIsCasting ? t(\"stop casting\") : t(\"start casting\");\n  el.setAttribute(\"aria-label\", label);\n};\nclass MediaCastButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_CASTING,\n      MediaUIAttributes.MEDIA_CAST_UNAVAILABLE\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    updateAriaLabel(this);\n  }\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n    if (attrName === MediaUIAttributes.MEDIA_IS_CASTING) {\n      updateAriaLabel(this);\n    }\n  }\n  /**\n   * @type {boolean} Are we currently casting\n   */\n  get mediaIsCasting() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_CASTING);\n  }\n  set mediaIsCasting(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_CASTING, value);\n  }\n  /**\n   * @type {string | undefined} Cast unavailability state\n   */\n  get mediaCastUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_CAST_UNAVAILABLE);\n  }\n  set mediaCastUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_CAST_UNAVAILABLE, value);\n  }\n  handleClick() {\n    const eventName = this.mediaIsCasting ? MediaUIEvents.MEDIA_EXIT_CAST_REQUEST : MediaUIEvents.MEDIA_ENTER_CAST_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\nMediaCastButton.getSlotTemplateHTML = getSlotTemplateHTML;\nMediaCastButton.getTooltipContentHTML = getTooltipContentHTML;\nif (!globalThis.customElements.get(\"media-cast-button\")) {\n  globalThis.customElements.define(\"media-cast-button\", MediaCastButton);\n}\nvar media_cast_button_default = MediaCastButton;\nexport {\n  media_cast_button_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}