{"ast":null,"code":"import _classPrivateFieldInitSpec from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldSet from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\nimport _classPrivateFieldGet from \"d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport { RenditionEvent } from \"./rendition-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addRendition(track, rendition) {\n  const renditionList = getPrivate(track).media.audioRenditions;\n  getPrivate(rendition).media = getPrivate(track).media;\n  getPrivate(rendition).track = track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.add(rendition);\n  const index = renditionSet.size - 1;\n  if (!(index in AudioRenditionList.prototype)) {\n    Object.defineProperty(AudioRenditionList.prototype, index, {\n      get() {\n        return getCurrentRenditions(this)[index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    if (!track.enabled) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"addrendition\", {\n      rendition\n    }));\n  });\n}\nfunction removeRendition(rendition) {\n  const renditionList = getPrivate(rendition).media.audioRenditions;\n  const track = getPrivate(rendition).track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.delete(rendition);\n  queueMicrotask(() => {\n    const track2 = getPrivate(rendition).track;\n    if (!track2.enabled) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"removerendition\", {\n      rendition\n    }));\n  });\n}\nfunction selectedChanged(rendition) {\n  const renditionList = getPrivate(rendition).media.audioRenditions;\n  if (!renditionList || getPrivate(renditionList).changeRequested) return;\n  getPrivate(renditionList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(renditionList).changeRequested;\n    const track = getPrivate(rendition).track;\n    if (!track.enabled) return;\n    renditionList.dispatchEvent(new Event(\"change\"));\n  });\n}\nfunction getCurrentRenditions(renditionList) {\n  const media = getPrivate(renditionList).media;\n  return [...media.audioTracks].filter(track => track.enabled).flatMap(track => [...getPrivate(track).renditionSet]);\n}\nvar _addRenditionCallback = /*#__PURE__*/new WeakMap();\nvar _removeRenditionCallback = /*#__PURE__*/new WeakMap();\nvar _changeCallback = /*#__PURE__*/new WeakMap();\nclass AudioRenditionList extends EventTarget {\n  constructor() {\n    super(...arguments);\n    _classPrivateFieldInitSpec(this, _addRenditionCallback, void 0);\n    _classPrivateFieldInitSpec(this, _removeRenditionCallback, void 0);\n    _classPrivateFieldInitSpec(this, _changeCallback, void 0);\n  }\n  [Symbol.iterator]() {\n    return getCurrentRenditions(this).values();\n  }\n  get length() {\n    return getCurrentRenditions(this).length;\n  }\n  getRenditionById(id) {\n    var _getCurrentRenditions;\n    return (_getCurrentRenditions = getCurrentRenditions(this).find(rendition => \"\".concat(rendition.id) === \"\".concat(id))) !== null && _getCurrentRenditions !== void 0 ? _getCurrentRenditions : null;\n  }\n  get selectedIndex() {\n    return getCurrentRenditions(this).findIndex(rendition => rendition.selected);\n  }\n  set selectedIndex(index) {\n    for (const [i, rendition] of getCurrentRenditions(this).entries()) {\n      rendition.selected = i === index;\n    }\n  }\n  get onaddrendition() {\n    return _classPrivateFieldGet(_addRenditionCallback, this);\n  }\n  set onaddrendition(callback) {\n    if (_classPrivateFieldGet(_addRenditionCallback, this)) {\n      this.removeEventListener(\"addrendition\", _classPrivateFieldGet(_addRenditionCallback, this));\n      _classPrivateFieldSet(_addRenditionCallback, this, void 0);\n    }\n    if (typeof callback == \"function\") {\n      _classPrivateFieldSet(_addRenditionCallback, this, callback);\n      this.addEventListener(\"addrendition\", callback);\n    }\n  }\n  get onremoverendition() {\n    return _classPrivateFieldGet(_removeRenditionCallback, this);\n  }\n  set onremoverendition(callback) {\n    if (_classPrivateFieldGet(_removeRenditionCallback, this)) {\n      this.removeEventListener(\"removerendition\", _classPrivateFieldGet(_removeRenditionCallback, this));\n      _classPrivateFieldSet(_removeRenditionCallback, this, void 0);\n    }\n    if (typeof callback == \"function\") {\n      _classPrivateFieldSet(_removeRenditionCallback, this, callback);\n      this.addEventListener(\"removerendition\", callback);\n    }\n  }\n  get onchange() {\n    return _classPrivateFieldGet(_changeCallback, this);\n  }\n  set onchange(callback) {\n    if (_classPrivateFieldGet(_changeCallback, this)) {\n      this.removeEventListener(\"change\", _classPrivateFieldGet(_changeCallback, this));\n      _classPrivateFieldSet(_changeCallback, this, void 0);\n    }\n    if (typeof callback == \"function\") {\n      _classPrivateFieldSet(_changeCallback, this, callback);\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport { AudioRenditionList, addRendition, removeRendition, selectedChanged };","map":{"version":3,"names":["RenditionEvent","getPrivate","addRendition","track","rendition","renditionList","media","audioRenditions","renditionSet","add","index","size","AudioRenditionList","prototype","Object","defineProperty","get","getCurrentRenditions","queueMicrotask","enabled","dispatchEvent","removeRendition","delete","track2","selectedChanged","changeRequested","Event","audioTracks","filter","flatMap","_addRenditionCallback","WeakMap","_removeRenditionCallback","_changeCallback","EventTarget","constructor","arguments","_classPrivateFieldInitSpec","Symbol","iterator","values","length","getRenditionById","id","_getCurrentRenditions","find","concat","selectedIndex","findIndex","selected","i","entries","onaddrendition","_classPrivateFieldGet","callback","removeEventListener","_classPrivateFieldSet","addEventListener","onremoverendition","onchange"],"sources":["d:/Users/User55/Documents/GitHub/Vk-marusya-app/node_modules/media-tracks/dist/audio-rendition-list.js"],"sourcesContent":["import { RenditionEvent } from \"./rendition-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addRendition(track, rendition) {\n  const renditionList = getPrivate(track).media.audioRenditions;\n  getPrivate(rendition).media = getPrivate(track).media;\n  getPrivate(rendition).track = track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.add(rendition);\n  const index = renditionSet.size - 1;\n  if (!(index in AudioRenditionList.prototype)) {\n    Object.defineProperty(AudioRenditionList.prototype, index, {\n      get() {\n        return getCurrentRenditions(this)[index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    if (!track.enabled) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"addrendition\", { rendition }));\n  });\n}\nfunction removeRendition(rendition) {\n  const renditionList = getPrivate(rendition).media.audioRenditions;\n  const track = getPrivate(rendition).track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.delete(rendition);\n  queueMicrotask(() => {\n    const track2 = getPrivate(rendition).track;\n    if (!track2.enabled) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"removerendition\", { rendition }));\n  });\n}\nfunction selectedChanged(rendition) {\n  const renditionList = getPrivate(rendition).media.audioRenditions;\n  if (!renditionList || getPrivate(renditionList).changeRequested) return;\n  getPrivate(renditionList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(renditionList).changeRequested;\n    const track = getPrivate(rendition).track;\n    if (!track.enabled) return;\n    renditionList.dispatchEvent(new Event(\"change\"));\n  });\n}\nfunction getCurrentRenditions(renditionList) {\n  const media = getPrivate(renditionList).media;\n  return [...media.audioTracks].filter((track) => track.enabled).flatMap((track) => [...getPrivate(track).renditionSet]);\n}\nclass AudioRenditionList extends EventTarget {\n  #addRenditionCallback;\n  #removeRenditionCallback;\n  #changeCallback;\n  [Symbol.iterator]() {\n    return getCurrentRenditions(this).values();\n  }\n  get length() {\n    return getCurrentRenditions(this).length;\n  }\n  getRenditionById(id) {\n    return getCurrentRenditions(this).find((rendition) => `${rendition.id}` === `${id}`) ?? null;\n  }\n  get selectedIndex() {\n    return getCurrentRenditions(this).findIndex((rendition) => rendition.selected);\n  }\n  set selectedIndex(index) {\n    for (const [i, rendition] of getCurrentRenditions(this).entries()) {\n      rendition.selected = i === index;\n    }\n  }\n  get onaddrendition() {\n    return this.#addRenditionCallback;\n  }\n  set onaddrendition(callback) {\n    if (this.#addRenditionCallback) {\n      this.removeEventListener(\"addrendition\", this.#addRenditionCallback);\n      this.#addRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addRenditionCallback = callback;\n      this.addEventListener(\"addrendition\", callback);\n    }\n  }\n  get onremoverendition() {\n    return this.#removeRenditionCallback;\n  }\n  set onremoverendition(callback) {\n    if (this.#removeRenditionCallback) {\n      this.removeEventListener(\"removerendition\", this.#removeRenditionCallback);\n      this.#removeRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeRenditionCallback = callback;\n      this.addEventListener(\"removerendition\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  AudioRenditionList,\n  addRendition,\n  removeRendition,\n  selectedChanged\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}